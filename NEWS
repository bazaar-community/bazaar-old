IN DEVELOPMENT

  CHANGES:

   * The default branch and repository format has changed to 
     ``dirstate-tags``, so tag commands are active by default.
     This format is compatible with Bazaar 0.15 and later.
     (Martin Pool)

  FEATURES:

    * New option ``--author`` in ``bzr commit`` to specify the author of the
      change, if it's different from the committer.  (Lukáš Lalinský)

  BUG FIXES:

    * Suppress warning "integer argument expected, got float" from Paramiko,
      which sometimes caused false test failures.  (Martin Pool)

    * Fix bug in bundle 4 that could cause attempts to write data to wrong
      versionedfile.  (Aaron Bentley)

    * Diffs generated using "diff -p" no longer break the patch parser.
      (Aaron Bentley)

    * get_transport treats an empty possible_transports list the same as a non-
      empty one.  (Aaron Bentley)

  IMPROVEMENTS:

    * ``pull`` and ``merge`` are much faster at installing bundle format 4.
      (Aaron Bentley)

    * ``pull -v`` no longer includes deltas, making it much faster.
      (Aaron Bentley)

  API BREAKS:

   * ``Branch.append_revision`` is removed altogether; please use 
     ``Branch.set_last_revision_info`` instead.  (Martin Pool)

   * ``Transport.should_cache`` has been removed.  It was not called in the
     previous release.  (Martin Pool)

  TESTING:

   * Tests may now raise TestNotApplicable to indicate they shouldn't be 
     run in a particular scenario.  (Martin Pool)

   * New function multiply_tests_from_modules to give a simpler interface
     to test parameterization.  (Martin Pool, Robert Collins)

bzr 0.90rc1 2007-08-14

  BUGFIXES:

    * ``bzr init`` should connect to the remote location one time only.  We
      have been connecting several times because we forget to pass around the
      Transport object. This modifies ``BzrDir.create_branch_convenience``,
      so that we can give it the Transport we already have.
      (John Arbash Meinel, Vincent Ladeuil, #111702)

    * Get rid of sftp connection cache (get rid of the FTP one too).
      (Vincent Ladeuil, #43731)

    * bzr branch {local|remote} remote don't try to create a working tree
      anymore.
      (Vincent Ladeuil, #112173)

    * All identified multiple connections for a single bzr command have been
      fixed. See bzrlib/tests/commands directory.
      (Vincent Ladeuil)

    * ``bzr rm`` now does not insist on ``--force`` to delete files that
      have been renamed but not otherwise modified.  (Marius Kruger,
      #111664)

    * ``bzr selftest --bench`` no longer emits deprecation warnings
      (Lukáš Lalinský)

    * ``bzr status`` now honours FILE parameters for conflict lists
      (Aaron Bentley, #127606)

    * ``bzr checkout`` now honours -r when reconstituting a working tree.
      It also honours -r 0.  (Aaron Bentley, #127708)

    * ``bzr add *`` no more fails on Windows if working tree contains
      non-ascii file names. (Kuno Meyer, #127361)

    * allow ``easy_install bzr`` runs without fatal errors. 
      (Alexander Belchenko, #125521)

    * Graph._filter_candidate_lca does not raise KeyError if a candidate
      is eliminated just before it would normally be examined.  (Aaron Bentley)

    * SMTP connection failures produce a nice message, not a traceback.
      (Aaron Bentley)

  IMPROVEMENTS:

    * Don't show "dots" progress indicators when run non-interactively, such
      as from cron.  (Martin Pool)

    * ``info`` now formats locations more nicely and lists "submit" and
      "public" branches (Aaron Bentley)

    * New ``pack`` command that will trigger database compression within
      the repository (Robert Collins)

    * Implement ``_KnitIndex._load_data`` in a pyrex extension. The pyrex
      version is approximately 2-3x faster at parsing a ``.kndx`` file.
      Which yields a measurable improvement for commands which have to
      read from the repository, such as a 1s => 0.75s improvement in
      ``bzr diff`` when there are changes to be shown.  (John Arbash Meinel)

    * Merge is now faster.  Depending on the scenario, it can be more than 2x
      faster. (Aaron Bentley)

    * Give a clearer warning, and allow ``python setup.py install`` to
      succeed even if pyrex is not available.
      (John Arbash Meinel)

    * ``DirState._read_dirblocks`` now has an optional Pyrex
      implementation. This improves the speed of any command that has to
      read the entire DirState. (``diff``, ``status``, etc, improve by
      about 10%).
      ``bisect_dirblocks`` has also been improved, which helps all
      ``_get_entry`` type calls (whenever we are searching for a
      particular entry in the in-memory DirState).
      (John Arbash Meinel)

    * ``bzr pull`` and ``bzr push`` no longer do a complete walk of the 
      branch revision history for ui display unless -v is supplied.
      (Robert Collins)

    * ``bzr log -rA..B`` output shifted to the left margin if the log only 
      contains merge revisions. (Kent Gibson) 

    * The ``plugins`` command is now public with improved help.
      (Ian Clatworthy)

    * New bundle and merge directive formats are faster to generate, and

    * Annotate merge now works when there are local changes. (Aaron Bentley)

    * Commit now only shows the progress in terms of directories instead of
      entries. (Ian Clatworthy)

    * Fix ``KnitRepository.get_revision_graph`` to not request the graph 2
      times. This makes ``get_revision_graph`` 2x faster. (John Arbash
      Meinel)

    * Fix ``VersionedFile.get_graph()`` to avoid using
      ``set.difference_update(other)``, which has bad scaling when
      ``other`` is large. This improves ``VF.get_graph([version_id])`` for
      a 12.5k graph from 2.9s down to 200ms. (John Arbash Meinel)

    * The ``--lsprof-file`` option now generates output for KCacheGrind if
      the file starts with ``callgrind.out``. This matches the default file
      filtering done by KCacheGrind's Open Dialog. (Ian Clatworthy)

    * Fix ``bzr update`` to avoid an unnecessary
      ``branch.get_master_branch`` call, which avoids 1 extra connection
      to the remote server. (Partial fix for #128076, John Arbash Meinel)

    * Log errors from the smart server in the trace file, to make debugging 
      test failures (and live failures!) easier.  (Andrew Bennetts)

    * The HTML version of the man page has been superceded by a more
      comprehensive manual called the Bazaar User Reference. This manual
      is completed generated from the online help topics. As part of this
      change, limited reStructuredText is now explicitly supported in help
      topics and command help with 'unnatural' markup being removed prior
      to display by the online help or inclusion in the man page.
      (Ian Clatworthy)

    * HTML documentation now use files extension *.html (Alexander Belchenko)

    * The cache of ignore definitions is now cleared in WorkingTree.unlock()
      so that changes to .bzrignore aren't missed. (#129694, Daniel Watkins)

    * ``bzr selftest --strict'' fails if there are any missing features or
      expected test failures. (Daniel Watkins, #111914)

    * Link to registration survey added to README. (Ian Clatworthy)

    * Windows standalone installer show link to registration survey
      when installation finished. (Alexander Belchenko)

  LIBRARY API BREAKS:

    * Deprecated dictionary ``bzrlib.option.SHORT_OPTIONS`` removed.
      Options are now required to provide a help string and it must
      comply with the style guide by being one or more sentences with an
      initial capital and final period. (Martin Pool)

    * KnitIndex.get_parents now returns tuples. (Robert Collins)

    * Ancient unused ``Repository.text_store`` attribute has been removed.
      (Robert Collins)

    * The ``bzrlib.pack`` interface has changed to use tuples of bytestrings
      rather than just bytestrings, making it easier to represent multiple
      element names. As this interface was not used by any internal facilities
      since it was introduced in 0.18 no API compatibility is being preserved.
      The serialised form of these packs is identical with 0.18 when a single
      element tuple is in use. (Robert Collins)

  INTERNALS:

    * merge now uses ``iter_changes`` to calculate changes, which makes room for
      future performance increases.  It is also more consistent with other
      operations that perform comparisons, and reduces reliance on
      Tree.inventory.  (Aaron Bentley)

    * Refactoring of transport classes connected to a remote server.
      ConnectedTransport is a new class that serves as a basis for all
      transports needing to connect to a remote server.  transport.split_url
      have been deprecated, use the static method on the object instead. URL
      tests have been refactored too.
      (Vincent Ladeuil)

    * Better connection sharing for ConnectedTransport objects.
      transport.get_transport() now accepts a 'possible_transports' parameter.
      If a newly requested transport can share a connection with one of the
      list, it will.
      (Vincent Ladeuil)

    * Most functions now accept ``bzrlib.revision.NULL_REVISION`` to indicate
      the null revision, and consider using ``None`` for this purpose
      deprecated.  (Aaron Bentley)

    * New ``index`` module with abstract index functionality. This will be
      used during the planned changes in the repository layer. Currently the
      index layer provides a graph aware immutable index, a builder for the
      same index type to allow creating them, and finally a composer for
      such indices to allow the use of many indices in a single query. The
      index performance is not optimised, however the API is stable to allow
      development on top of the index. (Robert Collins)

    * ``bzrlib.dirstate.cmp_by_dirs`` can be used to compare two paths by
      their directory sections. This is equivalent to comparing
      ``path.split('/')``, only without having to split the paths.
      This has a Pyrex implementation available.
      (John Arbash Meinel)

    * New transport decorator 'unlistable+' which disables the list_dir
      functionality for testing.

    * Deprecated ``change_entry`` in transform.py. (Ian Clatworthy)

    * RevisionTree.get_weave is now deprecated.  Tree.plan_merge is now used
      for performing annotate-merge.  (Aaron Bentley)

    * New EmailMessage class to create email messages. (Adeodato Simó)

    * Unused functions on the private interface KnitIndex have been removed.
      (Robert Collins)

    * New ``knit.KnitGraphIndex`` which provides a ``KnitIndex`` layered on top
      of a ``index.GraphIndex``. (Robert Collins)

    * New ``knit.KnitVersionedFile.iter_parents`` method that allows querying
      the parents of many knit nodes at once, reducing round trips to the 
      underlying index. (Robert Collins)

    * Graph now has an is_ancestor method, various bits use it.
      (Aaron Bentley)

    * The ``-Dhpss`` flag now includes timing information. As well as
      logging when a new connection is opened. (John Arbash Meinel)

    * ``bzrlib.pack.ContainerWriter`` now returns an offset, length tuple to
      callers when inserting data, allowing generation of readv style access
      during pack creation, without needing a separate pass across the output
      pack to gather such details. (Robert Collins)

    * ``bzrlib.pack.make_readv_reader`` allows readv based access to pack
      files that are stored on a transport. (Robert Collins)

    * New ``Repository.has_same_location`` method that reports if two
      repository objects refer to the same repository (although with some risk
      of false negatives).  (Andrew Bennetts)

    * InterTree.compare now passes require_versioned on correctly.
      (Marius Kruger)

    * New methods on Repository - ``start_write_group``,
      ``commit_write_group``, ``abort_write_group`` and ``is_in_write_group`` -
      which provide a clean hook point for transactional Repositories - ones
      where all the data for a fetch or commit needs to be made atomically
      available in one step. This allows the write lock to remain while making
      a series of data insertions.  (e.g. data conversion). (Robert Collins)

    * In ``bzrlib.knit`` the internal interface has been altered to use
      3-tuples (index, pos, length) rather than two-tuples (pos, length) to
      describe where data in a knit is, allowing knits to be split into 
      many files. (Robert Collins)

    * ``bzrlib.knit._KnitData`` split into cache management and physical access
      with two access classes - ``_PackAccess`` and ``_KnitAccess`` defined.
      The former provides access into a .pack file, and the latter provides the
      current production repository form of .knit files. (Robert Collins)

  TESTING:

    * Remove selftest ``--clean-output``, ``--numbered-dirs`` and
      ``--keep-output`` options, which are obsolete now that tests
      are done within directories in $TMPDIR.  (Martin Pool)

    * The SSH_AUTH_SOCK environment variable is now reset to avoid 
      interaction with any running ssh agents.  (Jelmer Vernooij, #125955)

    * run_bzr_subprocess handles parameters the same way as run_bzr:
      either a string or a list of strings should be passed as the first
      parameter.  Varargs-style parameters are deprecated. (Aaron Bentley)


bzr 0.18  2007-07-17

  BUGFIXES:

    * Fix 'bzr add' crash under Win32 (Kuno Meyer)


bzr 0.18rc1  2007-07-10

  BUGFIXES:

    * Do not suppress pipe errors, etc. in non-display commands
      (Alexander Belchenko, #87178)

    * Display a useful error message when the user requests to annotate
      a file that is not present in the specified revision.
      (James Westby, #122656)

    * Commands that use status flags now have a reference to 'help
      status-flags'.  (Daniel Watkins, #113436)

    * Work around python-2.4.1 inhability to correctly parse the
      authentication header.
      (Vincent Ladeuil, #121889)

    * Use exact encoding for merge directives. (Adeodato Simó, #120591)

    * Fix tempfile permissions error in smart server tar bundling under
      Windows. (Martin _, #119330)

    * Fix detection of directory entries in the inventory. (James Westby)

    * Fix handling of http code 400: Bad Request When issuing too many ranges.
      (Vincent Ladeuil, #115209)

    * Issue a CONNECT request when connecting to an https server
      via a proxy to enable SSL tunneling.
      (Vincent Ladeuil, #120678)

    * Fix ``bzr log -r`` to support selecting merge revisions, both 
      individually and as part of revision ranges.
      (Kent Gibson, #4663)
 
    * Don't leave cruft behind when failing to acquire a lockdir.
      (Martin Pool, #109169)

    * Don't use the '-f' strace option during tests.
      (Vincent Ladeuil, #102019).

    * Warn when setting ``push_location`` to a value that will be masked by
      locations.conf.  (Aaron Bentley, #122286)

    * Fix commit ordering in corner case (Aaron Bentley, #94975)

    *  Make annotate behave in a non-ASCII world (Adeodato Simó).

  IMPROVEMENTS:

    * The --lsprof-file option now dumps a text rendering of the profiling
      information if the filename ends in ".txt". It will also convert the
      profiling information to a format suitable for KCacheGrind if the
      output filename ends in ".callgrind". Fixes to the lsprofcalltree
      conversion process by Jean Paul Calderone and Itamar were also merged.
      See http://ddaa.net/blog/python/lsprof-calltree. (Ian Clatworthy)

    * ``info`` now defaults to non-verbose mode, displaying only paths and
      abbreviated format info.  ``info -v`` displays all the information
      formerly displayed by ``info``.  (Aaron Bentley, Adeodato Simó)

    * ``bzr missing`` now has better option names ``--this`` and ``--other``.
      (Elliot Murphy)

    * The internal ``weave-list`` command has become ``versionedfile-list``,
      and now lists knits as well as weaves.  (Aaron Bentley)

    * Automatic merge base selection uses a faster algorithm that chooses
      better bases in criss-cross merge situations (Aaron Bentley)

    * Progress reporting in ``commit`` has been improved. The various logical
      stages are now reported on as follows, namely:

      * Collecting changes [Entry x/y] - Stage n/m
      * Saving data locally - Stage n/m
      * Uploading data to master branch - Stage n/m
      * Updating the working tree - Stage n/m
      * Running post commit hooks - Stage n/m
      
      If there is no master branch, the 3rd stage is omitted and the total
      number of stages is adjusted accordingly.

      Each hook that is run after commit is listed with a name (as hooks
      can be slow it is useful feedback).
      (Ian Clatworthy, Robert Collins)

    * Various operations that are now faster due to avoiding unnecessary
      topological sorts. (Aaron Bentley)

    * Make merge directives robust against broken bundles. (Aaron Bentley)

    * The lsprof filename note is emitted via trace.note(), not standard
      output.  (Aaron Bentley)

    * ``bzrlib`` now exports explicit API compatibility information to assist
      library users and plugins. See the ``bzrlib.api`` module for details.
      (Robert Collins)

    * Remove unnecessary lock probes when acquiring a lockdir.
      (Martin Pool)

    * ``bzr --version`` now shows the location of the bzr log file, which
      is especially useful on Windows.  (Martin Pool)

    * -D now supports hooks to get debug tracing of hooks (though its currently
      minimal in nature). (Robert Collins)

    * Long log format reports deltas on merge revisions. 
      (John Arbash Meinel, Kent Gibson)

    * Make initial push over ftp more resilient. (John Arbash Meinel)

    * Print a summary of changes for update just like pull does.
      (Daniel Watkins, #113990)

    * Add a -Dhpss option to trace smart protocol requests and responses.
      (Andrew Bennetts)

  LIBRARY API BREAKS:

    * Testing cleanups - 
      ``bzrlib.repository.RepositoryTestProviderAdapter`` has been moved
      to ``bzrlib.tests.repository_implementations``;
      ``bzrlib.repository.InterRepositoryTestProviderAdapter`` has been moved
      to ``bzrlib.tests.interrepository_implementations``;
      ``bzrlib.transport.TransportTestProviderAdapter`` has moved to 
      ``bzrlib.tests.test_transport_implementations``.
      ``bzrlib.branch.BranchTestProviderAdapter`` has moved to
      ``bzrlib.tests.branch_implementations``.
      ``bzrlib.bzrdir.BzrDirTestProviderAdapter`` has moved to 
      ``bzrlib.tests.bzrdir_implementations``.
      ``bzrlib.versionedfile.InterVersionedFileTestProviderAdapter`` has moved
      to ``bzrlib.tests.interversionedfile_implementations``.
      ``bzrlib.store.revision.RevisionStoreTestProviderAdapter`` has moved to
      ``bzrlib.tests.revisionstore_implementations``.
      ``bzrlib.workingtree.WorkingTreeTestProviderAdapter`` has moved to
      ``bzrlib.tests.workingtree_implementations``.
      These changes are an API break in the testing infrastructure only.
      (Robert Collins)

    * Relocate TestCaseWithRepository to be more central. (Robert Collins)

    * ``bzrlib.add.smart_add_tree`` will no longer perform glob expansion on
      win32. Callers of the function should do this and use the new
      ``MutableTree.smart_add`` method instead. (Robert Collins)

    * ``bzrlib.add.glob_expand_for_win32`` is now
      ``bzrlib.win32utils.glob_expand``.  (Robert Collins)

    * ``bzrlib.add.FastPath`` is now private and moved to 
      ``bzrlib.mutabletree._FastPath``. (Robert Collins, Martin Pool)

    * ``LockDir.wait`` removed.  (Martin Pool)

    * The ``SmartServer`` hooks API has changed for the ``server_started`` and
      ``server_stopped`` hooks. The first parameter is now an iterable of
      backing URLs rather than a single URL. This is to reflect that many
      URLs may map to the external URL of the server. E.g. the server interally
      may have a chrooted URL but also the local file:// URL will be at the 
      same location. (Robert Collins)

  INTERNALS:

    * New SMTPConnection class to unify email handling.  (Adeodato Simó)

    * Fix documentation of BzrError. (Adeodato Simó)

    * Make BzrBadParameter an internal error. (Adeodato Simó)

    * Remove use of 'assert False' to raise an exception unconditionally.
      (Martin Pool)

    * Give a cleaner error when failing to decode knit index entry.
      (Martin Pool)

    * TreeConfig would mistakenly search the top level when asked for options
      from a section. It now respects the section argument and only
      searches the specified section. (James Westby)

    * Improve ``make api-docs`` output. (John Arbash Meinel)

    * Use os.lstat rather than os.stat for osutils.make_readonly and
      osutils.make_writeable. This makes the difftools plugin more
      robust when dangling symlinks are found. (Elliot Murphy)

    * New ``-Dlock`` option to log (to ~/.bzr.log) information on when 
      lockdirs are taken or released.  (Martin Pool)

    * ``bzrlib`` Hooks are now nameable using ``Hooks.name_hook``. This 
      allows a nicer UI when hooks are running as the current hook can
      be displayed. (Robert Collins)

    * ``Transport.get`` has had its interface made more clear for ease of use.
      Retrieval of a directory must now fail with either 'PathError' at open
      time, or raise 'ReadError' on a read. (Robert Collins)

    * New method ``_maybe_expand_globs`` on the ``Command`` class for 
      dealing with unexpanded glob lists - e.g. on the win32 platform. This
      was moved from ``bzrlib.add._prepare_file_list``. (Robert Collins)

    * ``bzrlib.add.smart_add`` and ``bzrlib.add.smart_add_tree`` are now
      deprecated in favour of ``MutableTree.smart_add``. (Robert Collins,
      Martin Pool)

    * New method ``external_url`` on Transport for obtaining the url to
      hand to external processes. (Robert Collins)

    * Teach windows installers to build pyrex/C extensions.
      (Alexander Belchenko)

  TESTING:

    * Removed the ``--keep-output`` option from selftest and clean up test
      directories as they're used.  This reduces the IO load from 
      running the test suite and cuts the time by about half.
      (Andrew Bennetts, Martin Pool)

    * Add scenarios as a public attribute on the TestAdapter classes to allow
      modification of the generated scenarios before adaption and easier
      testing. (Robert Collins)

    * New testing support class ``TestScenarioApplier`` which multiplies
      out a single teste by a list of supplied scenarios. (RobertCollins)

    * Setting ``repository_to_test_repository`` on a repository_implementations
      test will cause it to be called during repository creation, allowing the
      testing of repository classes which are not based around the Format
      concept. For example a repository adapter can be tested in this manner,
      by altering the repository scenarios to include a scenario that sets this
      attribute during the test parameterisation in
      ``bzrlib.tests.repository.repository_implementations``. (Robert Collins)

    * Clean up many of the APIs for blackbox testing of Bazaar.  The standard 
      interface is now self.run_bzr.  The command to run can be passed as
      either a list of parameters, a string containing the command line, or
      (deprecated) varargs parameters.  (Martin Pool)

    * The base TestCase now isolates tests from -D parameters by clearing
      ``debug.debug_flags`` and restores it afterwards. (Robert Collins)

    * Add a relpath parameter to get_transport methods in test framework to
      avoid useless cloning.
      (Vincent Ladeuil, #110448)


bzr 0.17  2007-06-18

  BUGFIXES:

    * Fix crash of commit due to wrong lookup of filesystem encoding.
      (Colin Watson, #120647)

    * Revert logging just to stderr in commit as broke unicode filenames.
      (Aaron Bentley, Ian Clatworthy, #120930)


bzr 0.17rc1  2007-06-12

  NOTES WHEN UPGRADING:

    * The kind() and is_executable() APIs on the WorkingTree interface no
      longer implicitly (read) locks and unlocks the tree. This *might*
      impact some plug-ins and tools using this part of the API. If you find
      an issue that may be caused by this change, please let us know,
      particularly the plug-in/tool maintainer. If encountered, the API
      fix is to surround kind() and is_executable() calls with lock_read()
      and unlock() like so::

        work_tree.lock_read()
        try:
            kind = work_tree.kind(...)
        finally:
            work_tree.unlock()

  INTERNALS:
    * Rework of LogFormatter API to provide beginning/end of log hooks and to
      encapsulate the details of the revision to be logged in a LogRevision
      object.
      In long log formats, merge revision ids are only shown when --show-ids
      is specified, and are labelled "revision-id:", as per mainline
      revisions, instead of "merged:". (Kent Gibson)

    * New ``BranchBuilder`` API which allows the construction of particular
      histories quickly. Useful for testing and potentially other applications
      too. (Robert Collins)

  IMPROVEMENTS:
  
    * There are two new help topics, working-trees and repositories that
      attempt to explain these concepts. (James Westby, John Arbash Meinel,
      Aaron Bentley)

    * Added ``bzr log --limit`` to report a limited number of revisions.
      (Kent Gibson, #3659)

    * Revert does not try to preserve file contents that were originally
      produced by reverting to a historical revision.  (Aaron Bentley)

    * ``bzr log --short`` now includes ``[merge]`` for revisions which
      have more than one parent. This is a small improvement to help
      understanding what changes have occurred
      (John Arbash Meinel, #83887)

    * TreeTransform avoids many renames when contructing large trees,
      improving speed.  3.25x speedups have been observed for construction of
      kernel-sized-trees, and checkouts are 1.28x faster.  (Aaron Bentley)

    * Commit on large trees is now faster. In my environment, a commit of
      a small change to the Mozilla tree (55k files) has dropped from
      66 seconds to 32 seconds. For a small tree of 600 files, commit of a
      small change is 33% faster. (Ian Clatworthy)

    * New --create-prefix option to bzr init, like for push.  (Daniel Watkins,
      #56322)

  BUGFIXES:

    * ``bzr push`` should only connect to the remote location one time.
      We have been connecting 3 times because we forget to pass around
      the Transport object. This adds ``BzrDir.clone_on_transport()``, so
      that we can pass in the Transport that we already have.
      (John Arbash Meinel, #75721)

    * ``DirState.set_state_from_inventory()`` needs to properly order
      based on split paths, not just string paths.
      (John Arbash Meinel, #115947)

    * Let TestUIFactoy encode the password prompt with its own stdout.
      (Vincent Ladeuil, #110204)

    * pycurl should take use the range header that takes the range hint
      into account.
      (Vincent Ladeuil, #112719)

    * WorkingTree4.get_file_sha1 no longer raises an exception when invoked
      on a missing file.  (Aaron Bentley, #118186)

    * WorkingTree.remove works correctly with tree references, and when pwd is
      not the tree root. (Aaron Bentley)

    * Merge no longer fails when a file is renamed in one tree and deleted
      in the other. (Aaron Bentley, #110279)

    * ``revision-info`` now accepts dotted revnos, doesn't require a tree,
      and defaults to the last revision (Matthew Fuller, #90048)

    * Tests no longer fail when BZR_REMOTE_PATH is set in the environment.
      (Daniel Watkins, #111958)

    * ``bzr branch -r revid:foo`` can be used to branch any revision in
      your repository. (Previously Branch6 only supported revisions in your
      mainline). (John Arbash Meinel, #115343)

bzr 0.16  2007-05-07
  
  BUGFIXES:

    * Handle when you have 2 directories with similar names, but one has a
      hyphen. (``'abc'`` versus ``'abc-2'``). The WT4._iter_changes
      iterator was using direct comparison and ``'abc/a'`` sorts after
      ``'abc-2'``, but ``('abc', 'a')`` sorts before ``('abc-2',)``.
      (John Arbash Meinel, #111227)

    * Handle when someone renames a file on disk without telling bzr.
      Previously we would report the first file as missing, but not show
      the new unknown file. (John Arbash Meinel, #111288)

    * Avoid error when running hooks after pulling into or pushing from
      a branch bound to a smartserver branch.  (Martin Pool, #111968)

  IMPROVEMENTS:

    * Move developer documentation to doc/developers/. This reduces clutter in
      the root of the source tree and allows HACKING to be split into multiple
      files. (Robert Collins, Alexander Belchenko)

    * Clean up the ``WorkingTree4._iter_changes()`` internal loops as well as
      ``DirState.update_entry()``. This optimizes the core logic for ``bzr
      diff`` and ``bzr status`` significantly improving the speed of
      both. (John Arbash Meinel)

bzr 0.16rc2  2007-04-30

  BUGFIXES:

    * Handle the case when you delete a file, and then rename another file
      on top of it. Also handle the case of ``bzr rm --keep foo``. ``bzr
      status`` should show the removed file and an unknown file in its
      place. (John Arbash Meinel, #109993)

    * Bundles properly read and write revision properties that have an
      empty value. And when the value is not ASCII.
      (John Arbash Meinel, #109613)

    * Fix the bzr commit message to be in text mode.
      (Alexander Belchenko, #110901)

    * Also handle when you rename a file and create a file where it used
      to be. (John Arbash Meinel, #110256)

    * ``WorkingTree4._iter_changes`` should not descend into unversioned
      directories. (John Arbash Meinel, #110399)

bzr 0.16rc1  2007-04-26

  NOTES WHEN UPGRADING:

    * ``bzr remove`` and ``bzr rm`` will now remove the working file, if
      it could be recovered again.
      This has been done for consistency with svn and the unix rm command.
      The old ``remove`` behaviour has been retained in the new option
      ``bzr remove --keep``, which will just stop versioning the file,
      but not delete it.
      ``bzr remove --force`` have been added which will always delete the
      files.
      ``bzr remove`` is also more verbose.
      (Marius Kruger, #82602)

  IMPROVEMENTS:

    * Merge directives can now be supplied as input to `merge` and `pull`,
      like bundles can.  (Aaron Bentley)

    * Sending the SIGQUIT signal to bzr, which can be done on Unix by
      pressing Control-Backslash, drops bzr into a debugger.  Type ``'c'``
      to continue.  This can be disabled by setting the environment variable
      ``BZR_SIGQUIT_PDB=0``.  (Martin Pool)

    * selftest now supports --list-only to list tests instead of running
      them. (Ian Clatworthy)

    * selftest now supports --exclude PATTERN (or -x PATTERN) to exclude
      tests with names that match that regular expression.
      (Ian Clatworthy, #102679)

    * selftest now supports --randomize SEED to run tests in a random order.
      SEED is typically the value 'now' meaning 'use the current time'.
      (Ian Clatworthy, #102686)

    * New option ``--fixes`` to commit, which stores bug fixing annotations as
      revision properties. Built-in support for Launchpad, Debian, Trac and
      Bugzilla bug trackers. (Jonathan Lange, James Henstridge, Robert Collins)

    * New API, ``bzrlib.bugtracker.tracker_registry``, for adding support for
      other bug trackers to ``fixes``. (Jonathan Lange, James Henstridge,
      Robert Collins)

    * ``selftest`` has new short options ``-f`` and ``-1``.  (Martin
      Pool)

    * ``bzrlib.tsort.MergeSorter`` optimizations. Change the inner loop
      into using local variables instead of going through ``self._var``.
      Improves the time to ``merge_sort`` a 10k revision graph by
      approximately 40% (~700->400ms).  (John Arbash Meinel)

    * ``make docs`` now creates a man page at ``man1/bzr.1`` fixing bug 107388.
      (Robert Collins)

    * ``bzr help`` now provides cross references to other help topics using
      the _see_also facility on command classes. Likewise the bzr_man
      documentation, and the bzr.1 man page also include this information.
      (Robert Collins)

    * Tags are now included in logs, that use the long log formatter. 
      (Erik Bågfors, Alexander Belchenko)

    * ``bzr help`` provides a clearer message when a help topic cannot be
      found. (Robert Collins, #107656)

    * ``bzr help`` now accepts optional prefixes for command help. The help
      for all commands can now be found at ``bzr help commands/COMMANDNAME``
      as well as ``bzr help COMMANDNAME`` (which only works for commands 
      where the name is not the same as a more general help topic). 
      (Robert Collins)

    * ``bzr help PLUGINNAME`` will now return the module docstring from the
      plugin PLUGINNAME. (Robert Collins, #50408)

    * New help topic ``urlspec`` which lists the availables transports.
      (Goffredo Baroncelli)

    * doc/server.txt updated to document the default bzr:// port
      and also update the blurb about the hpss' current status.
      (Robert Collins, #107125).

    * ``bzr serve`` now listens on interface 0.0.0.0 by default, making it
      serve out to the local LAN (and anyone in the world that can reach the
      machine running ``bzr serve``. (Robert Collins, #98918)

    * A new smart server protocol version has been added.  It prefixes requests
      and responses with an explicit version identifier so that future protocol
      revisions can be dealt with gracefully.  (Andrew Bennetts, Robert Collins)

    * The bzr protocol version 2 indicates success or failure in every response
      without depending on particular commands encoding that consistently,
      allowing future client refactorings to be much more robust about error
      handling. (Robert Collins, Martin Pool, Andrew Bennetts)

    * The smart protocol over HTTP client has been changed to always post to the
      same ``.bzr/smart`` URL under the original location when it can.  This allows
      HTTP servers to only have to pass URLs ending in .bzr/smart to the smart
      server handler, and not arbitrary ``.bzr/*/smart`` URLs.  (Andrew Bennetts)

    * digest authentication is now supported for proxies and HTTP by the urllib
      based http implementation. Tested against Apache 2.0.55 and Squid
      2.6.5. Basic and digest authentication are handled coherently for HTTP
      and proxy: if the user is provided in the url (bzr command line for HTTP,
      proxy environment variables for proxies), the password is prompted for
      (only once). If the password is provided, it is taken into account. Once
      the first authentication is successful, all further authentication
      roundtrips are avoided by preventively setting the right authentication
      header(s).
      (Vincent Ladeuil).

  INTERNALS:

    * bzrlib API compatability with 0.8 has been dropped, cleaning up some
      code paths. (Robert Collins)

    * Change the format of chroot urls so that they can be safely manipulated
      by generic url utilities without causing the resulting urls to have
      escaped the chroot. A side effect of this is that creating a chroot
      requires an explicit action using a ChrootServer.
      (Robert Collins, Andrew Bennetts)

    * Deprecate ``Branch.get_root_id()`` because branches don't have root ids,
      rather than fixing bug #96847.  (Aaron Bentley)

    * ``WorkingTree.apply_inventory_delta`` provides a better alternative to
      ``WorkingTree._write_inventory``.  (Aaron Bentley)

    * Convenience method ``TestCase.expectFailure`` ensures that known failures
      do not silently pass.  (Aaron Bentley)

    * ``Transport.local_abspath`` now raises ``NotLocalUrl`` rather than 
      ``TransportNotPossible``. (Martin Pool, Ian Clatworthy)

    * New SmartServer hooks facility. There are two initial hooks documented
      in ``bzrlib.transport.smart.SmartServerHooks``. The two initial hooks allow
      plugins to execute code upon server startup and shutdown.
      (Robert Collins).

    * SmartServer in standalone mode will now close its listening socket
      when it stops, rather than waiting for garbage collection. This primarily
      fixes test suite hangs when a test tries to connect to a shutdown server.
      It may also help improve behaviour when dealing with a server running
      on a specific port (rather than dynamically assigned ports).
      (Robert Collins)

    * Move most SmartServer code into a new package, bzrlib/smart.
      bzrlib/transport/remote.py contains just the Transport classes that used
      to be in bzrlib/transport/smart.py.  (Andrew Bennetts)

    * urllib http implementation avoid roundtrips associated with
      401 (and 407) errors once the authentication succeeds.
      (Vincent Ladeuil).

    * urlib http now supports querying the user for a proxy password if
      needed. Realm is shown in the prompt for both HTTP and proxy
      authentication when the user is required to type a password. 
      (Vincent Ladeuil).

    * Renamed SmartTransport (and subclasses like SmartTCPTransport) to
      RemoteTransport (and subclasses to RemoteTCPTransport, etc).  This is more
      consistent with its new home in ``bzrlib/transport/remote.py``, and because
      it's not really a "smart" transport, just one that does file operations
      via remote procedure calls.  (Andrew Bennetts)
 
    * The ``lock_write`` method of ``LockableFiles``, ``Repository`` and
      ``Branch`` now accept a ``token`` keyword argument, so that separate
      instances of those objects can share a lock if it has the right token.
      (Andrew Bennetts, Robert Collins)

    * New method ``get_branch_reference`` on ``BzrDir`` allows the detection of
      branch references - which the smart server component needs.

    * The Repository API ``make_working_trees`` is now permitted to return
      False when ``set_make_working_trees`` is not implemented - previously
      an unimplemented ``set_make_working_trees`` implied the result True
      from ``make_working_trees``. This has been changed to accomodate the
      smart server, where it does not make sense (at this point) to ever
      make working trees by default. (Robert Collins)

    * Command objects can now declare related help topics by having _see_also
      set to a list of related topic. (Robert Collins)

    * ``bzrlib.help`` now delegates to the Command class for Command specific
      help. (Robert Collins)

    * New class ``TransportListRegistry``, derived from the Registry class, which 
      simplifies tracking the available Transports. (Goffredo Baroncelli)

    * New function ``Branch.get_revision_id_to_revno_map`` which will
      return a dictionary mapping revision ids to dotted revnos. Since
      dotted revnos are defined in the context of the branch tip, it makes
      sense to generate them from a ``Branch`` object.
      (John Arbash Meinel)

    * Fix the 'Unprintable error' message display to use the repr of the 
      exception that prevented printing the error because the str value
      for it is often not useful in debugging (e.g. KeyError('foo') has a
      str() of 'foo' but a repr of 'KeyError('foo')' which is much more
      useful. (Robert Collins)

    * ``urlutils.normalize_url`` now unescapes unreserved characters, such as "~".
      (Andrew Bennetts)

  BUGFIXES:

    * Don't fail bundle selftest if email has 'two' embedded.  
      (Ian Clatworthy, #98510)

    * Remove ``--verbose`` from ``bzr bundle``. It didn't work anyway.
      (Robert Widhopf-Fenk, #98591)

    * Remove ``--basis`` from the checkout/branch commands - it didn't work
      properly and is no longer beneficial.
      (Robert Collins, #53675, #43486)

    * Don't produce encoding error when adding duplicate files.
      (Aaron Bentley)

    * Fix ``bzr log <file>`` so it only logs the revisions that changed
      the file, and does it faster.
      (Kent Gibson, John Arbash Meinel, #51980, #69477)
 
    * Fix ``InterDirstateTre._iter_changes`` to handle when we come across
      an empty versioned directory, which now has files in it.
      (John Arbash Meinel, #104257)

    * Teach ``common_ancestor`` to shortcut when the tip of one branch is
      inside the ancestry of the other. Saves a lot of graph processing
      (with an ancestry of 16k revisions, ``bzr merge ../already-merged``
      changes from 2m10s to 13s).  (John Arbash Meinel, #103757)

    * Fix ``show_diff_trees`` to handle the case when a file is modified,
      and the containing directory is renamed. (The file path is different
      in this versus base, but it isn't marked as a rename).
      (John Arbash Meinel, #103870)

    * FTP now works even when the FTP server does not support atomic rename.
      (Aaron Bentley, #89436)

    * Correct handling in bundles and merge directives of timezones with
      that are not an integer number of hours offset from UTC.  Always 
      represent the epoch time in UTC to avoid problems with formatting 
      earlier times on win32.  (Martin Pool, Alexander Belchenko, John
      Arbash Meinel)

    * Typo in the help for ``register-branch`` fixed. (Robert Collins, #96770)

    * "dirstate" and "dirstate-tags" formats now produce branches compatible
      with old versions of bzr. (Aaron Bentley, #107168))

    * Handle moving a directory when children have been added, removed,
      and renamed. (John Arbash Meinel, #105479)

    * Don't preventively use basic authentication for proxy before receiving a
      407 error. Otherwise people willing to use other authentication schemes
      may expose their password in the clear (or nearly). This add one
      roundtrip in case basic authentication should be used, but plug the
      security hole.
      (Vincent Ladeuil)

    * Handle http and proxy digest authentication.
      (Vincent Ladeuil, #94034).

  TESTING:

    * Added ``bzrlib.strace.strace`` which will strace a single callable and
      return a StraceResult object which contains just the syscalls involved
      in running it. (Robert Collins)

    * New test method ``reduceLockdirTimeout`` to drop the default (ui-centric)
      default time down to one suitable for tests. (Andrew Bennetts)

    * Add new ``vfs_transport_factory`` attribute on tests which provides the 
      common vfs backing for both the readonly and readwrite transports.
      This allows the RemoteObject tests to back onto local disk or memory,
      and use the existing ``transport_server`` attribute all tests know about
      to be the smart server transport. This in turn allows tests to 
      differentiate between 'transport to access the branch', and 
      'transport which is a VFS' - which matters in Remote* tests.
      (Robert Collins, Andrew Bennetts)

    * The ``make_branch_and_tree`` method for tests will now create a 
      lightweight checkout for the tree if the ``vfs_transport_factory`` is not
      a LocalURLServer. (Robert Collins, Andrew Bennetts)

    * Branch implementation tests have been audited to ensure that all urls 
      passed to Branch APIs use proper urls, except when local-disk paths
      are intended. This is so that tests correctly access the test transport
      which is often not equivalent to local disk in Remote* tests. As part
      of this many tests were adjusted to remove dependencies on local disk
      access.
      (Robert Collins, Andrew Bennetts)

    * Mark bzrlib.tests and bzrlib.tests.TestUtil as providing assertFOO helper
      functions by adding a ``__unittest`` global attribute. (Robert Collins,
      Andrew Bennetts, Martin Pool, Jonathan Lange)

    * Refactored proxy and authentication handling to simplify the
      implementation of new auth schemes for both http and proxy. 
      (Vincent Ladeuil)

bzr 0.15 2007-04-01

  BUGFIXES:

    * Handle incompatible repositories as a user issue when fetching.
      (Aaron Bentley)

    * Don't give a recommendation to upgrade when branching or 
      checking out a branch that contains an old-format working tree.
      (Martin Pool)

bzr 0.15rc3  2007-03-26

  CHANGES:
 
    * A warning is now displayed when opening working trees in older 
      formats, to encourage people to upgrade to WorkingTreeFormat4.
      (Martin Pool)

  IMPROVEMENTS:

    * HTTP redirections are now taken into account when a branch (or a
      bundle) is accessed for the first time. A message is issued at each
      redirection to inform the user. In the past, http redirections were
      silently followed for each request which significantly degraded the
      performances. The http redirections are not followed anymore by
      default, instead a RedirectRequested exception is raised. For bzrlib
      users needing to follow http redirections anyway,
      ``bzrlib.transport.do_catching_redirections`` provide an easy transition
      path.  (vila)

  INTERNALS:

    * Added ``ReadLock.temporary_write_lock()`` to allow upgrading an OS read
      lock to an OS write lock. Linux can do this without unlocking, Win32
      needs to unlock in between. (John Arbash Meinel)
 
    * New parameter ``recommend_upgrade`` to ``BzrDir.open_workingtree``
      to silence (when false) warnings about opening old formats.
      (Martin Pool)

    * Fix minor performance regression with bzr-0.15 on pre-dirstate
      trees. (We were reading the working inventory too many times).
      (John Arbash Meinel)

    * Remove ``Branch.get_transaction()`` in favour of a simple cache of
      ``revision_history``.  Branch subclasses should override
      ``_gen_revision_history`` rather than ``revision_history`` to make use of
      this cache, and call ``_clear_revision_history_cache`` and
      ``_cache_revision_history`` at appropriate times. (Andrew Bennetts)

  BUGFIXES:

    * Take ``smtp_server`` from user config into account.
      (vila, #92195)

    * Restore Unicode filename handling for versioned and unversioned files.
      (John Arbash Meinel, #92608)

    * Don't fail during ``bzr commit`` if a file is marked removed, and
      the containing directory is auto-removed.  (John Arbash Meinel, #93681)

    * ``bzr status FILENAME`` failed on Windows because of an uncommon
      errno. (``ERROR_DIRECTORY == 267 != ENOTDIR``).
      (Wouter van Heyst, John Arbash Meinel, #90819)

    * ``bzr checkout source`` should create a local branch in the same
      format as source. (John Arbash Meinel, #93854)

    * ``bzr commit`` with a kind change was failing to update the
      last-changed-revision for directories.  The
      InventoryDirectory._unchanged only looked at the ``parent_id`` and name,
      ignoring the fact that the kind could have changed, too.
      (John Arbash Meinel, #90111)

    * ``bzr mv dir/subdir other`` was incorrectly updating files inside
      the directory. So that there was a chance it would break commit,
      etc. (John Arbash Meinel, #94037)
 
    * Correctly handles mutiple permanent http redirections.
      (vila, #88780)

bzr 0.15rc2  2007-03-14

  NOTES WHEN UPGRADING:
        
    * Release 0.15rc2 of bzr changes the ``bzr init-repo`` command to
      default to ``--trees`` instead of ``--no-trees``.
      Existing shared repositories are not affected.

  IMPROVEMENTS:

    * New ``merge-directive`` command to generate machine- and human-readable
      merge requests.  (Aaron Bentley)

    * New ``submit:`` revision specifier makes it easy to diff against the
      common ancestor with the submit location (Aaron Bentley)

    * Added support for Putty's SSH implementation. (Dmitry Vasiliev)

    * Added ``bzr status --versioned`` to report only versioned files, 
      not unknowns. (Kent Gibson)

    * Merge now autodetects the correct line-ending style for its conflict
      markers.  (Aaron Bentley)

  INTERNALS:

    * Refactored SSH vendor registration into SSHVendorManager class.
      (Dmitry Vasiliev)

  BUGFIXES:

    * New ``--numbered-dirs`` option to ``bzr selftest`` to use
      numbered dirs for TestCaseInTempDir. This is default behavior
      on Windows. Anyone can force named dirs on Windows
      with ``--no-numbered-dirs``. (Alexander Belchenko)

    * Fix ``RevisionSpec_revid`` to handle the Unicode strings passed in
      from the command line. (Marien Zwart, #90501)

    * Fix ``TreeTransform._iter_changes`` when both the source and
      destination are missing. (Aaron Bentley, #88842)

    * Fix commit of merges with symlinks in dirstate trees.
      (Marien Zwart)
    
    * Switch the ``bzr init-repo`` default from --no-trees to --trees. 
      (Wouter van Heyst, #53483)


bzr 0.15rc1  2007-03-07

  SURPRISES:

    * The default disk format has changed. Please run 'bzr upgrade' in your
      working trees to upgrade. This new default is compatible for network
      operations, but not for local operations. That is, if you have two
      versions of bzr installed locally, after upgrading you can only use the
      bzr 0.15 version. This new default does not enable tags or nested-trees
      as they are incompatible with bzr versions before 0.15 over the network.

    * For users of bzrlib: Two major changes have been made to the working tree
      api in bzrlib. The first is that many methods and attributes, including
      the inventory attribute, are no longer valid for use until one of
      ``lock_read``/``lock_write``/``lock_tree_write`` has been called,
      and become invalid again after unlock is called. This has been done
      to improve performance and correctness as part of the dirstate
      development.
      (Robert Collins, John A Meinel, Martin Pool, and others).

    * For users of bzrlib: The attribute 'tree.inventory' should be considered
      readonly. Previously it was possible to directly alter this attribute, or
      its contents, and have the tree notice this. This has been made
      unsupported - it may work in some tree formats, but in the newer dirstate
      format such actions will have no effect and will be ignored, or even
      cause assertions. All operations possible can still be carried out by a
      combination of the tree API, and the bzrlib.transform API. (Robert
      Collins, John A Meinel, Martin Pool, and others).

  IMPROVEMENTS:

    * Support for OS Windows 98. Also .bzr.log on any windows system
      saved in My Documents folder. (Alexander Belchenko)

    * ``bzr mv`` enhanced to support already moved files.
      In the past the mv command would have failed if the source file doesn't
      exist. In this situation ``bzr mv`` would now detect that the file has
      already moved and update the repository accordingly, if the target file
      does exist.
      A new option ``--after`` has been added so that if two files already
      exist, you could notify Bazaar that you have moved a (versioned) file
      and replaced it with another. Thus in this case ``bzr move --after``
      will only update the Bazaar identifier.
      (Steffen Eichenberg, Marius Kruger)

    * ``ls`` now works on treeless branches and remote branches.
      (Aaron Bentley)

    * ``bzr help global-options`` describes the global options.
      (Aaron Bentley)

    * ``bzr pull --overwrite`` will now correctly overwrite checkouts.
      (Robert Collins)

    * Files are now allowed to change kind (e.g. from file to symlink).
      Supported by ``commit``, ``revert`` and ``status``
      (Aaron Bentley)

    * ``inventory`` and ``unknowns`` hidden in favour of ``ls``
      (Aaron Bentley)

    * ``bzr help checkouts`` descibes what checkouts are and some possible
      uses of them. (James Westby, Aaron Bentley)

    * A new ``-d`` option to push, pull and merge overrides the default 
      directory.  (Martin Pool)

    * Branch format 6: smaller, and potentially faster than format 5.  Supports
      ``append_history_only`` mode, where the log view and revnos do not change,
      except by being added to.  Stores policy settings in
      ".bzr/branch/branch.conf".

    * ``append_only`` branches:  Format 6 branches may be configured so that log
      view and revnos are always consistent.  Either create the branch using
      "bzr init --append-revisions-only" or edit the config file as descriped
      in docs/configuration.txt.

    * rebind: Format 6 branches retain the last-used bind location, so if you
      "bzr unbind", you can "bzr bind" to bind to the previously-selected
      bind location.

    * Builtin tags support, created and deleted by the ``tag`` command and
      stored in the branch.  Tags can be accessed with the revisionspec
      ``-rtag:``, and listed with ``bzr tags``.  Tags are not versioned 
      at present. Tags require a network incompatible upgrade. To perform this
      upgrade, run ``bzr upgrade --dirstate-tags`` in your branch and
      repositories. (Martin Pool)

    * The ``bzr://`` transport now has a well-known port number, 4155,
      which it will use by default.  (Andrew Bennetts, Martin Pool)

    * Bazaar now looks for user-installed plugins before looking for site-wide
      plugins. (Jonathan Lange)

    * ``bzr resolve`` now detects and marks resolved text conflicts.
      (Aaron Bentley)

  INTERNALS:

    * Internally revision ids and file ids are now passed around as utf-8
      bytestrings, rather than treating them as Unicode strings. This has
      performance benefits for Knits, since we no longer need to decode the
      revision id for each line of content, nor for each entry in the index.
      This will also help with the future dirstate format.
      (John Arbash Meinel)

    * Reserved ids (any revision-id ending in a colon) are rejected by
      versionedfiles, repositories, branches, and working trees
      (Aaron Bentley)

    * Minor performance improvement by not creating a ProgressBar for
      every KnitIndex we create. (about 90ms for a bzr.dev tree)
      (John Arbash Meinel)

    * New easier to use Branch hooks facility. There are five initial hooks,
      all documented in bzrlib.branch.BranchHooks.__init__ - ``'set_rh'``,
      ``'post_push'``, ``'post_pull'``, ``'post_commit'``,
      ``'post_uncommit'``. These hooks fire after the matching operation
      on a branch has taken place, and were originally added for the
      branchrss plugin. (Robert Collins)

    * New method ``Branch.push()`` which should be used when pushing from a
      branch as it makes performance and policy decisions to match the UI
      level command ``push``. (Robert Collins).

    * Add a new method ``Tree.revision_tree`` which allows access to cached
      trees for arbitrary revisions. This allows the in development dirstate
      tree format to provide access to the callers to cached copies of 
      inventory data which are cheaper to access than inventories from the
      repository.
      (Robert Collins, Martin Pool)

    * New ``Branch.last_revision_info`` method, this is being done to allow
      optimization of requests for both the number of revisions and the last
      revision of a branch with smartservers and potentially future branch
      formats. (Wouter van Heyst, Robert Collins)

    * Allow ``'import bzrlib.plugins.NAME'`` to work when the plugin NAME has not
      yet been loaded by ``load_plugins()``. This allows plugins to depend on each
      other for code reuse without requiring users to perform file-renaming
      gymnastics. (Robert Collins)

    * New Repository method ``'gather_stats'`` for statistic data collection.
      This is expected to grow to cover a number of related uses mainly
      related to bzr info. (Robert Collins)

    * Log formatters are now managed with a registry.
      ``log.register_formatter`` continues to work, but callers accessing
      the FORMATTERS dictionary directly will not.

    * Allow a start message to be passed to the ``edit_commit_message``
      function.  This will be placed in the message offered to the user
      for editing above the separator. It allows a template commit message
      to be used more easily. (James Westby)

    * ``GPGStrategy.sign()`` will now raise ``BzrBadParameterUnicode`` if
      you pass a Unicode string rather than an 8-bit string. Callers need
      to be updated to encode first. (John Arbash Meinel)

    * Branch.push, pull, merge now return Result objects with information
      about what happened, rather than a scattering of various methods.  These
      are also passed to the post hooks.  (Martin Pool)

    * File formats and architecture is in place for managing a forest of trees
      in bzr, and splitting up existing trees into smaller subtrees, and
      finally joining trees to make a larger tree. This is the first iteration
      of this support, and the user-facing aspects still require substantial
      work.  If you wish to experiment with it, use ``bzr upgrade
      --dirstate-with-subtree`` in your working trees and repositories.
      You can use the hidden commands ``split`` and ``join`` and to create
      and manipulate nested trees, but please consider using the nested-trees
      branch, which contains substantial UI improvements, instead.
      http://code.aaronbentley.com/bzr/bzrrepo/nested-trees/
      (Aaron Bentley, Martin Pool, Robert Collins).

  BUGFIXES:

    * ``bzr annotate`` now uses dotted revnos from the viewpoint of the
      branch, rather than the last changed revision of the file.
      (John Arbash Meinel, #82158)

    * Lock operations no longer hang if they encounter a permission problem.
      (Aaron Bentley)

    * ``bzr push`` can resume a push that was canceled before it finished.
      Also, it can push even if the target directory exists if you supply
      the ``--use-existing-dir`` flag.
      (John Arbash Meinel, #30576, #45504)

    * Fix http proxy authentication when user and an optional
      password appears in the ``*_proxy`` vars. (Vincent Ladeuil,
      #83954).

    * ``bzr log branch/file`` works for local treeless branches
      (Aaron Bentley, #84247)

    * Fix problem with UNC paths on Windows 98. (Alexander Belchenko, #84728)

    * Searching location of CA bundle for PyCurl in env variable
      (``CURL_CA_BUNDLE``), and on win32 along the PATH.
      (Alexander Belchenko, #82086)

    * ``bzr init`` works with unicode argument LOCATION.
      (Alexander Belchenko, #85599)

    * Raise ``DependencyNotPresent`` if pycurl do not support https. 
      (Vincent Ladeuil, #85305)

    * Invalid proxy env variables should not cause a traceback.
      (Vincent Ladeuil, #87765)

    * Ignore patterns normalised to use '/' path separator.
      (Kent Gibson, #86451)

    * bzr rocks. It sure does! Fix case. (Vincent Ladeuil, #78026)

    * Fix bzrtools shelve command for removed lines beginning with "--"
      (Johan Dahlberg, #75577)

  TESTING:

    * New ``--first`` option to ``bzr selftest`` to run specified tests
      before the rest of the suite.  (Martin Pool)


bzr 0.14  2007-01-23

  IMPROVEMENTS:

    * ``bzr help global-options`` describes the global options. (Aaron Bentley)

  BUG FIXES:
    
    * Skip documentation generation tests if the tools to do so are not
      available. Fixes running selftest for installled copies of bzr. 
      (John Arbash Meinel, #80330)

    * Fix the code that discovers whether bzr is being run from it's
      working tree to handle the case when it isn't but the directory
      it is in is below a repository. (James Westby, #77306)


bzr 0.14rc1  2007-01-16

  IMPROVEMENTS:

    * New connection: ``bzr+http://`` which supports tunnelling the smart
      protocol over an HTTP connection. If writing is enabled on the bzr
      server, then you can write over the http connection.
      (Andrew Bennetts, John Arbash Meinel)

    * Aliases now support quotation marks, so they can contain whitespace
      (Marius Kruger)

    * PyCurlTransport now use a single curl object. By specifying explicitly
      the 'Range' header, we avoid the need to use two different curl objects
      (and two connections to the same server). (Vincent Ladeuil)

    * ``bzr commit`` does not prompt for a message until it is very likely to
      succeed.  (Aaron Bentley)

    * ``bzr conflicts`` now takes --text to list pathnames of text conflicts
      (Aaron Bentley)

    * Fix ``iter_lines_added_or_present_in_versions`` to use a set instead
      of a list while checking if a revision id was requested. Takes 10s
      off of the ``fileids_affected_by_revision_ids`` time, which is 10s
      of the ``bzr branch`` time. Also improve ``fileids_...`` time by
      filtering lines with a regex rather than multiple ``str.find()``
      calls. (saves another 300ms) (John Arbash Meinel)

    * Policy can be set for each configuration key. This allows keys to be
      inherited properly across configuration entries. For example, this
      should enable you to do::
        
        [/home/user/project]
        push_location = sftp://host/srv/project/
        push_location:policy = appendpath

      And then a branch like ``/home/user/project/mybranch`` should get an
      automatic push location of ``sftp://host/srv/project/mybranch``.
      (James Henstridge)

    * Added ``bzr status --short`` to make status report svn style flags
      for each file.  For example::

        $ bzr status --short
        A  foo
        A  bar
        D  baz
        ?  wooley

    * 'bzr selftest --clean-output' allows easily clean temporary tests 
      directories without running tests. (Alexander Belchenko)

    * ``bzr help hidden-commands`` lists all hidden commands. (Aaron Bentley)

    * ``bzr merge`` now has an option ``--pull`` to fall back to pull if
      local is fully merged into remote. (Jan Hudec)

    * ``bzr help formats`` describes available directory formats. (Aaron Bentley)

  INTERNALS:

    * A few tweaks directly to ``fileids_affected_by_revision_ids`` to
      help speed up processing, as well allowing to extract unannotated
      lines. Between the two ``fileids_affected_by_revision_ids`` is
      improved by approx 10%. (John Arbash Meinel)

    * Change Revision serialization to only write out millisecond
      resolution. Rather than expecting floating point serialization to
      preserve more resolution than we need. (Henri Weichers, Martin Pool)

    * Test suite ends cleanly on Windows.  (Vincent Ladeuil)

    * When ``encoding_type`` attribute of class Command is equal to 'exact', 
      force sys.stdout to be a binary stream on Windows, and therefore
      keep exact line-endings (without LF -> CRLF conversion).
      (Alexander Belchenko)

    * Single-letter short options are no longer globally declared.  (Martin
      Pool)

    * Before using detected user/terminal encoding bzr should check
      that Python has corresponding codec. (Alexander Belchenko)

    * Formats for end-user selection are provided via a FormatRegistry (Aaron Bentley)

  BUG FIXES:

    * ``bzr missing --verbose`` was showing adds/removals in the wrong
      direction. (John Arbash Meinel)

    * ``bzr annotate`` now defaults to showing dotted revnos for merged
      revisions. It cuts them off at a depth of 12 characters, but you can
      supply ``--long`` to see the full number. You can also use
      ``--show-ids`` to display the original revision ids, rather than
      revision numbers and committer names. (John Arbash Meinel, #75637)

    * bzr now supports Win32 UNC path (e.g. ``\HOST\path``. 
      (Alexander Belchenko, #57869)

    * Win32-specific: output of cat, bundle and diff commands don't mangle
      line-endings (Alexander Belchenko, #55276)

    * Replace broken fnmatch based ignore pattern matching with custom pattern
      matcher.
      (Kent Gibson, Jan Hudec #57637)

    * pycurl and urllib can detect short reads at different places. Update
      the test suite to test more cases. Also detect http error code 416
      which was raised for that specific bug. Also enhance the urllib
      robustness by detecting invalid ranges (and pycurl's one by detecting
      short reads during the initial GET). (Vincent Ladeuil, #73948)

    * The urllib connection sharing interacts badly with urllib2
      proxy setting (the connections didn't go thru the proxy
      anymore). Defining a proper ProxyHandler solves the
      problem.  (Vincent Ladeuil, #74759)

    * Use urlutils to generate relative URLs, not osutils 
      (Aaron Bentley, #76229)

    * ``bzr status`` in a readonly directory should work without giving
      lots of errors. (John Arbash Meinel, #76299)

    * Mention the revisionspec topic for the revision option help.
      (Wouter van Heyst, #31663)

    * Allow plugins import from zip archives.
      (Alexander Belchenko, #68124)


bzr 0.13  2006-12-05
    
  No changes from 0.13rc1
    
bzr 0.13rc1  2006-11-27

  IMPROVEMENTS:

    * New command ``bzr remove-tree`` allows the removal of the working
      tree from a branch.
      (Daniel Silverstone)

    * urllib uses shared keep-alive connections, so http 
      operations are substantially faster.
      (Vincent Ladeuil, #53654)

    * ``bzr export`` allows an optional branch parameter, to export a bzr
      tree from some other url. For example:
      ``bzr export bzr.tar.gz http://bazaar-vcs.org/bzr/bzr.dev``
      (Daniel Silverstone)

    * Added ``bzr help topics`` to the bzr help system. This gives a
      location for general information, outside of a specific command.
      This includes updates for ``bzr help revisionspec`` the first topic
      included. (Goffredo Baroncelli, John Arbash Meinel, #42714)

    * WSGI-compatible HTTP smart server.  See ``doc/http_smart_server.txt``.
      (Andrew Bennetts)

    * Knit files will now cache full texts only when the size of the
      deltas is as large as the size of the fulltext. (Or after 200
      deltas, whichever comes first). This has the most benefit on large
      files with small changes, such as the inventory for a large project.
      (eg For a project with 2500 files, and 7500 revisions, it changes
      the size of inventory.knit from 11MB to 5.4MB) (John Arbash Meinel)

  INTERNALS:

    * New -D option given before the command line turns on debugging output
      for particular areas.  -Derror shows tracebacks on all errors.
      (Martin Pool)

    * Clean up ``bzr selftest --benchmark bundle`` to correct an import,
      and remove benchmarks that take longer than 10min to run.
      (John Arbash Meinel)

    * Use ``time.time()`` instead of ``time.clock()`` to decide on
      progress throttling. Because ``time.clock()`` is actually CPU time,
      so over a high-latency connection, too many updates get throttled.
      (John Arbash Meinel)

    * ``MemoryTransport.list_dir()`` would strip the first character for
      files or directories in root directory. (John Arbash Meinel)

    * New method ``get_branch_reference`` on 'BzrDir' allows the detection of 
      branch references - which the smart server component needs.
  
    * New ``ChrootTransportDecorator``, accessible via the ``chroot+`` url
      prefix.  It disallows any access to locations above a set URL.  (Andrew
      Bennetts)

  BUG FIXES:

    * Now ``_KnitIndex`` properly decode revision ids when loading index data.
      And optimize the knit index parsing code. 
      (Dmitry Vasiliev, John Arbash Meinel)

    * ``bzrlib/bzrdir.py`` was directly referencing ``bzrlib.workingtree``,
      without importing it. This prevented ``bzr upgrade`` from working
      unless a plugin already imported ``bzrlib.workingtree``
      (John Arbash Meinel, #70716)

    * Suppress the traceback on invalid URLs (Vincent Ladeuil, #70803).

    * Give nicer error message when an http server returns a 403
      error code. (Vincent Ladeuil, #57644).

    * When a multi-range http GET request fails, try a single
      range one. If it fails too, forget about ranges. Remember that until 
      the death of the transport and propagates that to the clones.
      (Vincent Ladeuil, #62276, #62029).

    * Handles user/passwords supplied in url from command
      line (for the urllib implementation). Don't request already
      known passwords (Vincent Ladeuil, #42383, #44647, #48527)

    * ``_KnitIndex.add_versions()`` dictionary compresses revision ids as they
      are added. This fixes bug where fetching remote revisions records
      them as full references rather than integers.
      (John Arbash Meinel, #64789)

    * ``bzr ignore`` strips trailing slashes in patterns.
      Also ``bzr ignore`` rejects absolute paths. (Kent Gibson, #4559)

    * ``bzr ignore`` takes multiple arguments. (Cheuksan Edward Wang, #29488)

    * mv correctly handles paths that traverse symlinks. 
      (Aaron Bentley, #66964)

    * Give nicer looking error messages when failing to connect over ssh.
      (John Arbash Meinel, #49172)

    * Pushing to a remote branch does not currently update the remote working
      tree. After a remote push, ``bzr status`` and ``bzr diff`` on the remote
      machine now show that the working tree is out of date.
      (Cheuksan Edward Wang #48136)

    * Use patiencediff instead of difflib for determining deltas to insert
      into knits. This avoids the O(N^3) behavior of difflib. Patience
      diff should be O(N^2). (Cheuksan Edward Wang, #65714)

    * Running ``bzr log`` on nonexistent file gives an error instead of the
      entire log history. (Cheuksan Edward Wang #50793)

    * ``bzr cat`` can look up contents of removed or renamed files. If the
      pathname is ambiguous, i.e. the files in the old and new trees have
      different id's, the default is the file in the new tree. The user can
      use "--name-from-revision" to select the file in the old tree.
      (Cheuksan Edward Wang, #30190)

  TESTING:

    * TestingHTTPRequestHandler really handles the Range header
      (previously it was ignoring it and returning the whole file,).

bzr 0.12  2006-10-30

  INTERNALS:

    * Clean up ``bzr selftest --benchmark bundle`` to correct an import,
      and remove benchmarks that take longer than 10min to run.
      (John Arbash Meinel)
  
bzr 0.12rc1  2006-10-23

  IMPROVEMENTS:

    * ``bzr log`` now shows dotted-decimal revision numbers for all revisions,
      rather than just showing a decimal revision number for revisions on the
      mainline. These revision numbers are not yet accepted as input into bzr
      commands such as log, diff etc. (Robert Collins)

    * revisions can now be specified using dotted-decimal revision numbers.
      For instance, ``bzr diff -r 1.2.1..1.2.3``. (Robert Collins)

    * ``bzr help commands`` output is now shorter (Aaron Bentley)

    * ``bzr`` now uses lazy importing to reduce the startup time. This has
      a moderate effect on lots of actions, especially ones that have
      little to do. For example ``bzr rocks`` time is down to 116ms from
      283ms. (John Arbash Meinel)

    * New Registry class to provide name-to-object registry-like support,
      for example for schemes where plugins can register new classes to
      do certain tasks (e.g. log formatters). Also provides lazy registration
      to allow modules to be loaded on request.
      (John Arbash Meinel, Adeodato Simó)

  API INCOMPATABILITY:
  
    * LogFormatter subclasses show now expect the 'revno' parameter to 
      show() to be a string rather than an int. (Robert Collins)

  INTERNALS:

    * ``TestCase.run_bzr``, ``run_bzr_captured``, and ``run_bzr_subprocess``
      can take a ``working_dir='foo'`` parameter, which will change directory 
      for the command. (John Arbash Meinel)

    * ``bzrlib.lazy_regex.lazy_compile`` can be used to create a proxy
      around a regex, which defers compilation until first use. 
      (John Arbash Meinel)

    * ``TestCase.run_bzr_subprocess`` defaults to supplying the
      ``--no-plugins`` parameter to ensure test reproducability, and avoid
      problems with system-wide installed plugins. (John Arbash Meinel)

    * Unique tree root ids are now supported. Newly created trees still
      use the common root id for compatibility with bzr versions before 0.12.
      (Aaron Bentley)

    * ``WorkingTree.set_root_id(None)`` is now deprecated. Please
      pass in ``inventory.ROOT_ID`` if you want the default root id value.
      (Robert Collins, John Arbash Meinel)

    * New method ``WorkingTree.flush()`` which will write the current memory
      inventory out to disk. At the same time, ``read_working_inventory`` will
      no longer trash the current tree inventory if it has been modified within
      the current lock, and the tree will now ``flush()`` automatically on
      ``unlock()``. ``WorkingTree.set_root_id()`` has been updated to take
      advantage of this functionality. (Robert Collins, John Arbash Meinel)

    * ``bzrlib.tsort.merge_sorted`` now accepts ``generate_revnos``. This
      parameter will cause it to add another column to its output, which
      contains the dotted-decimal revno for each revision, as a tuple.
      (Robert Collins)

    * ``LogFormatter.show_merge`` is deprecated in favour of
      ``LogFormatter.show_merge_revno``. (Robert Collins)

  BUG FIXES:

    * Avoid circular imports by creating a deprecated function for
      ``bzrlib.tree.RevisionTree``. Callers should have been using
      ``bzrlib.revisontree.RevisionTree`` anyway. (John Arbash Meinel,
      #63360, #66349)

    * Don't use ``socket.MSG_WAITALL`` as it doesn't exist on all
      platforms. (Martin Pool, #66356)

    * Don't require ``Content-Type`` in range responses. Assume they are a
      single range if ``Content-Type`` does not exist.
      (John Arbash Meinel, #62473)

    * bzr branch/pull no longer complain about progress bar cleanup when
      interrupted during fetch.  (Aaron Bentley, #54000)

    * ``WorkingTree.set_parent_trees()`` uses the trees to directly write
      the basis inventory, rather than going through the repository. This
      allows us to have 1 inventory read, and 2 inventory writes when
      committing a new tree. (John Arbash Meinel)

    * When reverting, files that are not locally modified that do not exist
      in the target are deleted, not just unversioned (Aaron Bentley)

    * When trying to acquire a lock, don't fail immediately. Instead, try
      a few times (up to 1 hour) before timing out. Also, report why the
      lock is unavailable (John Arbash Meinel, #43521, #49556)

    * Leave HttpTransportBase daughter classes decides how they
      implement cloning. (Vincent Ladeuil, #61606)

    * diff3 does not indicate conflicts on clean merge. (Aaron Bentley)

    * If a commit fails, the commit message is stored in a file at the root of
      the tree for later commit. (Cheuksan Edward Wang, Stefan Metzmacher,
      #32054)

  TESTING:

    * New test base class TestCaseWithMemoryTransport offers memory-only
      testing facilities: its not suitable for tests that need to mutate disk
      state, but most tests should not need that and should be converted to
      TestCaseWithMemoryTransport. (Robert Collins)

    * ``TestCase.make_branch_and_memory_tree`` now takes a format
      option to set the BzrDir, Repository and Branch formats of the
      created objects. (Robert Collins, John Arbash Meinel)

bzr 0.11  2006-10-02

    * Smart server transport test failures on windows fixed. (Lukáš Lalinský).

bzr 0.11rc2  2006-09-27

  BUG FIXES:

    * Test suite hangs on windows fixed. (Andrew Bennets, Alexander Belchenko).
    
    * Commit performance regression fixed. (Aaron Bentley, Robert Collins, John
      Arbash Meinel).

bzr 0.11rc1  2006-09-25

  IMPROVEMENTS:

    * Knit files now wait to create their contents until the first data is
      added. The old code used to create an empty .knit and a .kndx with just
      the header. However, this caused a lot of extra round trips over sftp.
      This can change the time for ``bzr push`` to create a new remote branch
      from 160s down to 100s. This also affects ``bzr commit`` performance when
      adding new files, ``bzr commit`` on a new kernel-like tree drops from 50s
      down to 40s (John Arbash Meinel, #44692)

    * When an entire subtree has been deleted, commit will now report that
      just the top of the subtree has been deleted, rather than reporting
      all the individual items. (Robert Collins)

    * Commit performs one less XML parse. (Robert Collins)

    * ``bzr checkout`` now operates on readonly branches as well
      as readwrite branches. This fixes bug #39542. (Robert Collins)

    * ``bzr bind`` no longer synchronises history with the master branch.
      Binding should be followed by an update or push to synchronise the 
      two branches. This is closely related to the fix for bug #39542.
      (Robert Collins)

    * ``bzrlib.lazy_import.lazy_import`` function to create on-demand 
      objects.  This allows all imports to stay at the global scope, but
      modules will not actually be imported if they are not used.
      (John Arbash Meinel)

    * Support ``bzr://`` and ``bzr+ssh://`` urls to work with the new RPC-based
      transport which will be used with the upcoming high-performance smart
      server. The new command ``bzr serve`` will invoke bzr in server mode,
      which processes these requests. (Andrew Bennetts, Robert Collins, Martin
      Pool)

    * New command ``bzr version-info`` which can be used to get a summary
      of the current state of the tree. This is especially useful as part
      of a build commands. See ``doc/version_info.txt`` for more information 
      (John Arbash Meinel)

  BUG FIXES:

    * ``'bzr inventory [FILE...]'`` allows restricting the file list to a
      specific set of files. (John Arbash Meinel, #3631)

    * Don't abort when annotating empty files (John Arbash Meinel, #56814)

    * Add ``Stanza.to_unicode()`` which can be passed to another Stanza
      when nesting stanzas. Also, add ``read_stanza_unicode`` to handle when
      reading a nested Stanza. (John Arbash Meinel)

    * Transform._set_mode() needs to stat the right file. 
      (John Arbash Meinel, #56549)

    * Raise WeaveFormatError rather than StopIteration when trying to read
      an empty Weave file. (John Arbash Meinel, #46871)

    * Don't access e.code for generic URLErrors, only HTTPErrors have .code.
      (Vincent Ladeuil, #59835)

    * Handle boundary="" lines properly to allow access through a Squid proxy.
      (John Arbash Meinel, #57723)

    * revert now removes newly-added directories (Aaron Bentley, #54172)

    * ``bzr upgrade sftp://`` shouldn't fail to upgrade v6 branches if there 
      isn't a working tree. (David Allouche, #40679)

    * Give nicer error messages when a user supplies an invalid --revision
      parameter. (John Arbash Meinel, #55420)

    * Handle when LANG is not recognized by python. Emit a warning, but
      just revert to using 'ascii'. (John Arbash Meinel, #35392)

    * Don't use ``preexec_fn`` on win32, as it is not supported by subprocess.
      (John Arbash Meinel)

    * Skip specific tests when the dependencies aren't met. This includes
      some ``setup.py`` tests when ``python-dev`` is not available, and
      some tests that depend on paramiko. (John Arbash Meinel, Mattheiu Moy)

    * Fallback to Paramiko properly, if no ``ssh`` executable exists on
      the system. (Andrew Bennetts, John Arbash Meinel)

    * ``Branch.bind(other_branch)`` no longer takes a write lock on the
      other branch, and will not push or pull between the two branches.
      API users will need to perform a push or pull or update operation if they
      require branch synchronisation to take place. (Robert Collins, #47344)

    * When creating a tarball or zipfile export, export unicode names as utf-8
      paths. This may not work perfectly on all platforms, but has the best
      chance of working in the common case. (John Arbash Meinel, #56816)

    * When committing, only files that exist in working tree or basis tree
      may be specified (Aaron Bentley, #50793)

  PORTABILITY:

    * Fixes to run on Python 2.5 (Brian M. Carlson, Martin Pool, Marien Zwart)

  INTERNALS:

    * TestCaseInTempDir now creates a separate directory for HOME, rather
      than having HOME set to the same location as the working directory.
      (John Arbash Meinel)

    * ``run_bzr_subprocess()`` can take an optional ``env_changes={}`` parameter,
      which will update os.environ inside the spawned child. It also can
      take a ``universal_newlines=True``, which helps when checking the output
      of the command. (John Arbash Meinel)

    * Refactor SFTP vendors to allow easier re-use when ssh is used. 
      (Andrew Bennetts)

    * ``Transport.list_dir()`` and ``Transport.iter_files_recursive()`` should always
      return urlescaped paths. This is now tested (there were bugs in a few
      of the transports) (Andrew Bennetts, David Allouche, John Arbash Meinel)

    * New utility function ``symbol_versioning.deprecation_string``. Returns the
      formatted string for a callable, deprecation format pair. (Robert Collins)

    * New TestCase helper applyDeprecated. This allows you to call a callable
      which is deprecated without it spewing to the screen, just by supplying
      the deprecation format string issued for it. (Robert Collins)

    * Transport.append and Transport.put have been deprecated in favor of
      ``.append_bytes``, ``.append_file``, ``.put_bytes``, and
      ``.put_file``. This removes the ambiguity in what type of object the
      functions take.  ``Transport.non_atomic_put_{bytes,file}`` has also
      been added. Which works similarly to ``Transport.append()`` except for
      SFTP, it doesn't have a round trip when opening the file. Also, it
      provides functionality for creating a parent directory when trying
      to create a file, rather than raise NoSuchFile and forcing the
      caller to repeat their request.
      (John Arbash Meinel)

    * WorkingTree has a new api ``unversion`` which allow the unversioning of
      entries by their file id. (Robert Collins)

    * ``WorkingTree.pending_merges`` is deprecated.  Please use the
      ``get_parent_ids`` (introduced in 0.10) method instead. (Robert Collins)

    * WorkingTree has a new ``lock_tree_write`` method which locks the branch for
      read rather than write. This is appropriate for actions which only need
      the branch data for reference rather than mutation. A new decorator
      ``needs_tree_write_lock`` is provided in the workingtree module. Like the
      ``needs_read_lock`` and ``needs_write_lock`` decorators this allows static 
      declaration of the locking requirements of a function to ensure that
      a lock is taken out for casual scripts. (Robert Collins, #54107)

    * All WorkingTree methods which write to the tree, but not to the branch
      have been converted to use ``needs_tree_write_lock`` rather than 
      ``needs_write_lock``. Also converted is the revert, conflicts and tree
      transform modules. This provides a modest performance improvement on 
      metadir style trees, due to the reduce lock-acquisition, and a more
      significant performance improvement on lightweight checkouts from 
      remote branches, where trivial operations used to pay a significant 
      penalty. It also provides the basis for allowing readonly checkouts.
      (Robert Collins)

    * Special case importing the standard library 'copy' module. This shaves
      off 40ms of startup time, while retaining compatibility. See:
      ``bzrlib/inspect_for_copy.py`` for more details. (John Arbash Meinel)

    * WorkingTree has a new parent class MutableTree which represents the 
      specialisations of Tree which are able to be altered. (Robert Collins)

    * New methods mkdir and ``put_file_bytes_non_atomic`` on MutableTree that
      mutate the tree and its contents. (Robert Collins)

    * Transport behaviour at the root of the URL is now defined and tested.
      (Andrew Bennetts, Robert Collins)

  TESTING:

    * New test helper classs MemoryTree. This is typically accessed via
      ``self.make_branch_and_memory_tree()`` in test cases. (Robert Collins)
      
    * Add ``start_bzr_subprocess`` and ``stop_bzr_subprocess`` to allow test
      code to continue running concurrently with a subprocess of bzr.
      (Andrew Bennetts, Robert Collins)

    * Add a new method ``Transport.get_smart_client()``. This is provided to
      allow upgrades to a richer interface than the VFS one provided by
      Transport. (Andrew Bennetts, Martin Pool)

bzr 0.10  2006-08-29
  
  IMPROVEMENTS:
    * 'merge' now takes --uncommitted, to apply uncommitted changes from a
      tree.  (Aaron Bentley)
  
    * 'bzr add --file-ids-from' can be used to specify another path to use
      for creating file ids, rather than generating all new ones. Internally,
      the 'action' passed to ``smart_add_tree()`` can return ``file_ids`` that
      will be used, rather than having bzrlib generate new ones.
      (John Arbash Meinel, #55781)

    * ``bzr selftest --benchmark`` now allows a ``--cache-dir`` parameter.
      This will cache some of the intermediate trees, and decrease the
      setup time for benchmark tests. (John Arbash Meinel)

    * Inverse forms are provided for all boolean options.  For example,
      --strict has --no-strict, --no-recurse has --recurse (Aaron Bentley)

    * Serialize out Inventories directly, rather than using ElementTree.
      Writing out a kernel sized inventory drops from 2s down to ~350ms.
      (Robert Collins, John Arbash Meinel)

  BUG FIXES:

    * Help diffutils 2.8.4 get along with binary tests (Marien Zwart: #57614)

    * Change LockDir so that if the lock directory doesn't exist when
      ``lock_write()`` is called, an attempt will be made to create it.
      (John Arbash Meinel, #56974)

    * ``bzr uncommit`` preserves pending merges. (John Arbash Meinel, #57660)

    * Active FTP transport now works as intended. (ghozzy, #56472)

    * Really fix mutter() so that it won't ever raise a UnicodeError.
      It means it is possible for ~/.bzr.log to contain non UTF-8 characters.
      But it is a debugging log, not a real user file.
      (John Arbash Meinel, #56947, #53880)

    * Change Command handle to allow Unicode command and options.
      At present we cannot register Unicode command names, so we will get
      BzrCommandError('unknown command'), or BzrCommandError('unknown option')
      But that is better than a UnicodeError + a traceback.
      (John Arbash Meinel, #57123)

    * Handle TZ=UTC properly when reading/writing revisions.
      (John Arbash Meinel, #55783, #56290)

    * Use ``GPG_TTY`` to allow gpg --cl to work with gpg-agent in a pipeline,
      (passing text to sign in on stdin). (John Arbash Meinel, #54468)

    * External diff does the right thing for binaries even in foreign 
      languages. (John Arbash Meinel, #56307)

    * Testament handles more cases when content is unicode. Specific bug was
      in handling of revision properties.
      (John Arbash Meinel, Holger Krekel, #54723)

    * The bzr selftest was failing on installed versions due to a bug in a new
      test helper. (John Arbash Meinel, Robert Collins, #58057)

  INTERNALS:

    * ``bzrlib.cache_utf8`` contains ``encode()`` and ``decode()`` functions
      which can be used to cache the conversion between utf8 and Unicode.
      Especially helpful for some of the knit annotation code, which has to
      convert revision ids to utf8 to annotate lines in storage.
      (John Arbash Meinel)

    * ``setup.py`` now searches the filesystem to find all packages which
      need to be installed. This should help make the life of packagers
      easier. (John Arbash Meinel)

bzr 0.9.0  2006-08-11

  SURPRISES:

   * The hard-coded built-in ignore rules have been removed. There are
     now two rulesets which are enforced. A user global one in 
     ``~/.bazaar/ignore`` which will apply to every tree, and the tree
     specific one '.bzrignore'.
     ``~/.bazaar/ignore`` will be created if it does not exist, but with
     a more conservative list than the old default.
     This fixes bugs with default rules being enforced no matter what. 
     The old list of ignore rules from bzr is available by
     running 'bzr ignore --old-default-rules'.
     (Robert Collins, Martin Pool, John Arbash Meinel)

   * 'branches.conf' has been changed to 'locations.conf', since it can apply
     to more locations than just branch locations.
     (Aaron Bentley)
   
  IMPROVEMENTS:

   * The revision specifier "revno:" is extended to accept the syntax
     revno:N:branch. For example,
     revno:42:http://bazaar-vcs.org/bzr/bzr.dev/ means revision 42 in
     bzr.dev.  (Matthieu Moy)

   * Tests updates to ensure proper URL handling, UNICODE support, and
     proper printing when the user's terminal encoding cannot display 
     the path of a file that has been versioned.
     ``bzr branch`` can take a target URL rather than only a local directory.
     ``Branch.get_parent()/set_parent()`` now save a relative path if possible,
     and normalize the parent based on root, allowing access across
     different transports. (John Arbash Meinel, Wouter van Heyst, Martin Pool)
     (Malone #48906, #42699, #40675, #5281, #3980, #36363, #43689,
     #42517, #42514)

   * On Unix, detect terminal width using an ioctl not just $COLUMNS.
     Use terminal width for single-line logs from ``bzr log --line`` and
     pending-merge display.  (Robert Widhopf-Fenk, Gustavo Niemeyer)
     (Malone #3507)

   * On Windows, detect terminal width using GetConsoleScreenBufferInfo.
     (Alexander Belchenko)

   * Speedup improvement for 'date:'-revision search. (Guillaume Pinot).

   * Show the correct number of revisions pushed when pushing a new branch.
     (Robert Collins).

   * 'bzr selftest' now shows a progress bar with the number of tests, and 
     progress made. 'make check' shows tests in -v mode, to be more useful
     for the PQM status window. (Robert Collins).
     When using a progress bar, failed tests are printed out, rather than
     being overwritten by the progress bar until the suite finishes.
     (John Arbash Meinel)

   * 'bzr selftest --benchmark' will run a new benchmarking selftest.
     'bzr selftest --benchmark --lsprof-timed' will use lsprofile to generate
     profile data for the individual profiled calls, allowing for fine
     grained analysis of performance.
     (Robert Collins, Martin Pool).

   * 'bzr commit' shows a progress bar. This is useful for commits over sftp
     where commit can take an appreciable time. (Robert Collins)

   * 'bzr add' is now less verbose in telling you what ignore globs were
     matched by files being ignored. Instead it just tells you how many 
     were ignored (because you might reasonably be expecting none to be
     ignored). 'bzr add -v' is unchanged and will report every ignored
     file. (Robert Collins).

   * ftp now has a test server if medusa is installed. As part of testing,
     ftp support has been improved, including support for supplying a
     non-standard port. (John Arbash Meinel).

   * 'bzr log --line' shows the revision number, and uses only the
     first line of the log message (#5162, Alexander Belchenko;
     Matthieu Moy)

   * 'bzr status' has had the --all option removed. The 'bzr ls' command
     should be used to retrieve all versioned files. (Robert Collins)

   * 'bzr bundle OTHER/BRANCH' will create a bundle which can be sent
     over email, and applied on the other end, while maintaining ancestry.
     This bundle can be applied with either 'bzr merge' or 'bzr pull',
     the same way you would apply another branch.
     (John Arbash Meinel, Aaron Bentley)
  
   * 'bzr whoami' can now be used to set your identity from the command line,
     for a branch or globally.  (Robey Pointer)

   * 'bzr checkout' now aliased to 'bzr co', and 'bzr annotate' to 'bzr ann'.
     (Michael Ellerman)

   * 'bzr revert DIRECTORY' now reverts the contents of the directory as well.
     (Aaron Bentley)

   * 'bzr get sftp://foo' gives a better error when paramiko is not present.
     Also updates things like 'http+pycurl://' if pycurl is not present.
     (John Arbash Meinel) (Malone #47821, #52204)

   * New env variable ``BZR_PROGRESS_BAR``, sets the default progress bar type.
     Can be set to 'none' or 'dummy' to disable the progress bar, 'dots' or 
     'tty' to create the respective type. (John Arbash Meinel, #42197, #51107)

   * Improve the help text for 'bzr diff' to explain what various options do.
     (John Arbash Meinel, #6391)

   * 'bzr uncommit -r 10' now uncommits revisions 11.. rather than uncommitting
     revision 10. This makes -r10 more in line with what other commands do.
     'bzr uncommit' also now saves the pending merges of the revisions that
     were removed. So it is safe to uncommit after a merge, fix something,
     and commit again. (John Arbash Meinel, #32526, #31426)

   * 'bzr init' now also works on remote locations.
     (Wouter van Heyst, #48904)

   * HTTP support has been updated. When using pycurl we now support 
     connection keep-alive, which reduces dns requests and round trips.
     And for both urllib and pycurl we support multi-range requests, 
     which decreases the number of round-trips. Performance results for
     ``bzr branch http://bazaar-vcs.org/bzr/bzr.dev/`` indicate
     http branching is now 2-3x faster, and ``bzr pull`` in an existing 
     branch is as much as 4x faster.
     (Michael Ellerman, Johan Rydberg, John Arbash Meinel, #46768)

   * Performance improvements for sftp. Branching and pulling are now up to
     2x faster. Utilize paramiko.readv() support for async requests if it
     is available (paramiko > 1.6) (John Arbash Meinel)

  BUG FIXES:

    * Fix shadowed definition of TestLocationConfig that caused some 
      tests not to run.
      (Erik Bågfors, Michael Ellerman, Martin Pool, #32587)

    * Fix unnecessary requirement of sign-my-commits that it be run from
      a working directory.  (Martin Pool, Robert Collins)

    * 'bzr push location' will only remember the push location if it succeeds
      in connecting to the remote location. (John Arbash Meinel, #49742)

    * 'bzr revert' no longer toggles the executable bit on win32
      (John Arbash Meinel, #45010)

    * Handle broken pipe under win32 correctly. (John Arbash Meinel)
    
    * sftp tests now work correctly on win32 if you have a newer paramiko
      (John Arbash Meinel)

    * Cleanup win32 test suite, and general cleanup of places where
      file handles were being held open. (John Arbash Meinel)

    * When specifying filenames for 'diff -r x..y', the name of the file in the
      working directory can be used, even if its name is different in both x
      and y.

    * File-ids containing single- or double-quotes are handled correctly by
      push. (Aaron Bentley, #52227)

    * Normalize unicode filenames to ensure cross-platform consistency.
      (John Arbash Meinel, #43689)

    * The argument parser can now handle '-' as an argument. Currently
      no code interprets it specially (it is mostly handled as a file named 
      '-'). But plugins, and future operations can use it.
      (John Arbash meinel, #50984)

    * Bundles can properly read binary files with a plain '\r' in them.
      (John Arbash Meinel, #51927)

    * Tuning ``iter_entries()`` to be more efficient (John Arbash Meinel, #5444)

    * Lots of win32 fixes (the test suite passes again).
      (John Arbash Meinel, #50155)

    * Handle openbsd returning None for sys.getfilesystemencoding() (#41183) 

    * Support ftp APPE (append) to allow Knits to be used over ftp (#42592)

    * Removals are only committed if they match the filespec (or if there is
      no filespec).  (#46635, Aaron Bentley)

    * smart-add recurses through all supplied directories 
      (John Arbash Meinel, #52578)

    * Make the bundle reader extra lines before and after the bundle text.
      This allows you to parse an email with the bundle inline.
      (John Arbash Meinel, #49182)

    * Change the file id generator to squash a little bit more. Helps when
      working with long filenames on windows. (Also helps for unicode filenames
      not generating hidden files). (John Arbash Meinel, #43801)

    * Restore terminal mode on C-c while reading sftp password.  (#48923, 
      Nicholas Allen, Martin Pool)

    * Timestamps are rounded to 1ms, and revision entries can be recreated
      exactly. (John Arbash Meinel, Jamie Wilkinson, #40693)

    * Branch.base has changed to a URL, but ~/.bazaar/locations.conf should
      use local paths, since it is user visible (John Arbash Meinel, #53653)

    * ``bzr status foo`` when foo was unversioned used to cause a full delta
      to be generated (John Arbash Meinel, #53638)

    * When reading revision properties, an empty value should be considered
      the empty string, not None (John Arbash Meinel, #47782)

    * ``bzr diff --diff-options`` can now handle binary files being changed.
      Also, the output is consistent when --diff-options is not supplied.
      (John Arbash Meinel, #54651, #52930)

    * Use the right suffixes for loading plugins (John Arbash Meinel, #51810)

    * Fix ``Branch.get_parent()`` to handle the case when the parent is not 
      accessible (John Arbash Meinel, #52976)

  INTERNALS:

    * Combine the ignore rules into a single regex rather than looping over
      them to reduce the threshold where  N^2 behaviour occurs in operations
      like status. (Jan Hudec, Robert Collins).

    * Appending to ``bzrlib.DEFAULT_IGNORE`` is now deprecated. Instead, use
      one of the add functions in bzrlib.ignores. (John Arbash Meinel)

    * 'bzr push' should only push the ancestry of the current revision, not
      all of the history in the repository. This is especially important for
      shared repositories. (John Arbash Meinel)

    * ``bzrlib.delta.compare_trees`` now iterates in alphabetically sorted order,
      rather than randomly walking the inventories. (John Arbash Meinel)

    * Doctests are now run in temporary directories which are cleaned up when
      they finish, rather than using special ScratchDir/ScratchBranch objects.
      (Martin Pool)

    * Split ``check`` into separate methods on the branch and on the repository,
      so that it can be specialized in ways that are useful or efficient for
      different formats.  (Martin Pool, Robert Collins)

    * Deprecate ``Repository.all_revision_ids``; most methods don't really need
      the global revision graph but only that part leading up to a particular
      revision.  (Martin Pool, Robert Collins)

    * Add a BzrDirFormat ``control_formats`` list which allows for control formats
      that do not use '.bzr' to store their data - i.e. '.svn', '.hg' etc.
      (Robert Collins, Jelmer Vernooij).

    * ``bzrlib.diff.external_diff`` can be redirected to any file-like object.
      Uses subprocess instead of spawnvp.
      (James Henstridge, John Arbash Meinel, #4047, #48914)

    * New command line option '--profile-imports', which will install a custom
      importer to log time to import modules and regex compilation time to 
      sys.stderr (John Arbash Meinel)

    * 'EmptyTree' is now deprecated, please use ``repository.revision_tree(None)``
      instead. (Robert Collins)

    * "RevisionTree" is now in bzrlib/revisiontree.py. (Robert Collins)

bzr 0.8.2  2006-05-17
  
  BUG FIXES:
   
    * setup.py failed to install launchpad plugin.  (Martin Pool)

bzr 0.8.1  2006-05-16

  BUG FIXES:

    * Fix failure to commit a merge in a checkout.  (Martin Pool, 
      Robert Collins, Erik Bågfors, #43959)

    * Nicer messages from 'commit' in the case of renames, and correct
      messages when a merge has occured. (Robert Collins, Martin Pool)

    * Separate functionality from assert statements as they are skipped in
      optimized mode of python. Add the same check to pending merges.
      (Olaf Conradi, #44443)

  CHANGES:

    * Do not show the None revision in output of bzr ancestry. (Olaf Conradi)

    * Add info on standalone branches without a working tree.
      (Olaf Conradi, #44155)

    * Fix bug in knits when raising InvalidRevisionId. (Olaf Conradi, #44284)

  CHANGES:

    * Make editor invocation comply with Debian Policy. First check
      environment variables VISUAL and EDITOR, then try editor from
      alternatives system. If that all fails, fall back to the pre-defined
      list of editors. (Olaf Conradi, #42904)

  NEW FEATURES:

    * New 'register-branch' command registers a public branch into 
      Launchpad.net, where it can be associated with bugs, etc.
      (Martin Pool, Bjorn Tillenius, Robert Collins)

  INTERNALS:

    * New public api in InventoryEntry - ``describe_change(old, new)`` which
      provides a human description of the changes between two old and
      new. (Robert Collins, Martin Pool)

  TESTING:

    * Fix test case for bzr info in upgrading a standalone branch to metadir,
      uses bzrlib api now. (Olaf Conradi)

bzr 0.8  2006-05-08

  NOTES WHEN UPGRADING:

    Release 0.8 of bzr introduces a new format for history storage, called
    'knit', as an evolution of to the 'weave' format used in 0.7.  Local 
    and remote operations are faster using knits than weaves.  Several
    operations including 'init', 'init-repo', and 'upgrade' take a 
    --format option that controls this.  Branching from an existing branch
    will keep the same format.

    It is possible to merge, pull and push between branches of different
    formats but this is slower than moving data between homogenous
    branches.  It is therefore recommended (but not required) that you
    upgrade all branches for a project at the same time.  Information on
    formats is shown by 'bzr info'.

    bzr 0.8 now allows creation of 'repositories', which hold the history 
    of files and revisions for several branches.  Previously bzr kept all
    the history for a branch within the .bzr directory at the root of the
    branch, and this is still the default.  To create a repository, use
    the new 'bzr init-repo' command.  Branches exist as directories under
    the repository and contain just a small amount of information
    indicating the current revision of the branch.

    bzr 0.8 also supports 'checkouts', which are similar to in cvs and
    subversion.  Checkouts are associated with a branch (optionally in a
    repository), which contains all the historical information.  The
    result is that a checkout can be deleted without losing any
    already-committed revisions.  A new 'update' command is also available. 

    Repositories and checkouts are not supported with the 0.7 storage
    format.  To use them you must upgrad to either knits, or to the
    'metaweave' format, which uses weaves but changes the .bzr directory
    arrangement.
    

  IMPROVEMENTS:

    * Sftp paths can now be relative, or local, according to the lftp
      convention. Paths now take the form::

          sftp://user:pass@host:port/~/relative/path
          or
          sftp://user:pass@host:port/absolute/path

    * The FTP transport now tries to reconnect after a temporary
      failure. ftp put is made atomic. (Matthieu Moy)

    * The FTP transport now maintains a pool of connections, and
      reuses them to avoid multiple connections to the same host (like
      sftp did). (Daniel Silverstone)

    * The ``bzr_man.py`` file has been removed. To create the man page now,
      use ``./generate_docs.py man``. The new program can also create other files.
      Run ``python generate_docs.py --help`` for usage information.
      (Hans Ulrich Niedermann & James Blackwell).

    * Man Page now gives full help (James Blackwell).
      Help also updated to reflect user config now being stored in .bazaar
      (Hans Ulrich Niedermann)

    * It's now possible to set aliases in bazaar.conf (Erik Bågfors)

    * Pull now accepts a --revision argument (Erik Bågfors)

    * ``bzr re-sign`` now allows multiple revisions to be supplied on the command
      line. You can now use the following command to sign all of your old
      commits::

        find .bzr/revision-store// -name my@email-* \
          | sed 's/.*\/\/..\///' \
          | xargs bzr re-sign

    * Upgrade can now upgrade over the network. (Robert Collins)

    * Two new commands 'bzr checkout' and 'bzr update' allow for CVS/SVN-alike
      behaviour.  By default they will cache history in the checkout, but
      with --lightweight almost all data is kept in the master branch.
      (Robert Collins)

    * 'revert' unversions newly-versioned files, instead of deleting them.

    * 'merge' is more robust.  Conflict messages have changed.

    * 'merge' and 'revert' no longer clobber existing files that end in '~' or
      '.moved'.

    * Default log format can be set in configuration and plugins can register
      their own formatters. (Erik Bågfors)

    * New 'reconcile' command will check branch consistency and repair indexes
      that can become out of sync in pre 0.8 formats. (Robert Collins,
      Daniel Silverstone)

    * New 'bzr init --format' and 'bzr upgrade --format' option to control 
      what storage format is created or produced.  (Robert Collins, 
      Martin Pool)

    * Add parent location to 'bzr info', if there is one.  (Olaf Conradi)

    * New developer commands 'weave-list' and 'weave-join'.  (Martin Pool)

    * New 'init-repository' command, plus support for repositories in 'init'
      and 'branch' (Aaron Bentley, Erik Bågfors, Robert Collins)

    * Improve output of 'info' command. Show all relevant locations related to
      working tree, branch and repository. Use kibibytes for binary quantities.
      Fix off-by-one error in missing revisions of working tree.  Make 'info'
      work on branches, repositories and remote locations.  Show locations
      relative to the shared repository, if applicable.  Show locking status
      of locations.  (Olaf Conradi)

    * Diff and merge now safely handle binary files. (Aaron Bentley)

    * 'pull' and 'push' now normalise the revision history, so that any two
      branches with the same tip revision will have the same output from 'log'.
      (Robert Collins)

    * 'merge' accepts --remember option to store parent location, like 'push'
      and 'pull'. (Olaf Conradi)

    * bzr status and diff when files given as arguments do not exist
      in the relevant trees.  (Martin Pool, #3619)

    * Add '.hg' to the default ignore list.  (Martin Pool)

    * 'knit' is now the default disk format. This improves disk performance and
      utilization, increases incremental pull performance, robustness with SFTP
      and allows checkouts over SFTP to perform acceptably. 
      The initial Knit code was contributed by Johan Rydberg based on a
      specification by Martin Pool.
      (Robert Collins, Aaron Bentley, Johan Rydberg, Martin Pool).

    * New tool to generate all-in-one html version of the manual.  (Alexander
      Belchenko)

    * Hitting CTRL-C while doing an SFTP push will no longer cause stale locks
      to be left in the SFTP repository. (Robert Collins, Martin Pool).

    * New option 'diff --prefix' to control how files are named in diff
      output, with shortcuts '-p0' and '-p1' corresponding to the options for 
      GNU patch.  (Alexander Belchenko, Goffredo Baroncelli, Martin Pool)

    * Add --revision option to 'annotate' command.  (Olaf Conradi)

    * If bzr shows an unexpected revision-history after pulling (perhaps due
      to a reweave) it can now be corrected by 'bzr reconcile'.
      (Robert Collins)

  CHANGES:

    * Commit is now verbose by default, and shows changed filenames and the 
      new revision number.  (Robert Collins, Martin Pool)

    * Unify 'mv', 'move', 'rename'.  (Matthew Fuller, #5379)

    * 'bzr -h' shows help.  (Martin Pool, Ian Bicking, #35940)

    * Make 'pull' and 'push' remember location on failure using --remember.
      (Olaf Conradi)

    * For compatibility, make old format for using weaves inside metadir
      available as 'metaweave' format.  Rename format 'metadir' to 'default'.
      Clean up help for option --format in commands 'init', 'init-repo' and
      'upgrade'.  (Olaf Conradi)

  INTERNALS:
  
    * The internal storage of history, and logical branch identity have now
      been split into Branch, and Repository. The common locking and file 
      management routines are now in bzrlib.lockablefiles. 
      (Aaron Bentley, Robert Collins, Martin Pool)

    * Transports can now raise DependencyNotPresent if they need a library
      which is not installed, and then another implementation will be 
      tried.  (Martin Pool)

    * Remove obsolete (and no-op) `decode` parameter to `Transport.get`.  
      (Martin Pool)

    * Using Tree Transform for merge, revert, tree-building

    * WorkingTree.create, Branch.create, ``WorkingTree.create_standalone``,
      Branch.initialize are now deprecated. Please see ``BzrDir.create_*`` for
      replacement API's. (Robert Collins)

    * New BzrDir class represents the .bzr control directory and manages
      formatting issues. (Robert Collins)

    * New repository.InterRepository class encapsulates Repository to 
      Repository actions and allows for clean selection of optimised code
      paths. (Robert Collins)

    * ``bzrlib.fetch.fetch`` and ``bzrlib.fetch.greedy_fetch`` are now
      deprecated, please use ``branch.fetch`` or ``repository.fetch``
      depending on your needs. (Robert Collins)

    * deprecated methods now have a ``is_deprecated`` flag on them that can
      be checked, if you need to determine whether a given callable is 
      deprecated at runtime. (Robert Collins)

    * Progress bars are now nested - see
      ``bzrlib.ui.ui_factory.nested_progress_bar``.
      (Robert Collins, Robey Pointer)

    * New API call ``get_format_description()`` for each type of format.
      (Olaf Conradi)

    * Changed ``branch.set_parent()`` to accept None to remove parent.
      (Olaf Conradi)

    * Deprecated BzrError AmbiguousBase.  (Olaf Conradi)

    * WorkingTree.branch is now a read only property.  (Robert Collins)

    * bzrlib.ui.text.TextUIFactory now accepts a ``bar_type`` parameter which
      can be None or a factory that will create a progress bar. This is
      useful for testing or for overriding the bzrlib.progress heuristic.
      (Robert Collins)

    * New API method ``get_physical_lock_status()`` to query locks present on a
      transport.  (Olaf Conradi)

    * Repository.reconcile now takes a thorough keyword parameter to allow
      requesting an indepth reconciliation, rather than just a data-loss 
      check. (Robert Collins)

    * ``bzrlib.ui.ui_factory protocol`` now supports ``get_boolean`` to prompt
      the user for yes/no style input. (Robert Collins)

  TESTING:

    * SFTP tests now shortcut the SSH negotiation, reducing test overhead
      for testing SFTP protocol support. (Robey Pointer)

    * Branch formats are now tested once per implementation (see ``bzrlib.
      tests.branch_implementations``. This is analagous to the transport
      interface tests, and has been followed up with working tree,
      repository and BzrDir tests. (Robert Collins)

    * New test base class TestCaseWithTransport provides a transport aware
      test environment, useful for testing any transport-interface using
      code. The test suite option --transport controls the transport used
      by this class (when its not being used as part of implementation
      contract testing). (Robert Collins)

    * Close logging handler on disabling the test log. This will remove the
      handler from the internal list inside python's logging module,
      preventing shutdown from closing it twice.  (Olaf Conradi)

    * Move test case for uncommit to blackbox tests.  (Olaf Conradi)

    * ``run_bzr`` and ``run_bzr_captured`` now accept a 'stdin="foo"'
      parameter which will provide String("foo") to the command as its stdin.

bzr 0.7 2006-01-09

  CHANGES:

    * .bzrignore is excluded from exports, on the grounds that it's a bzr 
      internal-use file and may not be wanted.  (Jamie Wilkinson)

    * The "bzr directories" command were removed in favor of the new
      --kind option to the "bzr inventory" command.  To list all 
      versioned directories, now use "bzr inventory --kind directory".  
      (Johan Rydberg)

    * Under Windows configuration directory is now ``%APPDATA%\bazaar\2.0``
      by default. (John Arbash Meinel)

    * The parent of Bzr configuration directory can be set by ``BZR_HOME``
      environment variable. Now the path for it is searched in ``BZR_HOME``,
      then in HOME. Under Windows the order is: ``BZR_HOME``, ``APPDATA``
      (usually points to ``C:\Documents and Settings\User Name\Application Data``),
      ``HOME``. (John Arbash Meinel)

    * Plugins with the same name in different directories in the bzr plugin
      path are no longer loaded: only the first successfully loaded one is
      used. (Robert Collins)

    * Use systems' external ssh command to open connections if possible.  
      This gives better integration with user settings such as ProxyCommand.
      (James Henstridge)

    * Permissions on files underneath .bzr/ are inherited from the .bzr 
      directory. So for a shared repository, simply doing 'chmod -R g+w .bzr/'
      will mean that future file will be created with group write permissions.

    * configure.in and config.guess are no longer in the builtin default 
      ignore list.

    * '.sw[nop]' pattern ignored, to ignore vim swap files for nameless
      files.  (John Arbash Meinel, Martin Pool)

  IMPROVEMENTS:

    * "bzr INIT dir" now initializes the specified directory, and creates 
      it if it does not exist.  (John Arbash Meinel)

    * New remerge command (Aaron Bentley)

    * Better zsh completion script.  (Steve Borho)

    * 'bzr diff' now returns 1 when there are changes in the working 
      tree. (Robert Collins)

    * 'bzr push' now exists and can push changes to a remote location. 
      This uses the transport infrastructure, and can store the remote
      location in the ~/.bazaar/branches.conf configuration file.
      (Robert Collins)

    * Test directories are only kept if the test fails and the user requests
      that they be kept.

    * Tweaks to short log printing

    * Added branch nicks, new nick command, printing them in log output. 
      (Aaron Bentley)

    * If ``$BZR_PDB`` is set, pop into the debugger when an uncaught exception 
      occurs.  (Martin Pool)

    * Accept 'bzr resolved' (an alias for 'bzr resolve'), as this is
      the same as Subversion.  (Martin Pool)

    * New ftp transport support (on ftplib), for ftp:// and aftp:// 
      URLs.  (Daniel Silverstone)

    * Commit editor temporary files now start with ``bzr_log.``, to allow 
      text editors to match the file name and set up appropriate modes or 
      settings.  (Magnus Therning)

    * Improved performance when integrating changes from a remote weave.  
      (Goffredo Baroncelli)

    * Sftp will attempt to cache the connection, so it is more likely that
      a connection will be reused, rather than requiring multiple password
      requests.

    * bzr revno now takes an optional argument indicating the branch whose
      revno should be printed.  (Michael Ellerman)

    * bzr cat defaults to printing the last version of the file.  
      (Matthieu Moy, #3632)

    * New global option 'bzr --lsprof COMMAND' runs bzr under the lsprof 
      profiler.  (Denys Duchier)

    * Faster commits by reading only the headers of affected weave files. 
      (Denys Duchier)

    * 'bzr add' now takes a --dry-run parameter which shows you what would be
      added, but doesn't actually add anything. (Michael Ellerman)

    * 'bzr add' now lists how many files were ignored per glob.  add --verbose
      lists the specific files.  (Aaron Bentley)

    * 'bzr missing' now supports displaying changes in diverged trees and can
      be limited to show what either end of the comparison is missing.
      (Aaron Bently, with a little prompting from Daniel Silverstone)

  BUG FIXES:

    * SFTP can walk up to the root path without index errors. (Robert Collins)

    * Fix bugs in running bzr with 'python -O'.  (Martin Pool)

    * Error when run with -OO

    * Fix bug in reporting http errors that don't have an http error code.
      (Martin Pool)

    * Handle more cases of pipe errors in display commands

    * Change status to 3 for all errors

    * Files that are added and unlinked before committing are completely
      ignored by diff and status

    * Stores with some compressed texts and some uncompressed texts are now
      able to be used. (John A Meinel)

    * Fix for bzr pull failing sometimes under windows

    * Fix for sftp transport under windows when using interactive auth

    * Show files which are both renamed and modified as such in 'bzr 
      status' output.  (Daniel Silverstone, #4503)

    * Make annotate cope better with revisions committed without a valid 
      email address.  (Marien Zwart)

    * Fix representation of tab characters in commit messages.
      (Harald Meland)

    * List of plugin directories in ``BZR_PLUGIN_PATH`` environment variable is
      now parsed properly under Windows. (Alexander Belchenko)

    * Show number of revisions pushed/pulled/merged. (Robey Pointer)

    * Keep a cached copy of the basis inventory to speed up operations 
      that need to refer to it.  (Johan Rydberg, Martin Pool)

    * Fix bugs in bzr status display of non-ascii characters.
      (Martin Pool)

    * Remove Makefile.in from default ignore list.
      (Tollef Fog Heen, Martin Pool, #6413)

    * Fix failure in 'bzr added'.  (Nathan McCallum, Martin Pool)

  TESTING:

    * Fix selftest asking for passwords when there are no SFTP keys.  
      (Robey Pointer, Jelmer Vernooij) 

    * Fix selftest run with 'python -O'.  (Martin Pool)

    * Fix HTTP tests under Windows. (John Arbash Meinel)

    * Make tests work even if HOME is not set (Aaron Bentley)

    * Updated ``build_tree`` to use fixed line-endings for tests which read 
      the file cotents and compare. Make some tests use this to pass under
      Windows. (John Arbash Meinel)

    * Skip stat and symlink tests under Windows. (Alexander Belchenko)

    * Delay in selftest/testhashcash is now issued under win32 and Cygwin.
      (John Arbash Meinel)

    * Use terminal width to align verbose test output.  (Martin Pool)

    * Blackbox tests are maintained within the bzrlib.tests.blackbox directory.
      If adding a new test script please add that to
      ``bzrlib.tests.blackbox.__init__``. (Robert Collins)

    * Much better error message if one of the test suites can't be 
      imported.  (Martin Pool)

    * Make check now runs the test suite twice - once with the default locale,
      and once with all locales forced to C, to expose bugs. This is not 
      trivially done within python, so for now its only triggered by running
      Make check. Integrators and packagers who wish to check for full 
      platform support should run 'make check' to test the source.
      (Robert Collins)

    * Tests can now run TestSkipped if they can't execute for any reason.
      (Martin Pool) (NB: TestSkipped should only be raised for correctable
      reasons - see the wiki spec ImprovingBzrTestSuite).

    * Test sftp with relative, absolute-in-homedir and absolute-not-in-homedir
      paths for the transport tests. Introduce blackbox remote sftp tests that
      test the same permutations. (Robert Collins, Robey Pointer)

    * Transport implementation tests are now independent of the local file
      system, which allows tests for esoteric transports, and for features
      not available in the local file system. They also repeat for variations
      on the URL scheme that can introduce issues in the transport code,
      see bzrlib.transport.TransportTestProviderAdapter() for this.
      (Robert Collins).

    * ``TestCase.build_tree`` uses the transport interface to build trees,
      pass in a transport parameter to give it an existing connection.
      (Robert Collins).

  INTERNALS:

    * WorkingTree.pull has been split across Branch and WorkingTree,
      to allow Branch only pulls. (Robert Collins)

    * ``commands.display_command`` now returns the result of the decorated 
      function. (Robert Collins)

    * LocationConfig now has a ``set_user_option(key, value)`` call to save
      a setting in its matching location section (a new one is created
      if needed). (Robert Collins)

    * Branch has two new methods, ``get_push_location`` and
      ``set_push_location`` to respectively, get and set the push location.
      (Robert Collins)

    * ``commands.register_command`` now takes an optional flag to signal that
      the registrant is planning to decorate an existing command. When 
      given multiple plugins registering a command is not an error, and
      the original command class (whether built in or a plugin based one) is
      returned to the caller. There is a new error 'MustUseDecorated' for
      signalling when a wrapping command should switch to the original
      version. (Robert Collins)

    * Some option parsing errors will raise 'BzrOptionError', allowing 
      granular detection for decorating commands. (Robert Collins).

    * ``Branch.read_working_inventory`` has moved to
      ``WorkingTree.read_working_inventory``. This necessitated changes to
      ``Branch.get_root_id``, and a move of ``Branch.set_inventory`` to
      WorkingTree as well. To make it clear that a WorkingTree cannot always
      be obtained ``Branch.working_tree()`` will raise
      ``errors.NoWorkingTree`` if one cannot be obtained. (Robert Collins)

    * All pending merges operations from Branch are now on WorkingTree.
      (Robert Collins)

    * The follow operations from Branch have moved to WorkingTree::

          add()
          commit()
          move()
          rename_one()
          unknowns()

      (Robert Collins)

    * ``bzrlib.add.smart_add_branch`` is now ``smart_add_tree``. (Robert Collins)

    * New "rio" serialization format, similar to rfc-822. (Martin Pool)

    * Rename selftests to ``bzrlib.tests.test_foo``.  (John A Meinel, Martin 
      Pool)

    * ``bzrlib.plugin.all_plugins`` has been changed from an attribute to a 
      query method. (Robert Collins)
 
    * New options to read only the table-of-contents of a weave.  
      (Denys Duchier)

    * Raise NoSuchFile when someone tries to add a non-existant file.
      (Michael Ellerman)

    * Simplify handling of DivergedBranches in ``cmd_pull()``.
      (Michael Ellerman)
   
    * Branch.controlfile* logic has moved to lockablefiles.LockableFiles, which
      is exposed as ``Branch().control_files``. Also this has been altered with the
      controlfile pre/suffix replaced by simple method names like 'get' and
      'put'. (Aaron Bentley, Robert Collins).

    * Deprecated functions and methods can now be marked as such using the 
      ``bzrlib.symbol_versioning`` module. Marked method have their docstring
      updated and will issue a DeprecationWarning using the warnings module
      when they are used. (Robert Collins)

    * ``bzrlib.osutils.safe_unicode`` now exists to provide parameter coercion
      for functions that need unicode strings. (Robert Collins)

bzr 0.6 2005-10-28

  IMPROVEMENTS:
  
    * pull now takes --verbose to show you what revisions are added or removed
      (John A Meinel)

    * merge now takes a --show-base option to include the base text in
      conflicts.
      (Aaron Bentley)

    * The config files are now read using ConfigObj, so '=' should be used as
      a separator, not ':'.
      (Aaron Bentley)

    * New 'bzr commit --strict' option refuses to commit if there are 
      any unknown files in the tree.  To commit, make sure all files are 
      either ignored, added, or deleted.  (Michael Ellerman)

    * The config directory is now ~/.bazaar, and there is a single file 
      ~/.bazaar/bazaar.conf storing email, editor and other preferences.
      (Robert Collins)

    * 'bzr add' no longer takes a --verbose option, and a --quiet option
      has been added that suppresses all output.

    * Improved zsh completion support in contrib/zsh, from Clint
      Adams.

    * Builtin 'bzr annotate' command, by Martin Pool with improvements from 
      Goffredo Baroncelli.
    
    * 'bzr check' now accepts -v for verbose reporting, and checks for
      ghosts in the branch. (Robert Collins)

    * New command 're-sign' which will regenerate the gpg signature for 
      a revision. (Robert Collins)

    * If you set ``check_signatures=require`` for a path in 
      ``~/.bazaar/branches.conf`` then bzr will invoke your
      ``gpg_signing_command`` (defaults to gpg) and record a digital signature
      of your commit. (Robert Collins)

    * New sftp transport, based on Paramiko.  (Robey Pointer)

    * 'bzr pull' now accepts '--clobber' which will discard local changes
      and make this branch identical to the source branch. (Robert Collins)

    * Just give a quieter warning if a plugin can't be loaded, and 
      put the details in .bzr.log.  (Martin Pool)

    * 'bzr branch' will now set the branch-name to the last component of the
      output directory, if one was supplied.

    * If the option ``post_commit`` is set to one (or more) python function
      names (must be in the bzrlib namespace), then they will be invoked
      after the commit has completed, with the branch and ``revision_id`` as
      parameters. (Robert Collins)

    * Merge now has a retcode of 1 when conflicts occur. (Robert Collins)

    * --merge-type weave is now supported for file contents.  Tree-shape
      changes are still three-way based.  (Martin Pool, Aaron Bentley)

    * 'bzr check' allows the first revision on revision-history to have
      parents - something that is expected for cheap checkouts, and occurs
      when conversions from baz do not have all history.  (Robert Collins).

   * 'bzr merge' can now graft unrelated trees together, if your specify
     0 as a base. (Aaron Bentley)

   * 'bzr commit branch' and 'bzr commit branch/file1 branch/file2' now work
     (Aaron Bentley)

    * Add '.sconsign*' to default ignore list.  (Alexander Belchenko)

   * 'bzr merge --reprocess' minimizes conflicts

  TESTING:

    * The 'bzr selftest --pattern' option for has been removed, now 
      test specifiers on the command line can be simple strings, or 
      regexps, or both. (Robert Collins)

    * Passing -v to selftest will now show the time each test took to 
      complete, which will aid in analysing performance regressions and
      related questions. (Robert Collins)

    * 'bzr selftest' runs all tests, even if one fails, unless '--one'
      is given. (Martin Pool)

    * There is a new method for TestCaseInTempDir, assertFileEqual, which
      will check that a given content is equal to the content of the named
      file. (Robert Collins)

    * Fix test suite's habit of leaving many temporary log files in $TMPDIR.
      (Martin Pool)

  INTERNALS:

    * New 'testament' command and concept for making gpg-signatures 
      of revisions that are not tied to a particular internal
      representation.  (Martin Pool).

    * Per-revision properties ('revprops') as key-value associated 
      strings on each revision created when the revision is committed.
      Intended mainly for the use of external tools.  (Martin Pool).

    * Config options have moved from bzrlib.osutils to bzrlib.config.
      (Robert Collins)

    * Improved command line option definitions allowing explanations
      for individual options, among other things.  Contributed by 
      Magnus Therning.

    * Config options have moved from bzrlib.osutils to bzrlib.config.
      Configuration is now done via the config.Config interface:
      Depending on whether you have a Branch, a Location or no information
      available, construct a ``*Config``, and use its ``signature_checking``,
      ``username`` and ``user_email`` methods. (Robert Collins)

    * Plugins are now loaded under bzrlib.plugins, not bzrlib.plugin, and
      they are made available for other plugins to use. You should not 
      import other plugins during the ``__init__`` of your plugin though, as 
      no ordering is guaranteed, and the plugins directory is not on the
      python path. (Robert Collins)

    * Branch.relpath has been moved to WorkingTree.relpath. WorkingTree no
      no longer takes an inventory, rather it takes an option branch
      parameter, and if None is given will open the branch at basedir 
      implicitly. (Robert Collins)

    * Cleaner exception structure and error reporting.  Suggested by 
      Scott James Remnant.  (Martin Pool)

    * Branch.remove has been moved to WorkingTree, which has also gained
      ``lock_read``, ``lock_write`` and ``unlock`` methods for convenience.
      (Robert Collins)

    * Two decorators, ``needs_read_lock`` and ``needs_write_lock`` have been
      added to the branch module. Use these to cause a function to run in a
      read or write lock respectively. (Robert Collins)

    * ``Branch.open_containing`` now returns a tuple (Branch, relative-path),
      which allows direct access to the common case of 'get me this file
      from its branch'. (Robert Collins)

    * Transports can register using ``register_lazy_transport``, and they 
      will be loaded when first used.  (Martin Pool)

    * 'pull' has been factored out of the command as ``WorkingTree.pull()``.
      A new option to WorkingTree.pull has been added, clobber, which will
      ignore diverged history and pull anyway.
      (Robert Collins)

    * config.Config has a ``get_user_option`` call that accepts an option name.
      This will be looked up in branches.conf and bazaar.conf as normal.
      It is intended that this be used by plugins to support options - 
      options of built in programs should have specific methods on the config.
      (Robert Collins)

    * ``merge.merge_inner`` now has tempdir as an optional parameter.
      (Robert Collins)

    * Tree.kind is not recorded at the top level of the hierarchy, as it was
      missing on EmptyTree, leading to a bug with merge on EmptyTrees.
      (Robert Collins)

    * ``WorkingTree.__del__`` has been removed, it was non deterministic and not 
      doing what it was intended to. See ``WorkingTree.__init__`` for a comment
      about future directions. (Robert Collins/Martin Pool)

    * bzrlib.transport.http has been modified so that only 404 urllib errors
      are returned as NoSuchFile. Other exceptions will propogate as normal.
      This allows debuging of actual errors. (Robert Collins)

    * bzrlib.transport.Transport now accepts *ONLY* url escaped relative paths
      to apis like 'put', 'get' and 'has'. This is to provide consistent
      behaviour - it operates on url's only. (Robert Collins)

    * Transports can register using ``register_lazy_transport``, and they 
      will be loaded when first used.  (Martin Pool)

    * ``merge_flex`` no longer calls ``conflict_handler.finalize()``, instead that
      is called by ``merge_inner``. This is so that the conflict count can be 
      retrieved (and potentially manipulated) before returning to the caller
      of ``merge_inner``. Likewise 'merge' now returns the conflict count to the
      caller. (Robert Collins)

    * ``revision.revision_graph`` can handle having only partial history for
      a revision - that is no revisions in the graph with no parents.
      (Robert Collins).

    * New ``builtins.branch_files`` uses the standard ``file_list`` rules to
      produce a branch and a list of paths, relative to that branch
      (Aaron Bentley)

    * New TestCase.addCleanup facility.

    * New ``bzrlib.version_info`` tuple (similar to ``sys.version_info``),
      which can be used by programs importing bzrlib.

  BUG FIXES:

    * Better handling of branches in directories with non-ascii names. 
      (Joel Rosdahl, Panagiotis Papadakos)

    * Upgrades of trees with no commits will not fail due to accessing
      [-1] in the revision-history. (Andres Salomon)


bzr 0.1.1 2005-10-12

  BUG FIXES:

    * Fix problem in pulling over http from machines that do not 
      allow directories to be listed.

    * Avoid harmless warning about invalid hash cache after 
      upgrading branch format.

  PERFORMANCE: 
  
    * Avoid some unnecessary http operations in branch and pull.


bzr 0.1 2005-10-11

  NOTES:

    * 'bzr branch' over http initially gives a very high estimate
      of completion time but it should fall as the first few 
      revisions are pulled in.  branch is still slow on 
      high-latency connections.

  BUG FIXES:
  
    * bzr-man.py has been updated to work again. Contributed by
      Rob Weir.

    * Locking is now done with fcntl.lockf which works with NFS
      file systems. Contributed by Harald Meland.

    * When a merge encounters a file that has been deleted on
      one side and modified on the other, the old contents are
      written out to foo.BASE and foo.SIDE, where SIDE is this
      or OTHER. Contributed by Aaron Bentley.

    * Export was choosing incorrect file paths for the content of
      the tarball, this has been fixed by Aaron Bentley.

    * Commit will no longer commit without a log message, an 
      error is returned instead. Contributed by Jelmer Vernooij.

    * If you commit a specific file in a sub directory, any of its
      parent directories that are added but not listed will be 
      automatically included. Suggested by Michael Ellerman.

    * bzr commit and upgrade did not correctly record new revisions
      for files with only a change to their executable status.
      bzr will correct this when it encounters it. Fixed by
      Robert Collins

    * HTTP tests now force off the use of ``http_proxy`` for the duration.
      Contributed by Gustavo Niemeyer.

    * Fix problems in merging weave-based branches that have 
      different partial views of history.

    * Symlink support: working with symlinks when not in the root of a 
      bzr tree was broken, patch from Scott James Remnant.

  IMPROVEMENTS:

    * 'branch' now accepts a --basis parameter which will take advantage
      of local history when making a new branch. This allows faster 
      branching of remote branches. Contributed by Aaron Bentley.

    * New tree format based on weave files, called version 5.
      Existing branches can be upgraded to this format using 
      'bzr upgrade'.

    * Symlinks are now versionable. Initial patch by 
      Erik Toubro Nielsen, updated to head by Robert Collins.

    * Executable bits are tracked on files. Patch from Gustavo
      Niemeyer.

    * 'bzr status' now shows unknown files inside a selected directory.
      Patch from Heikki Paajanen.

    * Merge conflicts are recorded in .bzr. Two new commands 'conflicts'
      and 'resolve' have needed added, which list and remove those 
      merge conflicts respectively. A conflicted tree cannot be committed
      in. Contributed by Aaron Bentley.

    * 'rm' is now an alias for 'remove'.

    * Stores now split out their content in a single byte prefixed hash,
      dropping the density of files per directory by 256. Contributed by
      Gustavo Niemeyer.

    * 'bzr diff -r branch:URL' will now perform a diff between two branches.
      Contributed by Robert Collins.

    * 'bzr log' with the default formatter will show merged revisions,
      indented to the right. Initial implementation contributed by Gustavo
      Niemeyer, made incremental by Robert Collins.


  INTERNALS:

    * Test case failures have the exception printed after the log 
      for your viewing pleasure.

    * InventoryEntry is now an abstract base class, use one of the
      concrete InventoryDirectory etc classes instead.

    * Branch raises an UnsupportedFormatError when it detects a 
      bzr branch it cannot understand. This allows for precise
      handling of such circumstances.

    * Remove RevisionReference class; ``Revision.parent_ids`` is now simply a
      list of their ids and ``parent_sha1s`` is a list of their corresponding
      sha1s (for old branches only at the moment.)

    * New method-object style interface for Commit() and Fetch().

    * Renamed ``Branch.last_patch()`` to ``Branch.last_revision()``, since
      we call them revisions not patches.

    * Move ``copy_branch`` to ``bzrlib.clone.copy_branch``.  The destination
      directory is created if it doesn't exist.

    * Inventories now identify the files which were present by 
      giving the revision *of that file*.

    * Inventory and Revision XML contains a version identifier.  
      This must be consistent with the overall branch version
      but allows for more flexibility in future upgrades.

  TESTING:

    * Removed testsweet module so that tests can be run after 
      bzr installed by 'bzr selftest'.

    * 'bzr selftest' command-line arguments can now be partial ids
      of tests to run, e.g. ``bzr selftest test_weave``

      
bzr 0.0.9 2005-09-23

  BUG FIXES:

    * Fixed "branch -r" option.

    * Fix remote access to branches containing non-compressed history.
      (Robert Collins).

    * Better reliability of http server tests.  (John Arbash-Meinel)

    * Merge graph maximum distance calculation fix.  (Aaron Bentley)
   
    * Various minor bug in windows support have been fixed, largely in the
      test suite. Contributed by Alexander Belchenko.

  IMPROVEMENTS:

    * Status now accepts a -r argument to give status between chosen
      revisions. Contributed by Heikki Paajanen.

    * Revision arguments no longer use +/-/= to control ranges, instead
      there is a 'before' namespace, which limits the successive namespace.
      For example '$ bzr log -r date:yesterday..before:date:today' will
      select everything from yesterday and before today. Contributed by
      Robey Pointer

    * There is now a bzr.bat file created by distutils when building on 
      Windows. Contributed by Alexander Belchenko.

  INTERNALS:

    * Removed uuid() as it was unused.

    * Improved 'fetch' code for pulling revisions from one branch into
      another (used by pull, merged, etc.)


bzr 0.0.8 2005-09-20

  IMPROVEMENTS:

    * Adding a file whose parent directory is not versioned will
      implicitly add the parent, and so on up to the root. This means
      you should never need to explictly add a directory, they'll just
      get added when you add a file in the directory.  Contributed by
      Michael Ellerman.

    * Ignore ``.DS_Store`` (contains Mac metadata) by default.
      (Nir Soffer)

    * If you set ``BZR_EDITOR`` in the environment, it is checked in
      preference to EDITOR and the config file for the interactive commit
      editing program. Related to this is a bugfix where a missing program
      set in EDITOR would cause editing to fail, now the fallback program
      for the operating system is still tried.

    * Files that are not directories/symlinks/regular files will no longer
      cause bzr to fail, it will just ignore them by default. You cannot add
      them to the tree though - they are not versionable.


  INTERNALS:

    * Refactor xml packing/unpacking.

  BUG FIXES: 

    * Fixed 'bzr mv' by Ollie Rutherfurd.

    * Fixed strange error when trying to access a nonexistent http
      branch.

    * Make sure that the hashcache gets written out if it can't be
      read.


  PORTABILITY:

    * Various Windows fixes from Ollie Rutherfurd.

    * Quieten warnings about locking; patch from Matt Lavin.


bzr-0.0.7 2005-09-02

  NEW FEATURES:

    * ``bzr shell-complete`` command contributed by Clint Adams to
      help with intelligent shell completion.

    * New expert command ``bzr find-merge-base`` for debugging merges.


  ENHANCEMENTS:

    * Much better merge support.

    * merge3 conflicts are now reported with markers like '<<<<<<<'
      (seven characters) which is the same as CVS and pleases things
      like emacs smerge.


  BUG FIXES:

    * ``bzr upgrade`` no longer fails when trying to fix trees that
      mention revisions that are not present.

    * Fixed bugs in listing plugins from ``bzr plugins``.

    * Fix case of $EDITOR containing options for the editor.

    * Fix log -r refusing to show the last revision.
      (Patch from Goffredo Baroncelli.)


  CHANGES:

    * ``bzr log --show-ids`` shows the revision ids of all parents.

    * Externally provided commands on your $BZRPATH no longer need
      to recognize --bzr-usage to work properly, and can just handle
      --help themselves.


  LIBRARY:

    * Changed trace messages to go through the standard logging
      framework, so that they can more easily be redirected by
      libraries.



bzr-0.0.6 2005-08-18

  NEW FEATURES:

    * Python plugins, automatically loaded from the directories on
      ``BZR_PLUGIN_PATH`` or ``~/.bzr.conf/plugins`` by default.

    * New 'bzr mkdir' command.

    * Commit mesage is fetched from an editor if not given on the
      command line; patch from Torsten Marek.

    * ``bzr log -m FOO`` displays commits whose message matches regexp 
      FOO.
      
    * ``bzr add`` with no arguments adds everything under the current directory.

    * ``bzr mv`` does move or rename depending on its arguments, like
      the Unix command.

    * ``bzr missing`` command shows a summary of the differences
      between two trees.  (Merged from John Arbash-Meinel.)

    * An email address for commits to a particular tree can be
      specified by putting it into .bzr/email within a branch.  (Based
      on a patch from Heikki Paajanen.)


  ENHANCEMENTS:

    * Faster working tree operations.


  CHANGES:

    * 3rd-party modules shipped with bzr are copied within the bzrlib
      python package, so that they can be installed by the setup
      script without clashing with anything already existing on the
      system.  (Contributed by Gustavo Niemeyer.)

    * Moved plugins directory to bzrlib/, so that there's a standard
      plugin directory which is not only installed with bzr itself but
      is also available when using bzr from the development tree.
      ``BZR_PLUGIN_PATH`` and ``DEFAULT_PLUGIN_PATH`` are then added to the
      standard plugins directory.

    * When exporting to a tarball with ``bzr export --format tgz``, put 
      everything under a top directory rather than dumping it into the
      current directory.   This can be overridden with the ``--root`` 
      option.  Patch from William Dodé and John Meinel.

    * New ``bzr upgrade`` command to upgrade the format of a branch,
      replacing ``bzr check --update``.

    * Files within store directories are no longer marked readonly on
      disk.

    * Changed ``bzr log`` output to a more compact form suggested by
      John A Meinel.  Old format is available with the ``--long`` or
      ``-l`` option, patched by William Dodé.

    * By default the commit command refuses to record a revision with
      no changes unless the ``--unchanged`` option is given.

    * The ``--no-plugins``, ``--profile`` and ``--builtin`` command
      line options must come before the command name because they 
      affect what commands are available; all other options must come 
      after the command name because their interpretation depends on
      it.

    * ``branch`` and ``clone`` added as aliases for ``branch``.

    * Default log format is back to the long format; the compact one
      is available with ``--short``.
      
      
  BUG FIXES:
  
    * Fix bugs in committing only selected files or within a subdirectory.


bzr-0.0.5  2005-06-15
  
  CHANGES:

    * ``bzr`` with no command now shows help rather than giving an
      error.  Suggested by Michael Ellerman.

    * ``bzr status`` output format changed, because svn-style output
      doesn't really match the model of bzr.  Now files are grouped by
      status and can be shown with their IDs.  ``bzr status --all``
      shows all versioned files and unknown files but not ignored files.

    * ``bzr log`` runs from most-recent to least-recent, the reverse
      of the previous order.  The previous behaviour can be obtained
      with the ``--forward`` option.
        
    * ``bzr inventory`` by default shows only filenames, and also ids
      if ``--show-ids`` is given, in which case the id is the second
      field.


  ENHANCEMENTS:

    * New 'bzr whoami --email' option shows only the email component
      of the user identification, from Jo Vermeulen.

    * New ``bzr ignore PATTERN`` command.

    * Nicer error message for broken pipe, interrupt and similar
      conditions that don't indicate an internal error.

    * Add ``.*.sw[nop] .git .*.tmp *,v`` to default ignore patterns.

    * Per-branch locks keyed on ``.bzr/branch-lock``, available in
      either read or write mode.

    * New option ``bzr log --show-ids`` shows revision and file ids.

    * New usage ``bzr log FILENAME`` shows only revisions that
      affected that file.

    * Changed format for describing changes in ``bzr log -v``.

    * New option ``bzr commit --file`` to take a message from a file,
      suggested by LarstiQ.

    * New syntax ``bzr status [FILE...]`` contributed by Bartosz
      Oler.  File may be in a branch other than the working directory.

    * ``bzr log`` and ``bzr root`` can be given an http URL instead of
      a filename.

    * Commands can now be defined by external programs or scripts
      in a directory on $BZRPATH.

    * New "stat cache" avoids reading the contents of files if they 
      haven't changed since the previous time.

    * If the Python interpreter is too old, try to find a better one
      or give an error.  Based on a patch from Fredrik Lundh.

    * New optional parameter ``bzr info [BRANCH]``.

    * New form ``bzr commit SELECTED`` to commit only selected files.

    * New form ``bzr log -r FROM:TO`` shows changes in selected
      range; contributed by John A Meinel.

    * New option ``bzr diff --diff-options 'OPTS'`` allows passing
      options through to an external GNU diff.

    * New option ``bzr add --no-recurse`` to add a directory but not
      their contents.

    * ``bzr --version`` now shows more information if bzr is being run
      from a branch.

  
  BUG FIXES:

    * Fixed diff format so that added and removed files will be
      handled properly by patch.  Fix from Lalo Martins.

    * Various fixes for files whose names contain spaces or other
      metacharacters.


  TESTING:

    * Converted black-box test suites from Bourne shell into Python;
      now run using ``./testbzr``.  Various structural improvements to
      the tests.

    * testbzr by default runs the version of bzr found in the same
      directory as the tests, or the one given as the first parameter.

    * testbzr also runs the internal tests, so the only command
      required to check is just ``./testbzr``.

    * testbzr requires python2.4, but can be used to test bzr running
      under a different version.

    * Tests added for many other changes in this release.


  INTERNAL:

    * Included ElementTree library upgraded to 1.2.6 by Fredrik Lundh.

    * Refactor command functions into Command objects based on HCT by
      Scott James Remnant.

    * Better help messages for many commands.

    * Expose ``bzrlib.open_tracefile()`` to start the tracefile; until
      this is called trace messages are just discarded.

    * New internal function ``find_touching_revisions()`` and hidden
      command touching-revisions trace the changes to a given file.

    * Simpler and faster ``compare_inventories()`` function.

    * ``bzrlib.open_tracefile()`` takes a tracefilename parameter.

    * New AtomicFile class.

    * New developer commands ``added``, ``modified``.


  PORTABILITY:

    * Cope on Windows on python2.3 by using the weaker random seed.
      2.4 is now only recommended.


bzr-0.0.4  2005-04-22

  ENHANCEMENTS:

    * 'bzr diff' optionally takes a list of files to diff.  Still a bit
      basic.  Patch from QuantumG.

    * More default ignore patterns.

    * New 'bzr log --verbose' shows a list of files changed in the
      changeset.  Patch from Sebastian Cote.

    * Roll over ~/.bzr.log if it gets too large.

    * Command abbreviations 'ci', 'st', 'stat', '?' based on a patch
      by Jason Diamon.

    * New 'bzr help commands' based on a patch from Denys Duchier.


  CHANGES:

    * User email is determined by looking at $BZREMAIL or ~/.bzr.email
      or $EMAIL.  All are decoded by the locale preferred encoding.
      If none of these are present user@hostname is used.  The host's
      fully-qualified name is not used because that tends to fail when
      there are DNS problems.

    * New 'bzr whoami' command instead of username user-email.


  BUG FIXES: 

    * Make commit safe for hardlinked bzr trees.

    * Some Unicode/locale fixes.

    * Partial workaround for ``difflib.unified_diff`` not handling
      trailing newlines properly.


  INTERNAL:

    * Allow docstrings for help to be in PEP0257 format.  Patch from
      Matt Brubeck.

    * More tests in test.sh.

    * Write profile data to a temporary file not into working
      directory and delete it when done.

    * Smaller .bzr.log with process ids.


  PORTABILITY:

    * Fix opening of ~/.bzr.log on Windows.  Patch from Andrew
      Bennetts.

    * Some improvements in handling paths on Windows, based on a patch
      from QuantumG.


bzr-0.0.3  2005-04-06

  ENHANCEMENTS:

    * New "directories" internal command lists versioned directories
      in the tree.

    * Can now say "bzr commit --help".

    * New "rename" command to rename one file to a different name
      and/or directory.

    * New "move" command to move one or more files into a different
      directory.

    * New "renames" command lists files renamed since base revision.

    * New cat command contributed by janmar.

  CHANGES:

    * .bzr.log is placed in $HOME (not pwd) and is always written in
      UTF-8.  (Probably not a completely good long-term solution, but
      will do for now.)

  PORTABILITY:

    * Workaround for difflib bug in Python 2.3 that causes an
      exception when comparing empty files.  Reported by Erik Toubro
      Nielsen.

  INTERNAL:

    * Refactored inventory storage to insert a root entry at the top.

  TESTING:

    * Start of shell-based black-box testing in test.sh.


bzr-0.0.2.1

  PORTABILITY:

    * Win32 fixes from Steve Brown.


bzr-0.0.2  "black cube"  2005-03-31

  ENHANCEMENTS:

    * Default ignore list extended (see bzrlib/__init__.py).

    * Patterns in .bzrignore are now added to the default ignore list,
      rather than replacing it.

    * Ignore list isn't reread for every file.

    * More help topics.

    * Reinstate the 'bzr check' command to check invariants of the
      branch.

    * New 'ignored' command lists which files are ignored and why;
      'deleted' lists files deleted in the current working tree.

    * Performance improvements.

    * New global --profile option.
    
    * Ignore patterns like './config.h' now correctly match files in
      the root directory only.


bzr-0.0.1  2005-03-26

  ENHANCEMENTS:

    * More information from info command.

    * Can now say "bzr help COMMAND" for more detailed help.

    * Less file flushing and faster performance when writing logs and
      committing to stores.

    * More useful verbose output from some commands.

  BUG FIXES:

    * Fix inverted display of 'R' and 'M' during 'commit -v'.

  PORTABILITY:

    * Include a subset of ElementTree-1.2.20040618 to make
      installation easier.

    * Fix time.localtime call to work with Python 2.3 (the minimum
      supported).


bzr-0.0.0.69  2005-03-22

  ENHANCEMENTS:

    * First public release.

    * Storage of local versions: init, add, remove, rm, info, log,
      diff, status, etc.
