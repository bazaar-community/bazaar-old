IN DEVELOPMENT
  
  IMPROVEMENTS:
    * 'merge' now takes --uncommitted, to apply uncommitted changes from a
      tree.  (Aaron Bentley)
  
    * 'bzr add --file-ids-from' can be used to specify another path to use
      for creating file ids, rather than generating all new ones. Internally,
      the 'action' passed to smart_add_tree() can return file_ids that
      will be used, rather than having bzrlib generate new ones.
      (John Arbash Meinel, #55781)

    * ``bzr selftest --benchmark`` now allows a ``--cache-dir`` parameter.
      This will cache some of the intermediate trees, and decrease the
      setup time for benchmark tests. (John Arbash Meinel)

    * Inverse forms are provided for all boolean options.  For example,
      --strict has --no-strict, --no-recurse has --recurse (Aaron Bentley)

    * Serialize out Inventories directly, rather than using ElementTree.
      Writing out a kernel sized inventory drops from 2s down to ~350ms.
      (Robert Collins, John Arbash Meinel)

  BUG FIXES:

    * Active FTP transport now works as intended. (ghozzy, #56472)

    * Handle TZ=UTC properly when reading/writing revisions.
      (John Arbash Meinel, #55783, #56290)

    * Use GPG_TTY to allow gpg --cl to work with gpg-agent in a pipeline,
      (passing text to sign in on stdin). (John Arbash Meinel, #54468)

    * External diff does the right thing for binaries even in foreign 
      languages. (John Arbash Meinel, #56307)

    * Testament handles more cases when content is unicode. Specific bug was
      in handling of revision properties. (John Arbash Meinel, Holger Krekel,
      #54723)

  INTERNALS:

    * ``bzrlib.cache_utf8`` contains ``encode()`` and ``decode()`` functions
      which can be used to cache the conversion between utf8 and Unicode.
      Especially helpful for some of the knit annotation code, which has to
      convert revision ids to utf8 to annotate lines in storage.
      (John Arbash Meinel)

    * ``setup.py`` now searches the filesystem to find all packages which
      need to be installed. This should help make the life of packagers
      easier. (John Arbash Meinel)

bzr 0.9.0  2006-08-11

  SURPRISES:

   * The hard-coded built-in ignore rules have been removed. There are
     now two rulesets which are enforced. A user global one in 
     ~/.bazaar/ignore which will apply to every tree, and the tree
     specific one '.bzrignore'.
     ~/.bazaar/ignore will be created if it does not exist, but with
     a more conservative list than the old default.
     This fixes bugs with default rules being enforced no matter what. 
     The old list of ignore rules from bzr is available by
     running 'bzr ignore --old-default-rules'.
     (Robert Collins, Martin Pool, John Arbash Meinel)

   * 'branches.conf' has been changed to 'locations.conf', since it can apply
     to more locations than just branch locations.
     (Aaron Bentley)
   
  IMPROVEMENTS:

   * The revision specifier "revno:" is extended to accept the syntax
     revno:N:branch. For example,
     revno:42:http://bazaar-vcs.org/bzr/bzr.dev/ means revision 42 in
     bzr.dev.  (Matthieu Moy)

   * Tests updates to ensure proper URL handling, UNICODE support, and
     proper printing when the user's terminal encoding cannot display 
     the path of a file that has been versioned.
     ``bzr branch`` can take a target URL rather than only a local directory.
     Branch.get_parent()/set_parent() now save a relative path if possible,
     and normalize the parent based on root, allowing access across
     different transports. (John Arbash Meinel, Wouter van Heyst, Martin Pool)
     (Malone #48906, #42699, #40675, #5281, #3980, #36363, #43689,
      #42517, #42514)

   * On Unix, detect terminal width using an ioctl not just $COLUMNS.
     Use terminal width for single-line logs from ``bzr log --line`` and
     pending-merge display.  (Robert Widhopf-Fenk, Gustavo Niemeyer)
     (Malone #3507)

   * On Windows, detect terminal width using GetConsoleScreenBufferInfo.
     (Alexander Belchenko)

   * Speedup improvement for 'date:'-revision search. (Guillaume Pinot).

   * Show the correct number of revisions pushed when pushing a new branch.
     (Robert Collins).

   * 'bzr selftest' now shows a progress bar with the number of tests, and 
     progress made. 'make check' shows tests in -v mode, to be more useful
     for the PQM status window. (Robert Collins).
     When using a progress bar, failed tests are printed out, rather than
     being overwritten by the progress bar until the suite finishes.
     (John Arbash Meinel)

   * 'bzr selftest --benchmark' will run a new benchmarking selftest.
     'bzr selftest --benchmark --lsprof-timed' will use lsprofile to generate
     profile data for the individual profiled calls, allowing for fine
     grained analysis of performance.
     (Robert Collins, Martin Pool).

   * 'bzr commit' shows a progress bar. This is useful for commits over sftp
     where commit can take an appreciable time. (Robert Collins)

   * 'bzr add' is now less verbose in telling you what ignore globs were
     matched by files being ignored. Instead it just tells you how many 
     were ignored (because you might reasonably be expecting none to be
     ignored). 'bzr add -v' is unchanged and will report every ignored
     file. (Robert Collins).

   * ftp now has a test server if medusa is installed. As part of testing,
     ftp support has been improved, including support for supplying a
     non-standard port. (John Arbash Meinel).

   * 'bzr log --line' shows the revision number, and uses only the
     first line of the log message (#5162, Alexander Belchenko;
     Matthieu Moy)

   * 'bzr status' has had the --all option removed. The 'bzr ls' command
     should be used to retrieve all versioned files. (Robert Collins)

   * 'bzr bundle OTHER/BRANCH' will create a bundle which can be sent
     over email, and applied on the other end, while maintaining ancestry.
     This bundle can be applied with either 'bzr merge' or 'bzr pull',
     the same way you would apply another branch.
     (John Arbash Meinel, Aaron Bentley)
  
   * 'bzr whoami' can now be used to set your identity from the command line,
     for a branch or globally.  (Robey Pointer)

   * 'bzr checkout' now aliased to 'bzr co', and 'bzr annotate' to 'bzr ann'.
     (Michael Ellerman)

   * 'bzr revert DIRECTORY' now reverts the contents of the directory as well.
     (Aaron Bentley)

   * 'bzr get sftp://foo' gives a better error when paramiko is not present.
     Also updates things like 'http+pycurl://' if pycurl is not present.
     (John Arbash Meinel) (Malone #47821, #52204)

   * New env variable BZR_PROGRESS_BAR, sets the default progress bar type.
     Can be set to 'none' or 'dummy' to disable the progress bar, 'dots' or 
     'tty' to create the respective type. (John Arbash Meinel, #42197, #51107)

   * Improve the help text for 'bzr diff' to explain what various options do.
     (John Arbash Meinel, #6391)

   * 'bzr uncommit -r 10' now uncommits revisions 11.. rather than uncommitting
     revision 10. This makes -r10 more in line with what other commands do.
     'bzr uncommit' also now saves the pending merges of the revisions that
     were removed. So it is safe to uncommit after a merge, fix something,
     and commit again. (John Arbash Meinel, #32526, #31426)

   * 'bzr init' now also works on remote locations.
     (Wouter van Heyst, #48904)

   * HTTP support has been updated. When using pycurl we now support 
     connection keep-alive, which reduces dns requests and round trips.
     And for both urllib and pycurl we support multi-range requests, 
     which decreases the number of round-trips. Performance results for
     ``bzr branch http://bazaar-vcs.org/bzr/bzr.dev/`` indicate
     http branching is now 2-3x faster, and ``bzr pull`` in an existing 
     branch is as much as 4x faster.
     (Michael Ellerman, Johan Rydberg, John Arbash Meinel, #46768)

   * Performance improvements for sftp. Branching and pulling are now up to
     2x faster. Utilize paramiko.readv() support for async requests if it
     is available (paramiko > 1.6) (John Arbash Meinel)

  BUG FIXES:

    * Fix shadowed definition of TestLocationConfig that caused some 
      tests not to run.  (#32587, Erik BÃ¥gfors, Michael Ellerman, 
      Martin Pool)

    * Fix unnecessary requirement of sign-my-commits that it be run from
      a working directory.  (Martin Pool, Robert Collins)

    * 'bzr push location' will only remember the push location if it succeeds
      in connecting to the remote location. (#49742, John Arbash Meinel)

    * 'bzr revert' no longer toggles the executable bit on win32
      (#45010, John Arbash Meinel)

    * Handle broken pipe under win32 correctly. (John Arbash Meinel)
    
    * sftp tests now work correctly on win32 if you have a newer paramiko
      (John Arbash Meinel)

    * Cleanup win32 test suite, and general cleanup of places where
      file handles were being held open. (John Arbash Meinel)

    * When specifying filenames for 'diff -r x..y', the name of the file in the
      working directory can be used, even if its name is different in both x
      and y.

    * File-ids containing single- or double-quotes are handled correctly by
      push.  (#52227, Aaron Bentley)

    * Normalize unicode filenames to ensure cross-platform consistency.
      (John Arbash Meinel, #43689)

    * The argument parser can now handle '-' as an argument. Currently
      no code interprets it specially (it is mostly handled as a file named 
      '-'). But plugins, and future operations can use it.
      (John Arbash meinel, #50984)

    * Bundles can properly read binary files with a plain '\r' in them.
      (John Arbash Meinel, #51927)

    * Tuning iter_entries() to be more efficient (John Arbash Meinel, #5444)

    * Lots of win32 fixes (the test suite passes again).
      (John Arbash Meinel, #50155)

    * Handle openbsd returning None for sys.getfilesystemencoding() (#41183) 

    * Support ftp APPE (append) to allow Knits to be used over ftp (#42592)

    * Removals are only committed if they match the filespec (or if there is
      no filespec).  (#46635, Aaron Bentley)

    * smart-add recurses through all supplied directories 
      (John Arbash Meinel, #52578)

    * Make the bundle reader extra lines before and after the bundle text.
      This allows you to parse an email with the bundle inline.
      (John Arbash Meinel, #49182)

    * Change the file id generator to squash a little bit more. Helps when
      working with long filenames on windows. (Also helps for unicode filenames
      not generating hidden files). (John Arbash Meinel, #43801)

    * Restore terminal mode on C-c while reading sftp password.  (#48923, 
      Nicholas Allen, Martin Pool)

    * Timestamps are rounded to 1ms, and revision entries can be recreated
      exactly. (John Arbash Meinel, Jamie Wilkinson, #40693)

    * Branch.base has changed to a URL, but ~/.bazaar/locations.conf should
      use local paths, since it is user visible (John Arbash Meinel, #53653)

    * ``bzr status foo`` when foo was unversioned used to cause a full delta
      to be generated (John Arbash Meinel, #53638)

    * When reading revision properties, an empty value should be considered
      the empty string, not None (John Arbash Meinel, #47782)

    * ``bzr diff --diff-options`` can now handle binary files being changed.
      Also, the output is consistent when --diff-options is not supplied.
      (John Arbash Meinel, #54651, #52930)

    * Use the right suffixes for loading plugins (John Arbash Meinel, #51810)

    * Fix Branch.get_parent() to handle the case when the parent is not 
      accessible (John Arbash Meinel, #52976)

  INTERNALS:

    * Combine the ignore rules into a single regex rather than looping over
      them to reduce the threshold where  N^2 behaviour occurs in operations
      like status. (Jan Hudec, Robert Collins).

    * Appending to bzrlib.DEFAULT_IGNORE is now deprecated. Instead, use
      one of the add functions in bzrlib.ignores. (John Arbash Meinel)

    * 'bzr push' should only push the ancestry of the current revision, not
      all of the history in the repository. This is especially important for
      shared repositories. (John Arbash Meinel)

    * bzrlib.delta.compare_trees now iterates in alphabetically sorted order,
      rather than randomly walking the inventories. (John Arbash Meinel)

    * Doctests are now run in temporary directories which are cleaned up when
      they finish, rather than using special ScratchDir/ScratchBranch objects.
      (Martin Pool)

    * Split ``check`` into separate methods on the branch and on the repository,
      so that it can be specialized in ways that are useful or efficient for
      different formats.  (Martin Pool, Robert Collins)

    * Deprecate Repository.all_revision_ids; most methods don't really need
      the global revision graph but only that part leading up to a particular
      revision.  (Martin Pool, Robert Collins)

    * Add a BzrDirFormat control_formats list which allows for control formats
      that do not use '.bzr' to store their data - i.e. '.svn', '.hg' etc.
      (Robert Collins, Jelmer Vernooij).

    * bzrlib.diff.external_diff can be redirected to any file-like object.
      Uses subprocess instead of spawnvp.
      (#4047, #48914, James Henstridge, John Arbash Meinel)

    * New command line option '--profile-imports', which will install a custom
      importer to log time to import modules and regex compilation time to 
      sys.stderr (John Arbash Meinel)

    * 'EmptyTree' is now deprecated, please use repository.revision_tree(None)
      instead. (Robert Collins)

    * "RevisionTree" is now in bzrlib/revisiontree.py. (Robert Collins)

bzr 0.8.2  2006-05-17
  
  BUG FIXES:
   
    * setup.py failed to install launchpad plugin.  (Martin Pool)

bzr 0.8.1  2006-05-16

  BUG FIXES:

    * Fix failure to commit a merge in a checkout.  (Martin Pool, 
      Robert Collins, Erik BÃ¥gfors, #43959)

    * Nicer messages from 'commit' in the case of renames, and correct
      messages when a merge has occured. (Robert Collins, Martin Pool)

    * Separate functionality from assert statements as they are skipped in
      optimized mode of python. Add the same check to pending merges.
      (#44443, Olaf Conradi)

  CHANGES:

    * Do not show the None revision in output of bzr ancestry. (Olaf Conradi)

    * Add info on standalone branches without a working tree.
      (#44155, Olaf Conradi)

    * Fix bug in knits when raising InvalidRevisionId. (#44284, Olaf Conradi)

  CHANGES:

    * Make editor invocation comply with Debian Policy. First check
      environment variables VISUAL and EDITOR, then try editor from
      alternatives system. If that all fails, fall back to the pre-defined
      list of editors. (#42904, Olaf Conradi)

  NEW FEATURES:

    * New 'register-branch' command registers a public branch into 
      Launchpad.net, where it can be associated with bugs, etc.
      (Martin Pool, Bjorn Tillenius, Robert Collins)

  INTERNALS:

    * New public api in InventoryEntry - 'describe_change(old, new)' which
      provides a human description of the changes between two old and
      new. (Robert Collins, Martin Pool)

  TESTING:

    * Fix test case for bzr info in upgrading a standalone branch to metadir,
      uses bzrlib api now. (Olaf Conradi)

bzr 0.8  2006-05-08

  NOTES WHEN UPGRADING:

    Release 0.8 of bzr introduces a new format for history storage, called
    'knit', as an evolution of to the 'weave' format used in 0.7.  Local 
    and remote operations are faster using knits than weaves.  Several
    operations including 'init', 'init-repo', and 'upgrade' take a 
    --format option that controls this.  Branching from an existing branch
    will keep the same format.

    It is possible to merge, pull and push between branches of different
    formats but this is slower than moving data between homogenous
    branches.  It is therefore recommended (but not required) that you
    upgrade all branches for a project at the same time.  Information on
    formats is shown by 'bzr info'.

    bzr 0.8 now allows creation of 'repositories', which hold the history 
    of files and revisions for several branches.  Previously bzr kept all
    the history for a branch within the .bzr directory at the root of the
    branch, and this is still the default.  To create a repository, use
    the new 'bzr init-repo' command.  Branches exist as directories under
    the repository and contain just a small amount of information
    indicating the current revision of the branch.

    bzr 0.8 also supports 'checkouts', which are similar to in cvs and
    subversion.  Checkouts are associated with a branch (optionally in a
    repository), which contains all the historical information.  The
    result is that a checkout can be deleted without losing any
    already-committed revisions.  A new 'update' command is also available. 

    Repositories and checkouts are not supported with the 0.7 storage
    format.  To use them you must upgrad to either knits, or to the
    'metaweave' format, which uses weaves but changes the .bzr directory
    arrangement.
    

  IMPROVEMENTS:

    * Sftp paths can now be relative, or local, according to the lftp
      convention. Paths now take the form:
      sftp://user:pass@host:port/~/relative/path
      or
      sftp://user:pass@host:port/absolute/path

    * The FTP transport now tries to reconnect after a temporary
      failure. ftp put is made atomic. (Matthieu Moy)

    * The FTP transport now maintains a pool of connections, and
      reuses them to avoid multiple connections to the same host (like
      sftp did). (Daniel Silverstone)

    * The bzr_man.py file has been removed. To create the man page now,
      use ./generate_docs.py man. The new program can also create other files.
      Run "python generate_docs.py --help" for usage information. (Hans
      Ulrich Niedermann & James Blackwell).

    * Man Page now gives full help (James Blackwell). Help also updated to 
      reflect user config now being stored in .bazaar (Hans Ulrich
      Niedermann)

    * It's now possible to set aliases in bazaar.conf (Erik BÃ¥gfors)

    * Pull now accepts a --revision argument (Erik BÃ¥gfors)

    * 'bzr re-sign' now allows multiple revisions to be supplied on the command
      line. You can now use the following command to sign all of your old commits.
        find .bzr/revision-store// -name my@email-* \
          | sed 's/.*\/\/..\///' \
          | xargs bzr re-sign

    * Upgrade can now upgrade over the network. (Robert Collins)

    * Two new commands 'bzr checkout' and 'bzr update' allow for CVS/SVN-alike
      behaviour.  By default they will cache history in the checkout, but
      with --lightweight almost all data is kept in the master branch.
      (Robert Collins)

    * 'revert' unversions newly-versioned files, instead of deleting them.

    * 'merge' is more robust.  Conflict messages have changed.

    * 'merge' and 'revert' no longer clobber existing files that end in '~' or
      '.moved'.

    * Default log format can be set in configuration and plugins can register
      their own formatters. (Erik BÃ¥gfors)

    * New 'reconcile' command will check branch consistency and repair indexes
      that can become out of sync in pre 0.8 formats. (Robert Collins,
      Daniel Silverstone)

    * New 'bzr init --format' and 'bzr upgrade --format' option to control 
      what storage format is created or produced.  (Robert Collins, 
      Martin Pool)

    * Add parent location to 'bzr info', if there is one.  (Olaf Conradi)

    * New developer commands 'weave-list' and 'weave-join'.  (Martin Pool)

    * New 'init-repository' command, plus support for repositories in 'init'
      and 'branch' (Aaron Bentley, Erik BÃ¥gfors, Robert Collins)

    * Improve output of 'info' command. Show all relevant locations related to
      working tree, branch and repository. Use kibibytes for binary quantities.
      Fix off-by-one error in missing revisions of working tree.  Make 'info'
      work on branches, repositories and remote locations.  Show locations
      relative to the shared repository, if applicable.  Show locking status
      of locations.  (Olaf Conradi)

    * Diff and merge now safely handle binary files. (Aaron Bentley)

    * 'pull' and 'push' now normalise the revision history, so that any two
      branches with the same tip revision will have the same output from 'log'.
      (Robert Collins)

    * 'merge' accepts --remember option to store parent location, like 'push'
      and 'pull'. (Olaf Conradi)

    * bzr status and diff when files given as arguments do not exist
      in the relevant trees.  (Martin Pool, #3619)

    * Add '.hg' to the default ignore list.  (Martin Pool)

    * 'knit' is now the default disk format. This improves disk performance and
      utilization, increases incremental pull performance, robustness with SFTP
      and allows checkouts over SFTP to perform acceptably. 
      The initial Knit code was contributed by Johan Rydberg based on a
      specification by Martin Pool.
      (Robert Collins, Aaron Bentley, Johan Rydberg, Martin Pool).

    * New tool to generate all-in-one html version of the manual.  (Alexander
      Belchenko)

    * Hitting CTRL-C while doing an SFTP push will no longer cause stale locks
      to be left in the SFTP repository. (Robert Collins, Martin Pool).

    * New option 'diff --prefix' to control how files are named in diff
      output, with shortcuts '-p0' and '-p1' corresponding to the options for 
      GNU patch.  (Alexander Belchenko, Goffredo Baroncelli, Martin Pool)

    * Add --revision option to 'annotate' command.  (Olaf Conradi)

    * If bzr shows an unexpected revision-history after pulling (perhaps due
      to a reweave) it can now be corrected by 'bzr reconcile'.
      (Robert Collins)

  CHANGES:

    * Commit is now verbose by default, and shows changed filenames and the 
      new revision number.  (Robert Collins, Martin Pool)

    * Unify 'mv', 'move', 'rename'.  (#5379, Matthew Fuller)

    * 'bzr -h' shows help.  (#35940, Martin Pool, Ian Bicking)

    * Make 'pull' and 'push' remember location on failure using --remember.
      (Olaf Conradi)

    * For compatibility, make old format for using weaves inside metadir
      available as 'metaweave' format.  Rename format 'metadir' to 'default'.
      Clean up help for option --format in commands 'init', 'init-repo' and
      'upgrade'.  (Olaf Conradi)

  INTERNALS:
  
    * The internal storage of history, and logical branch identity have now
      been split into Branch, and Repository. The common locking and file 
      management routines are now in bzrlib.lockablefiles. 
      (Aaron Bentley, Robert Collins, Martin Pool)

    * Transports can now raise DependencyNotPresent if they need a library
      which is not installed, and then another implementation will be 
      tried.  (Martin Pool)

    * Remove obsolete (and no-op) `decode` parameter to `Transport.get`.  
      (Martin Pool)

    * Using Tree Transform for merge, revert, tree-building

    * WorkingTree.create, Branch.create, WorkingTree.create_standalone,
      Branch.initialize are now deprecated. Please see BzrDir.create_* for
      replacement API's. (Robert Collins)

    * New BzrDir class represents the .bzr control directory and manages
      formatting issues. (Robert Collins)

    * New repository.InterRepository class encapsulates Repository to 
      Repository actions and allows for clean selection of optimised code
      paths. (Robert Collins)

    * bzrlib.fetch.fetch and bzrlib.fetch.greedy_fetch are now deprecated,
      please use 'branch.fetch' or 'repository.fetch' depending on your
      needs. (Robert Collins)

    * deprecated methods now have a 'is_deprecated' flag on them that can
      be checked, if you need to determine whether a given callable is 
      deprecated at runtime. (Robert Collins)

    * Progress bars are now nested - see
      bzrlib.ui.ui_factory.nested_progress_bar. (Robert Collins, Robey Pointer)

    * New API call get_format_description() for each type of format.
      (Olaf Conradi)

    * Changed branch.set_parent() to accept None to remove parent.
      (Olaf Conradi)

    * Deprecated BzrError AmbiguousBase.  (Olaf Conradi)

    * WorkingTree.branch is now a read only property.  (Robert Collins)

    * bzrlib.ui.text.TextUIFactory now accepts a bar_type parameter which
      can be None or a factory that will create a progress bar. This is
      useful for testing or for overriding the bzrlib.progress heuristic.
      (Robert Collins)

    * New API method get_physical_lock_status() to query locks present on a
      transport.  (Olaf Conradi)

    * Repository.reconcile now takes a thorough keyword parameter to allow
      requesting an indepth reconciliation, rather than just a data-loss 
      check. (Robert Collins)

    * bzrlib.ui.ui_factory protocol now supports 'get_boolean' to prompt
      the user for yes/no style input. (Robert Collins)

  TESTING:

    * SFTP tests now shortcut the SSH negotiation, reducing test overhead
      for testing SFTP protocol support. (Robey Pointer)

    * Branch formats are now tested once per implementation (see bzrlib.
      tests.branch_implementations. This is analagous to the transport
      interface tests, and has been followed up with working tree,
      repository and BzrDir tests. (Robert Collins)

    * New test base class TestCaseWithTransport provides a transport aware
      test environment, useful for testing any transport-interface using
      code. The test suite option --transport controls the transport used
      by this class (when its not being used as part of implementation
      contract testing). (Robert Collins)

    * Close logging handler on disabling the test log. This will remove the
      handler from the internal list inside python's logging module,
      preventing shutdown from closing it twice.  (Olaf Conradi)

    * Move test case for uncommit to blackbox tests.  (Olaf Conradi)

    * run_bzr and run_bzr_captured now accept a 'stdin="foo"' parameter which
      will provide String("foo") to the command as its stdin.

bzr 0.7 2006-01-09

  CHANGES:

    * .bzrignore is excluded from exports, on the grounds that it's a bzr 
      internal-use file and may not be wanted.  (Jamie Wilkinson)

    * The "bzr directories" command were removed in favor of the new
      --kind option to the "bzr inventory" command.  To list all 
      versioned directories, now use "bzr inventory --kind directory".  
      (Johan Rydberg)

    * Under Windows configuration directory is now %APPDATA%\bazaar\2.0
      by default. (John Arbash Meinel)

    * The parent of Bzr configuration directory can be set by BZR_HOME
      environment variable. Now the path for it is searched in BZR_HOME, then
      in HOME. Under Windows the order is: BZR_HOME, APPDATA (usually
      points to C:\Documents and Settings\User Name\Application Data), HOME.
      (John Arbash Meinel)

    * Plugins with the same name in different directories in the bzr plugin
      path are no longer loaded: only the first successfully loaded one is
      used. (Robert Collins)

    * Use systems' external ssh command to open connections if possible.  
      This gives better integration with user settings such as ProxyCommand.
      (James Henstridge)

    * Permissions on files underneath .bzr/ are inherited from the .bzr 
      directory. So for a shared repository, simply doing 'chmod -R g+w .bzr/'
      will mean that future file will be created with group write permissions.

    * configure.in and config.guess are no longer in the builtin default 
      ignore list.

    * '.sw[nop]' pattern ignored, to ignore vim swap files for nameless
      files.  (John Arbash Meinel, Martin Pool)

  IMPROVEMENTS:

    * "bzr INIT dir" now initializes the specified directory, and creates 
      it if it does not exist.  (John Arbash Meinel)

    * New remerge command (Aaron Bentley)

    * Better zsh completion script.  (Steve Borho)

    * 'bzr diff' now returns 1 when there are changes in the working 
      tree. (Robert Collins)

    * 'bzr push' now exists and can push changes to a remote location. 
      This uses the transport infrastructure, and can store the remote
      location in the ~/.bazaar/branches.conf configuration file.
      (Robert Collins)

    * Test directories are only kept if the test fails and the user requests
      that they be kept.

    * Tweaks to short log printing

    * Added branch nicks, new nick command, printing them in log output. 
      (Aaron Bentley)

    * If $BZR_PDB is set, pop into the debugger when an uncaught exception 
      occurs.  (Martin Pool)

    * Accept 'bzr resolved' (an alias for 'bzr resolve'), as this is
      the same as Subversion.  (Martin Pool)

    * New ftp transport support (on ftplib), for ftp:// and aftp:// 
      URLs.  (Daniel Silverstone)

    * Commit editor temporary files now start with 'bzr_log.', to allow 
      text editors to match the file name and set up appropriate modes or 
      settings.  (Magnus Therning)

    * Improved performance when integrating changes from a remote weave.  
      (Goffredo Baroncelli)

    * Sftp will attempt to cache the connection, so it is more likely that
      a connection will be reused, rather than requiring multiple password
      requests.

    * bzr revno now takes an optional argument indicating the branch whose
      revno should be printed.  (Michael Ellerman)

    * bzr cat defaults to printing the last version of the file.  
      (#3632, Matthieu Moy)

    * New global option 'bzr --lsprof COMMAND' runs bzr under the lsprof 
      profiler.  (Denys Duchier)

    * Faster commits by reading only the headers of affected weave files. 
      (Denys Duchier)

    * 'bzr add' now takes a --dry-run parameter which shows you what would be
      added, but doesn't actually add anything. (Michael Ellerman)

    * 'bzr add' now lists how many files were ignored per glob.  add --verbose
      lists the specific files.  (Aaron Bentley)

    * 'bzr missing' now supports displaying changes in diverged trees and can
      be limited to show what either end of the comparison is missing.
      (Aaron Bently, with a little prompting from Daniel Silverstone)

  BUG FIXES:

    * SFTP can walk up to the root path without index errors. (Robert Collins)

    * Fix bugs in running bzr with 'python -O'.  (Martin Pool)

    * Error when run with -OO

    * Fix bug in reporting http errors that don't have an http error code.
      (Martin Pool)

    * Handle more cases of pipe errors in display commands

    * Change status to 3 for all errors

    * Files that are added and unlinked before committing are completely
      ignored by diff and status

    * Stores with some compressed texts and some uncompressed texts are now
      able to be used. (John A Meinel)

    * Fix for bzr pull failing sometimes under windows

    * Fix for sftp transport under windows when using interactive auth

    * Show files which are both renamed and modified as such in 'bzr 
      status' output.  (#4503, Daniel Silverstone)

    * Make annotate cope better with revisions committed without a valid 
      email address.  (Marien Zwart)

    * Fix representation of tab characters in commit messages.  (Harald 
      Meland)

    * List of plugin directories in BZR_PLUGIN_PATH environment variable is
      now parsed properly under Windows. (Alexander Belchenko)

    * Show number of revisions pushed/pulled/merged. (Robey Pointer)

    * Keep a cached copy of the basis inventory to speed up operations 
      that need to refer to it.  (Johan Rydberg, Martin Pool)

    * Fix bugs in bzr status display of non-ascii characters.  (Martin 
      Pool)

    * Remove Makefile.in from default ignore list.  (#6413, Tollef Fog 
      Heen, Martin Pool)

    * Fix failure in 'bzr added'.  (Nathan McCallum, Martin Pool)

  TESTING:

    * Fix selftest asking for passwords when there are no SFTP keys.  
      (Robey Pointer, Jelmer Vernooij) 

    * Fix selftest run with 'python -O'.  (Martin Pool)

    * Fix HTTP tests under Windows. (John Arbash Meinel)

    * Make tests work even if HOME is not set (Aaron Bentley)

    * Updated build_tree to use fixed line-endings for tests which read 
      the file cotents and compare. Make some tests use this to pass under
      Windows. (John Arbash Meinel)

    * Skip stat and symlink tests under Windows. (Alexander Belchenko)

    * Delay in selftest/testhashcash is now issued under win32 and Cygwin.
      (John Arbash Meinel)

    * Use terminal width to align verbose test output.  (Martin Pool)

    * Blackbox tests are maintained within the bzrlib.tests.blackbox directory.
      If adding a new test script please add that to
      bzrlib.tests.blackbox.__init__. (Robert Collins)

    * Much better error message if one of the test suites can't be 
      imported.  (Martin Pool)

    * Make check now runs the test suite twice - once with the default locale,
      and once with all locales forced to C, to expose bugs. This is not 
      trivially done within python, so for now its only triggered by running
      Make check. Integrators and packagers who wish to check for full 
      platform support should run 'make check' to test the source.
      (Robert Collins)

    * Tests can now run TestSkipped if they can't execute for any reason.
      (Martin Pool) (NB: TestSkipped should only be raised for correctable
      reasons - see the wiki spec ImprovingBzrTestSuite).

    * Test sftp with relative, absolute-in-homedir and absolute-not-in-homedir
      paths for the transport tests. Introduce blackbox remote sftp tests that
      test the same permutations. (Robert Collins, Robey Pointer)

    * Transport implementation tests are now independent of the local file
      system, which allows tests for esoteric transports, and for features
      not available in the local file system. They also repeat for variations
      on the URL scheme that can introduce issues in the transport code,
      see bzrlib.transport.TransportTestProviderAdapter() for this.
      (Robert Collins).

    * TestCase.build_tree uses the transport interface to build trees, pass
      in a transport parameter to give it an existing connection.
      (Robert Collins).

  INTERNALS:

    * WorkingTree.pull has been split across Branch and WorkingTree,
      to allow Branch only pulls. (Robert Collins)

    * commands.display_command now returns the result of the decorated 
      function. (Robert Collins)

    * LocationConfig now has a set_user_option(key, value) call to save
      a setting in its matching location section (a new one is created
      if needed). (Robert Collins)

    * Branch has two new methods, get_push_location and set_push_location
      to respectively, get and set the push location. (Robert Collins)

    * commands.register_command now takes an optional flag to signal that
      the registrant is planning to decorate an existing command. When 
      given multiple plugins registering a command is not an error, and
      the original command class (whether built in or a plugin based one) is
      returned to the caller. There is a new error 'MustUseDecorated' for
      signalling when a wrapping command should switch to the original
      version. (Robert Collins)

    * Some option parsing errors will raise 'BzrOptionError', allowing 
      granular detection for decorating commands. (Robert Collins).

    * Branch.read_working_inventory has moved to
      WorkingTree.read_working_inventory. This necessitated changes to
      Branch.get_root_id, and a move of Branch.set_inventory to WorkingTree
      as well. To make it clear that a WorkingTree cannot always be obtained
      Branch.working_tree() will raise 'errors.NoWorkingTree' if one cannot
      be obtained. (Robert Collins)

    * All pending merges operations from Branch are now on WorkingTree.
      (Robert Collins)

    * The follow operations from Branch have moved to WorkingTree:
      add()
      commit()
      move()
      rename_one()
      unknowns()
      (Robert Collins)

    * bzrlib.add.smart_add_branch is now smart_add_tree. (Robert Collins)

    * New "rio" serialization format, similar to rfc-822. (Martin Pool)

    * Rename selftests to `bzrlib.tests.test_foo`.  (John A Meinel, Martin 
      Pool)

    * bzrlib.plugin.all_plugins has been changed from an attribute to a 
      query method. (Robert Collins)
 
    * New options to read only the table-of-contents of a weave.  
      (Denys Duchier)

    * Raise NoSuchFile when someone tries to add a non-existant file.
      (Michael Ellerman)

    * Simplify handling of DivergedBranches in cmd_pull().
      (Michael Ellerman)
		   
   
    * Branch.controlfile* logic has moved to lockablefiles.LockableFiles, which
      is exposed as Branch().control_files. Also this has been altered with the
      controlfile pre/suffix replaced by simple method names like 'get' and
      'put'. (Aaron Bentley, Robert Collins).

    * Deprecated functions and methods can now be marked as such using the 
      bzrlib.symbol_versioning module. Marked method have their docstring
      updated and will issue a DeprecationWarning using the warnings module
      when they are used. (Robert Collins)

    * bzrlib.osutils.safe_unicode now exists to provide parameter coercion
      for functions that need unicode strings. (Robert Collins)

bzr 0.6 2005-10-28

  IMPROVEMENTS:
  
    * pull now takes --verbose to show you what revisions are added or removed
      (John A Meinel)

    * merge now takes a --show-base option to include the base text in
      conflicts.
      (Aaron Bentley)

    * The config files are now read using ConfigObj, so '=' should be used as
      a separator, not ':'.
      (Aaron Bentley)

    * New 'bzr commit --strict' option refuses to commit if there are 
      any unknown files in the tree.  To commit, make sure all files are 
      either ignored, added, or deleted.  (Michael Ellerman)

    * The config directory is now ~/.bazaar, and there is a single file 
      ~/.bazaar/bazaar.conf storing email, editor and other preferences.
      (Robert Collins)

    * 'bzr add' no longer takes a --verbose option, and a --quiet option
      has been added that suppresses all output.

    * Improved zsh completion support in contrib/zsh, from Clint
      Adams.

    * Builtin 'bzr annotate' command, by Martin Pool with improvements from 
      Goffredo Baroncelli.
    
    * 'bzr check' now accepts -v for verbose reporting, and checks for
      ghosts in the branch. (Robert Collins)

    * New command 're-sign' which will regenerate the gpg signature for 
      a revision. (Robert Collins)

    * If you set check_signatures=require for a path in 
      ~/.bazaar/branches.conf then bzr will invoke your
      gpg_signing_command (defaults to gpg) and record a digital signature
      of your commit. (Robert Collins)

    * New sftp transport, based on Paramiko.  (Robey Pointer)

    * 'bzr pull' now accepts '--clobber' which will discard local changes
      and make this branch identical to the source branch. (Robert Collins)

    * Just give a quieter warning if a plugin can't be loaded, and 
      put the details in .bzr.log.  (Martin Pool)

    * 'bzr branch' will now set the branch-name to the last component of the
      output directory, if one was supplied.

    * If the option 'post_commit' is set to one (or more) python function
      names (must be in the bzrlib namespace), then they will be invoked
      after the commit has completed, with the branch and revision_id as
      parameters. (Robert Collins)

    * Merge now has a retcode of 1 when conflicts occur. (Robert Collins)

    * --merge-type weave is now supported for file contents.  Tree-shape
      changes are still three-way based.  (Martin Pool, Aaron Bentley)

    * 'bzr check' allows the first revision on revision-history to have
      parents - something that is expected for cheap checkouts, and occurs
      when conversions from baz do not have all history.  (Robert Collins).

   * 'bzr merge' can now graft unrelated trees together, if your specify
     0 as a base. (Aaron Bentley)

   * 'bzr commit branch' and 'bzr commit branch/file1 branch/file2' now work
     (Aaron Bentley)

    * Add '.sconsign*' to default ignore list.  (Alexander Belchenko)

   * 'bzr merge --reprocess' minimizes conflicts

  TESTING:

    * The 'bzr selftest --pattern' option for has been removed, now 
      test specifiers on the command line can be simple strings, or 
      regexps, or both. (Robert Collins)

    * Passing -v to selftest will now show the time each test took to 
      complete, which will aid in analysing performance regressions and
      related questions. (Robert Collins)

    * 'bzr selftest' runs all tests, even if one fails, unless '--one'
      is given. (Martin Pool)

    * There is a new method for TestCaseInTempDir, assertFileEqual, which
      will check that a given content is equal to the content of the named
      file. (Robert Collins)

    * Fix test suite's habit of leaving many temporary log files in $TMPDIR.
      (Martin Pool)

  INTERNALS:

    * New 'testament' command and concept for making gpg-signatures 
      of revisions that are not tied to a particular internal
      representation.  (Martin Pool).

    * Per-revision properties ('revprops') as key-value associated 
      strings on each revision created when the revision is committed.
      Intended mainly for the use of external tools.  (Martin Pool).

    * Config options have moved from bzrlib.osutils to bzrlib.config.
      (Robert Collins)

    * Improved command line option definitions allowing explanations
      for individual options, among other things.  Contributed by 
      Magnus Therning.

    * Config options have moved from bzrlib.osutils to bzrlib.config.
      Configuration is now done via the config.Config interface:
      Depending on whether you have a Branch, a Location or no information
      available, construct a *Config, and use its signature_checking,
      username and user_email methods. (Robert Collins)

    * Plugins are now loaded under bzrlib.plugins, not bzrlib.plugin, and
      they are made available for other plugins to use. You should not 
      import other plugins during the __init__ of your plugin though, as 
      no ordering is guaranteed, and the plugins directory is not on the
      python path. (Robert Collins)

    * Branch.relpath has been moved to WorkingTree.relpath. WorkingTree no
      no longer takes an inventory, rather it takes an option branch
      parameter, and if None is given will open the branch at basedir 
      implicitly. (Robert Collins)

    * Cleaner exception structure and error reporting.  Suggested by 
      Scott James Remnant.  (Martin Pool)

    * Branch.remove has been moved to WorkingTree, which has also gained
      lock_read, lock_write and unlock methods for convenience. (Robert
      Collins)

    * Two decorators, needs_read_lock and needs_write_lock have been added
      to the branch module. Use these to cause a function to run in a
      read or write lock respectively. (Robert Collins)

    * Branch.open_containing now returns a tuple (Branch, relative-path),
      which allows direct access to the common case of 'get me this file
      from its branch'. (Robert Collins)

    * Transports can register using register_lazy_transport, and they 
      will be loaded when first used.  (Martin Pool)

    * 'pull' has been factored out of the command as WorkingTree.pull().
      A new option to WorkingTree.pull has been added, clobber, which will
      ignore diverged history and pull anyway.
      (Robert Collins)

    * config.Config has a 'get_user_option' call that accepts an option name.
      This will be looked up in branches.conf and bazaar.conf as normal.
      It is intended that this be used by plugins to support options - 
      options of built in programs should have specific methods on the config.
      (Robert Collins)

    * merge.merge_inner now has tempdir as an optional parameter. (Robert
      Collins)

    * Tree.kind is not recorded at the top level of the hierarchy, as it was
      missing on EmptyTree, leading to a bug with merge on EmptyTrees.
      (Robert Collins)

    * WorkingTree.__del__ has been removed, it was non deterministic and not 
      doing what it was intended to. See WorkingTree.__init__ for a comment
      about future directions. (Robert Collins/Martin Pool)

    * bzrlib.transport.http has been modified so that only 404 urllib errors
      are returned as NoSuchFile. Other exceptions will propogate as normal.
      This allows debuging of actual errors. (Robert Collins)

    * bzrlib.transport.Transport now accepts *ONLY* url escaped relative paths
      to apis like 'put', 'get' and 'has'. This is to provide consistent
      behaviour - it operates on url's only. (Robert Collins)

    * Transports can register using register_lazy_transport, and they 
      will be loaded when first used.  (Martin Pool)

    * 'merge_flex' no longer calls conflict_handler.finalize(), instead that
      is called by merge_inner. This is so that the conflict count can be 
      retrieved (and potentially manipulated) before returning to the caller
      of merge_inner. Likewise 'merge' now returns the conflict count to the
      caller. (Robert Collins)

    * 'revision.revision_graph can handle having only partial history for
      a revision - that is no revisions in the graph with no parents.
      (Robert Collins).

    * New builtins.branch_files uses the standard file_list rules to produce
      a branch and a list of paths, relative to that branch (Aaron Bentley)

    * New TestCase.addCleanup facility.

    * New bzrlib.version_info tuple (similar to sys.version_info), which can
      be used by programs importing bzrlib.

  BUG FIXES:

    * Better handling of branches in directories with non-ascii names. 
      (Joel Rosdahl, Panagiotis Papadakos)

    * Upgrades of trees with no commits will not fail due to accessing
      [-1] in the revision-history. (Andres Salomon)


bzr 0.1.1 2005-10-12

  BUG FIXES:

    * Fix problem in pulling over http from machines that do not 
      allow directories to be listed.

    * Avoid harmless warning about invalid hash cache after 
      upgrading branch format.

  PERFORMANCE: 
  
    * Avoid some unnecessary http operations in branch and pull.


bzr 0.1 2005-10-11

  NOTES:

    * 'bzr branch' over http initially gives a very high estimate
      of completion time but it should fall as the first few 
      revisions are pulled in.  branch is still slow on 
      high-latency connections.

  BUG FIXES:
  
    * bzr-man.py has been updated to work again. Contributed by
      Rob Weir.

    * Locking is now done with fcntl.lockf which works with NFS
      file systems. Contributed by Harald Meland.

    * When a merge encounters a file that has been deleted on
      one side and modified on the other, the old contents are
      written out to foo.BASE and foo.SIDE, where SIDE is this
      or OTHER. Contributed by Aaron Bentley.

    * Export was choosing incorrect file paths for the content of
      the tarball, this has been fixed by Aaron Bentley.

    * Commit will no longer commit without a log message, an 
      error is returned instead. Contributed by Jelmer Vernooij.

    * If you commit a specific file in a sub directory, any of its
      parent directories that are added but not listed will be 
      automatically included. Suggested by Michael Ellerman.

    * bzr commit and upgrade did not correctly record new revisions
      for files with only a change to their executable status.
      bzr will correct this when it encounters it. Fixed by
      Robert Collins

    * HTTP tests now force off the use of http_proxy for the duration.
      Contributed by Gustavo Niemeyer.

    * Fix problems in merging weave-based branches that have 
      different partial views of history.

    * Symlink support: working with symlinks when not in the root of a 
      bzr tree was broken, patch from Scott James Remnant.

  IMPROVEMENTS:

    * 'branch' now accepts a --basis parameter which will take advantage
      of local history when making a new branch. This allows faster 
      branching of remote branches. Contributed by Aaron Bentley.

    * New tree format based on weave files, called version 5.
      Existing branches can be upgraded to this format using 
      'bzr upgrade'.

    * Symlinks are now versionable. Initial patch by 
      Erik Toubro Nielsen, updated to head by Robert Collins.

    * Executable bits are tracked on files. Patch from Gustavo
      Niemeyer.

    * 'bzr status' now shows unknown files inside a selected directory.
      Patch from Heikki Paajanen.

    * Merge conflicts are recorded in .bzr. Two new commands 'conflicts'
      and 'resolve' have needed added, which list and remove those 
      merge conflicts respectively. A conflicted tree cannot be committed
      in. Contributed by Aaron Bentley.

    * 'rm' is now an alias for 'remove'.

    * Stores now split out their content in a single byte prefixed hash,
      dropping the density of files per directory by 256. Contributed by
      Gustavo Niemeyer.

    * 'bzr diff -r branch:URL' will now perform a diff between two branches.
      Contributed by Robert Collins.

    * 'bzr log' with the default formatter will show merged revisions,
      indented to the right. Initial implementation contributed by Gustavo
      Niemeyer, made incremental by Robert Collins.


  INTERNALS:

    * Test case failures have the exception printed after the log 
      for your viewing pleasure.

    * InventoryEntry is now an abstract base class, use one of the
      concrete InventoryDirectory etc classes instead.

    * Branch raises an UnsupportedFormatError when it detects a 
      bzr branch it cannot understand. This allows for precise
      handling of such circumstances.


  TESTING:

    * Removed testsweet module so that tests can be run after 
      bzr installed by 'bzr selftest'.

    * 'bzr selftest' command-line arguments can now be partial ids
      of tests to run, e.g. 'bzr selftest test_weave'

      
bzr 0.0.9 2005-09-23

  BUG FIXES:

    * Fixed "branch -r" option.

    * Fix remote access to branches containing non-compressed history.
      (Robert Collins).

    * Better reliability of http server tests.  (John Arbash-Meinel)

    * Merge graph maximum distance calculation fix.  (Aaron Bentley)
   
    * Various minor bug in windows support have been fixed, largely in the
      test suite. Contributed by Alexander Belchenko.

  IMPROVEMENTS:

    * Status now accepts a -r argument to give status between chosen
      revisions. Contributed by Heikki Paajanen.

    * Revision arguments no longer use +/-/= to control ranges, instead
      there is a 'before' namespace, which limits the successive namespace.
      For example '$ bzr log -r date:yesterday..before:date:today' will
      select everything from yesterday and before today. Contributed by
      Robey Pointer

    * There is now a bzr.bat file created by distutils when building on 
      Windows. Contributed by Alexander Belchenko.

  INTERNALS:

    * Removed uuid() as it was unused.

    * Improved 'fetch' code for pulling revisions from one branch into
      another (used by pull, merged, etc.)


bzr 0.0.8 2005-09-20

  IMPROVEMENTS:

    * Adding a file whose parent directory is not versioned will
      implicitly add the parent, and so on up to the root. This means
      you should never need to explictly add a directory, they'll just
      get added when you add a file in the directory.  Contributed by
      Michael Ellerman.

    * Ignore .DS_Store (contains Mac metadata) by default.  Patch from
      Nir Soffer.

    * If you set BZR_EDITOR in the environment, it is checked in
      preference to EDITOR and the config file for the interactive commit
      editing program. Related to this is a bugfix where a missing program
      set in EDITOR would cause editing to fail, now the fallback program
      for the operating system is still tried.

    * Files that are not directories/symlinks/regular files will no longer
      cause bzr to fail, it will just ignore them by default. You cannot add
      them to the tree though - they are not versionable.


  INTERNALS:

    * Refactor xml packing/unpacking.

  BUG FIXES: 

    * Fixed 'bzr mv' by Ollie Rutherfurd.

    * Fixed strange error when trying to access a nonexistent http
      branch.

    * Make sure that the hashcache gets written out if it can't be
      read.


  PORTABILITY:

    * Various Windows fixes from Ollie Rutherfurd.

    * Quieten warnings about locking; patch from Matt Lavin.


bzr-0.0.7 2005-09-02

  NEW FEATURES:

    * ``bzr shell-complete`` command contributed by Clint Adams to
      help with intelligent shell completion.

    * New expert command ``bzr find-merge-base`` for debugging merges.


  ENHANCEMENTS:

    * Much better merge support.

    * merge3 conflicts are now reported with markers like '<<<<<<<'
      (seven characters) which is the same as CVS and pleases things
      like emacs smerge.


  BUG FIXES:

    * ``bzr upgrade`` no longer fails when trying to fix trees that
      mention revisions that are not present.

    * Fixed bugs in listing plugins from ``bzr plugins``.

    * Fix case of $EDITOR containing options for the editor.

    * Fix log -r refusing to show the last revision.
      (Patch from Goffredo Baroncelli.)


  CHANGES:

    * ``bzr log --show-ids`` shows the revision ids of all parents.

    * Externally provided commands on your $BZRPATH no longer need
      to recognize --bzr-usage to work properly, and can just handle
      --help themselves.


  LIBRARY:

    * Changed trace messages to go through the standard logging
      framework, so that they can more easily be redirected by
      libraries.



bzr-0.0.6 2005-08-18

  NEW FEATURES:

    * Python plugins, automatically loaded from the directories on
      BZR_PLUGIN_PATH or ~/.bzr.conf/plugins by default.

    * New 'bzr mkdir' command.

    * Commit mesage is fetched from an editor if not given on the
      command line; patch from Torsten Marek.

    * ``bzr log -m FOO`` displays commits whose message matches regexp 
      FOO.
      
    * ``bzr add`` with no arguments adds everything under the current directory.

    * ``bzr mv`` does move or rename depending on its arguments, like
      the Unix command.

    * ``bzr missing`` command shows a summary of the differences
      between two trees.  (Merged from John Arbash-Meinel.)

    * An email address for commits to a particular tree can be
      specified by putting it into .bzr/email within a branch.  (Based
      on a patch from Heikki Paajanen.)


  ENHANCEMENTS:

    * Faster working tree operations.


  CHANGES:

    * 3rd-party modules shipped with bzr are copied within the bzrlib
      python package, so that they can be installed by the setup
      script without clashing with anything already existing on the
      system.  (Contributed by Gustavo Niemeyer.)

    * Moved plugins directory to bzrlib/, so that there's a standard
      plugin directory which is not only installed with bzr itself but
      is also available when using bzr from the development tree.
      BZR_PLUGIN_PATH and DEFAULT_PLUGIN_PATH are then added to the
      standard plugins directory.

    * When exporting to a tarball with ``bzr export --format tgz``, put 
      everything under a top directory rather than dumping it into the
      current directory.   This can be overridden with the ``--root`` 
      option.  Patch from William DodÃ© and John Meinel.

    * New ``bzr upgrade`` command to upgrade the format of a branch,
      replacing ``bzr check --update``.

    * Files within store directories are no longer marked readonly on
      disk.

    * Changed ``bzr log`` output to a more compact form suggested by
      John A Meinel.  Old format is available with the ``--long`` or
      ``-l`` option, patched by William DodÃ©.

    * By default the commit command refuses to record a revision with
      no changes unless the ``--unchanged`` option is given.

    * The ``--no-plugins``, ``--profile`` and ``--builtin`` command
      line options must come before the command name because they 
      affect what commands are available; all other options must come 
      after the command name because their interpretation depends on
      it.

    * ``branch`` and ``clone`` added as aliases for ``branch``.

    * Default log format is back to the long format; the compact one
      is available with ``--short``.
      
      
  BUG FIXES:
  
    * Fix bugs in committing only selected files or within a subdirectory.


bzr-0.0.5  2005-06-15
  
  CHANGES:

    * ``bzr`` with no command now shows help rather than giving an
      error.  Suggested by Michael Ellerman.

    * ``bzr status`` output format changed, because svn-style output
      doesn't really match the model of bzr.  Now files are grouped by
      status and can be shown with their IDs.  ``bzr status --all``
      shows all versioned files and unknown files but not ignored files.

    * ``bzr log`` runs from most-recent to least-recent, the reverse
      of the previous order.  The previous behaviour can be obtained
      with the ``--forward`` option.
        
    * ``bzr inventory`` by default shows only filenames, and also ids
      if ``--show-ids`` is given, in which case the id is the second
      field.


  ENHANCEMENTS:

    * New 'bzr whoami --email' option shows only the email component
      of the user identification, from Jo Vermeulen.

    * New ``bzr ignore PATTERN`` command.

    * Nicer error message for broken pipe, interrupt and similar
      conditions that don't indicate an internal error.

    * Add ``.*.sw[nop] .git .*.tmp *,v`` to default ignore patterns.

    * Per-branch locks keyed on ``.bzr/branch-lock``, available in
      either read or write mode.

    * New option ``bzr log --show-ids`` shows revision and file ids.

    * New usage ``bzr log FILENAME`` shows only revisions that
      affected that file.

    * Changed format for describing changes in ``bzr log -v``.

    * New option ``bzr commit --file`` to take a message from a file,
      suggested by LarstiQ.

    * New syntax ``bzr status [FILE...]`` contributed by Bartosz
      Oler.  File may be in a branch other than the working directory.

    * ``bzr log`` and ``bzr root`` can be given an http URL instead of
      a filename.

    * Commands can now be defined by external programs or scripts
      in a directory on $BZRPATH.

    * New "stat cache" avoids reading the contents of files if they 
      haven't changed since the previous time.

    * If the Python interpreter is too old, try to find a better one
      or give an error.  Based on a patch from Fredrik Lundh.

    * New optional parameter ``bzr info [BRANCH]``.

    * New form ``bzr commit SELECTED`` to commit only selected files.

    * New form ``bzr log -r FROM:TO`` shows changes in selected
      range; contributed by John A Meinel.

    * New option ``bzr diff --diff-options 'OPTS'`` allows passing
      options through to an external GNU diff.

    * New option ``bzr add --no-recurse`` to add a directory but not
      their contents.

    * ``bzr --version`` now shows more information if bzr is being run
      from a branch.

  
  BUG FIXES:

    * Fixed diff format so that added and removed files will be
      handled properly by patch.  Fix from Lalo Martins.

    * Various fixes for files whose names contain spaces or other
      metacharacters.


  TESTING:

    * Converted black-box test suites from Bourne shell into Python;
      now run using ``./testbzr``.  Various structural improvements to
      the tests.

    * testbzr by default runs the version of bzr found in the same
      directory as the tests, or the one given as the first parameter.

    * testbzr also runs the internal tests, so the only command
      required to check is just ``./testbzr``.

    * testbzr requires python2.4, but can be used to test bzr running
      under a different version.

    * Tests added for many other changes in this release.


  INTERNAL:

    * Included ElementTree library upgraded to 1.2.6 by Fredrik Lundh.

    * Refactor command functions into Command objects based on HCT by
      Scott James Remnant.

    * Better help messages for many commands.

    * Expose bzrlib.open_tracefile() to start the tracefile; until
      this is called trace messages are just discarded.

    * New internal function find_touching_revisions() and hidden
      command touching-revisions trace the changes to a given file.

    * Simpler and faster compare_inventories() function.

    * bzrlib.open_tracefile() takes a tracefilename parameter.

    * New AtomicFile class.

    * New developer commands ``added``, ``modified``.


  PORTABILITY:

    * Cope on Windows on python2.3 by using the weaker random seed.
      2.4 is now only recommended.


bzr-0.0.4  2005-04-22

  ENHANCEMENTS:

    * 'bzr diff' optionally takes a list of files to diff.  Still a bit
      basic.  Patch from QuantumG.

    * More default ignore patterns.

    * New 'bzr log --verbose' shows a list of files changed in the
      changeset.  Patch from Sebastian Cote.

    * Roll over ~/.bzr.log if it gets too large.

    * Command abbreviations 'ci', 'st', 'stat', '?' based on a patch
      by Jason Diamon.

    * New 'bzr help commands' based on a patch from Denys Duchier.


  CHANGES:

    * User email is determined by looking at $BZREMAIL or ~/.bzr.email
      or $EMAIL.  All are decoded by the locale preferred encoding.
      If none of these are present user@hostname is used.  The host's
      fully-qualified name is not used because that tends to fail when
      there are DNS problems.

    * New 'bzr whoami' command instead of username user-email.


  BUG FIXES: 

    * Make commit safe for hardlinked bzr trees.

    * Some Unicode/locale fixes.

    * Partial workaround for difflib.unified_diff not handling
      trailing newlines properly.


  INTERNAL:

    * Allow docstrings for help to be in PEP0257 format.  Patch from
      Matt Brubeck.

    * More tests in test.sh.

    * Write profile data to a temporary file not into working
      directory and delete it when done.

    * Smaller .bzr.log with process ids.


  PORTABILITY:

    * Fix opening of ~/.bzr.log on Windows.  Patch from Andrew
      Bennetts.

    * Some improvements in handling paths on Windows, based on a patch
      from QuantumG.


bzr-0.0.3  2005-04-06

  ENHANCEMENTS:

    * New "directories" internal command lists versioned directories
      in the tree.

    * Can now say "bzr commit --help".

    * New "rename" command to rename one file to a different name
      and/or directory.

    * New "move" command to move one or more files into a different
      directory.

    * New "renames" command lists files renamed since base revision.

    * New cat command contributed by janmar.

  CHANGES:

    * .bzr.log is placed in $HOME (not pwd) and is always written in
      UTF-8.  (Probably not a completely good long-term solution, but
      will do for now.)

  PORTABILITY:

    * Workaround for difflib bug in Python 2.3 that causes an
      exception when comparing empty files.  Reported by Erik Toubro
      Nielsen.

  INTERNAL:

    * Refactored inventory storage to insert a root entry at the top.

  TESTING:

    * Start of shell-based black-box testing in test.sh.


bzr-0.0.2.1

  PORTABILITY:

    * Win32 fixes from Steve Brown.


bzr-0.0.2  "black cube"  2005-03-31

  ENHANCEMENTS:

    * Default ignore list extended (see bzrlib/__init__.py).

    * Patterns in .bzrignore are now added to the default ignore list,
      rather than replacing it.

    * Ignore list isn't reread for every file.

    * More help topics.

    * Reinstate the 'bzr check' command to check invariants of the
      branch.

    * New 'ignored' command lists which files are ignored and why;
      'deleted' lists files deleted in the current working tree.

    * Performance improvements.

    * New global --profile option.
    
    * Ignore patterns like './config.h' now correctly match files in
      the root directory only.


bzr-0.0.1  2005-03-26

  ENHANCEMENTS:

    * More information from info command.

    * Can now say "bzr help COMMAND" for more detailed help.

    * Less file flushing and faster performance when writing logs and
      committing to stores.

    * More useful verbose output from some commands.

  BUG FIXES:

    * Fix inverted display of 'R' and 'M' during 'commit -v'.

  PORTABILITY:

    * Include a subset of ElementTree-1.2.20040618 to make
      installation easier.

    * Fix time.localtime call to work with Python 2.3 (the minimum
      supported).


bzr-0.0.0.69  2005-03-22

  ENHANCEMENTS:

    * First public release.

    * Storage of local versions: init, add, remove, rm, info, log,
      diff, status, etc.
