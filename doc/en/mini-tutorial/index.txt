===================
Bazaar in 5 minutes
===================

.. contents::

Introduction
============

Bazaar is a distributed version control system that makes it easier for
people to work together on software projects. 

Over the next five minutes, you'll learn how to put your files under
version control, how to record changes to them, examine your work, publish
it and merge changes from someone else.

If you'd prefer a more detailed introduction, take a look at our guide
`Learning More`_.


Installation
============

For this guide, we'll assume Bazaar is already on your system. If not, it's
trivial to install on any platform that runs Python 2.4:

- *GNU/Linux:* Bazaar is probably in your GNU/Linux distribution already.
- *Windows:* `installation instructions`_.
- *Mac OS X:* `install using MacPorts`_.

For other platforms and how to install from source code, see the Downloads_
and Installation_ pages.

.. _installation instructions: http://bazaar-vcs.org/WindowsDownloads
.. _install using MacPorts: http://bazaar-vcs.org/MacPorts
.. _Downloads: http://bazaar-vcs.org/Download
.. _Installation: http://bazaar-vcs.org/InstallationFAQ


Introducing yourself
====================

Before you start work, you need to tell Bazaar your name and email address.
This lets Bazaar identify your work in revision logs.

Using your name and email address, instead of John Doe's, type::

  $ bzr whoami "John Doe <john.doe@gmail.com>"
  
Bazaar will now create or modify a configuration file, including your name
and email address, at ~/.bazaar/bazaar.conf

Now, check that your name and email address are correctly registered::

  $ bzr whoami
  John Doe <john.doe@gmail.com>


Putting existing files under version control
============================================

Let's create a directory and some files to use with Bazaar::

 $ mkdir myproject
 $ cd myproject
 $ mkdir subdirectory
 $ touch test1.txt test2.txt test3.txt subdirectory/test4.txt

Now get Bazaar to initalise itself in that directory::

  $ bzr init
  
If it looks like nothing happened, don't worry. Bazaar has created a
_branch where it will store your files and their revision history.

.. _branch: http://bazaar-vcs.org/Branch

The next step is to tell Bazaar which files you want to track.

  $ bzr add

Bazaar will now recursively put everything in the directory under version
control::

 $ added subdirectory
 $ added test1.txt
 $ added test2.txt
 $ added test3.txt
 $ added subdirectory/test4.txt

Next, take a snapshot of your files by committing them to your branch. Add 
a commit message to explain why you made the commit::

  $ bzr commit -m "Initial import"
  
As Bazaar is a distributed version control system, it doesn't need to 
connect to a central server to make the commit. Instead, Bazaar stores your 
branch and all its commits inside the directory you're working with - look
for the ``.bzr`` sub-directory.


Making changes to your files
============================

Let's change a file and commit those changes to your branch.

Edit ``test1.txt`` in your favourite editor, then check what have you done::

 === modified file 'test1.txt'
 --- test1.txt   2007-10-08 17:56:14 +0000
 +++ test1.txt   2007-10-08 17:46:22 +0000
 @@ -0,0 +1,1 @@
 +test test test

Commit your work to your Bazaar branch::

  $ bzr commit -m 'added first line of text'
  Committed revision 2.


Viewing the revision log
========================

You can see the history of your branch by browsing its log::

  $ bzr log
  ------------------------------------------------------------
  revno: 2
  committer: John Doe <john.doe@gmail.com>
  branch nick: myproject
  timestamp: Mon 2007-10-08 17:56:14 +0000
  message:
    added first line of text
  ------------------------------------------------------------
  revno: 1
  committer: John Doe <john.doe@gmail.com>
  branch nick: myproject
  timestamp: Mon 2006-10-08 17:46:22 +0000
  message:
    Initial import


Publishing Your Branch
======================

There are a couple of ways to publish your branch but the easiest way is to
push it to a web server.

Let's assume you want to publish your branch at myserver.com/myproject
and you have sftp access to the server::

  $ bzr push sftp://me@myserver.com/public_html/myproject/
  2 revision(s) pushed.
    
*Note:* to use sftp, you may need to install ``paramiko`` and
``pyCrypto``. See http://bazaar-vcs.org/InstallationFaq for details.

Now anyone can get their own copy of your branch by typing::

  bzr branch http://myserver.com/myproject/

Their branch will have all the same files, with the same revision history
as yours but any changes they make will stay in their own branch. If you
like, you can merge your branches at any time.


Creating and working with your own copy of someone else's branch
================================================================

You can also make your own branch of someone else's work. Let's take a
real-world example, Bazaar's GTK interface::

  $ bzr branch http://bazaar.launchpad.net/~bzr/bzr-gtk/trunk bzr-gtk.john
  Branched 292 revision(s).                                                        

Bazaar will download all the files and complete revision history from the
bzr-gtk project's trunk branch and create a copy called bzr-gtk.john.

Now, you have your own copy of the branch you can make any changes you want
without a net connection. You can share your branch at any time by 
publishing it. If the  bzr-gtk team want to use your work, Bazaar makes it 
easy for them to merge your branch back into their trunk branch.


Updating your branch from the main branch
=========================================

While you commit changes to your branch, it's likely that other people will
also continue to commit code to the main branch.

To make sure your branch stays up to date, you should merge changes from
the main branch into your personal branch::

  $ bzr merge
  Using saved location: http://bazaar.launchpad.net/~bzr/bzr-gtk/trunk
  All changes applied successfully.
            
Check what has changed::

  $ bzr diff
 
If you're happy with the changes, you can commit them to your personal
branch::

  $ bzr commit -m 'merge from main branch'
  Committed revision 295.

Bazaar won't automatically commit changes from a merge. Although Bazaar
excels at handling complex merges, from time to time you may need to 
resolve conflicts or make other minor changes before committing. 


Learning more
=============

To learn about Bazaar::

  $ bzr help

To learn about Bazaar commands::

  $ bzr help commands

To learn about the ''foo'' topic or command::

  $ bzr help foo

Alternatively, browse the `Bazaar Documentation <../../index.html>`_.
