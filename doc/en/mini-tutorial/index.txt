===================
Bazaar in 5 minutes
===================

.. contents::

Introduction
============

Bazaar is a distributed version control system that makes it easier for
people to work together on software projects. 

Over the next five minutes, you'll learn how to XXX, XXX and XXX.

If you'd prefer a more detailed intrdouced, take a look at our guide
`Learning More`_.


Installation
============

For this guide, we'll assume you Bazaar is already on your system. If not,
it's trivial to install on any platform that runs Python 2.4:

- *GNU/Linux:* Bazaar is probably in your GNU/Linux distribution already.
- *Windows:* `installation instructions`_.
- *Mac OS X:* `install using MacPorts`_.

For other platforms and how to install from source code, see the Downloads_
page.

.. _installation instructions: http://bazaar-vcs.org/WindowsDownloads
.. _install using MacPorts: http://bazaar-vcs.org/MacPorts
.. _Downloads: http://bazaar-vcs.org/Download


Introducing yourself
====================

Hello, meet bzr. bzr is the command you'll use to invoke Bazaar.

Now it's your turn tell Bazaar who you are. This allows Bazaar to correctly
identify your work in revision logs.

Using your name and email address, instead of Joe Doe's, type::

  $ bzr whoami "Joe Doe <joe.doe@gmail.com>"

Now, check that your name and email address are correctly registered::

  $ bzr whoami
  Joe Doe <joe.doe@gmail.com>


Putting existing files under version control
============================================

Okay, it's time to put Bazaar to work.

The first step is to tell Bazaar that you want it to track the files in a
particular directory.

Switch to a directory where you've already got some files, then type::

  $ bzr init .
  
If it looks like nothing happened, don't worry. You now have an empty 
Bazaar branch. Let's tell Bazaar which files your want to work with.

  $ bzr add

Your files aren't in your branch just yet; you need to commit them first,
along with a quick message to explain the purpose of that commit::

  $ bzr commit -m "Initial import"

Bazaar has just taken a snapshot of everything in that directory. Even if
you make changes to those files, you can always go back to the state they
were in when you committed them to the branch.


Making changes to your files
============================

Now, let's change a file and commit those changes to your branch.

Edit a file::

  $ cd foobar.joe
  $ hack...

Check what have you done::

  $ bzr diff
  === modified file 'foo.c'
  --- foo.c
  +++ foo.c
  @@ -30,6 +30,7 @@
 
   #include "foo.h"
 
  +
   static PyObject *
   _pyfribidi_log2vis (PyObject * self, PyObject * args, PyObject * kw)
   {

Commit your work to your Bazaar branch::

  $ bzr commit -m 'added some whitespace'
  Committed revision 2.

Bazaar has taken another snapshot of your files.


Viewing the revision log
========================

You can see the history of your branch by browsing its log::

  $ bzr log
  ------------------------------------------------------------
  revno: 2
  committer: Joe Doe <joe.doe@gmail.com>
  branch nick: foobar.joe
  timestamp: Mon 2007-09-28 01:33:35 +0200
  message:
    added some whitespace
  ------------------------------------------------------------
  revno: 1
  committer: Joe Doe <joe.doe@gmail.com>
  branch nick: foobar.dev
  timestamp: Mon 2006-09-28 01:06:11 +0200
  message:
    initial revision


Publishing Your Branch
======================

There are a couple of ways to publish your branch but the easiest way is to
push it to a web server.

Let's assume you want to publish your branch at jod.example.com/foobar.joe
and you have sftp access to the server::

  $ bzr push sftp://jod@jod.example.com/public_html/foobar.joe/
  2 revision(s) pushed.
    
Note that to use sftp, your may need to install ''paramiko'' and
''pyCrypto''. See http://bazaar-vcs.org/InstallationFaq for details.

Now anyone can get their own copy of your branch by typing::

  bzr branch http://jod.example.com/foobar.joe/

Their branch will have all the same files, with the same revision history
as yours but any changes they make will stay in their own branch. If you
like, you can merge your branches at any time.


Creating your own branch Personal Branch
========================================

Of course, you can also make your own branch of someone else's work. Let's
say you're interested interested in the Foo project::

  $ bzr branch http://example.com/code/foobar.dev foobar.joe
  Branched 1 revision(s).                                                        

Bazaar will download all the files and complete revision history from the
Foo project's development branch. Just as you created your own branch from 
scratch, you now have your own copy of the Foo dev branch.

Now, any changes you commit will stay in your new personal copy of that
branch. So, you don't need internet access to make commits but it also
means that your changes won't appear automatically in the Foo project's
dev branch.


Updating your branch from the main branch
=========================================

While you work hard on your branch, it's likely that other people will
continue to commit code to the main branch.

To make sure your branch stays up to date, you should merge changes from
the main branch into your personal branch::

  $ bzr merge
  Using saved location: http://example.com/code/foobar.dev
  All changes applied successfully.
            
What was changed locally by merging the main branch?

::

  $ bzr diff
  === modified file 'pyfribidi.c'
  --- pyfribidi.c
  +++ pyfribidi.c
  @@ -236,6 +236,7 @@
          PyMem_Del (logical);
          PyMem_Del (visual);
   
  +    /* evil hack! */
          return result;
   }
 
You still need to commit those changes into your personal branch::

  $ bzr commit -m 'merge from main branch'
  Committed revision 6.

Bazaar won't automatically commit changes from a merge. Although Bazaar
excels at handling complex merges, from time to time you may need to 
resolve conflicts or make other minor changes before committing. 

Learning more
=============

To learn about bzr topics::

  $ bzr help

To learn about bzr commands::

  $ bzr help commands

To learn about the ''foo'' topic or command::

  $ bzr help foo

Alternatively, browse the `Bazaar Documentation <../../index.html>`_.
