####################
Bazaar Release Notes
####################

.. toctree::
   :maxdepth: 1

bzr 2.4b2
#########

:2.4b2: NOT RELEASED YET

External Compatibility Breaks
*****************************

.. These may require users to change the way they use Bazaar.

New Features
************

.. New commands, options, etc that users may wish to try out.

Improvements
************

.. Improvements to existing commands, especially improved performance 
   or memory usage, or better results.

* Resolve ``lp:FOO`` urls locally rather than doing an XMLRPC request if
  the user has done ``bzr launchpad-login``. The bzr+ssh URLs were already
  being handed off to the remote server anyway (xmlrpc has been mapping
  ``lp:bzr`` to ``bzr+ssh://bazaar.launchpad.net/+branch/bzr``, rather
  than ``bzr+ssh://bazaar.launchpad.net/~bzr-pqm/bzr/bzr.dev`` for a few
  months now.) By doing it ourselves, we can cut out substantial startup
  time. From Netherlands to London it was taking 368ms to do the XMLRPC
  call as much as 2s from Sydney. You can test the local logic by using
  ``-Dlaunchpad``.  (John Arbash Meinel, #397739)

Bug Fixes
*********

.. Fixes for situations where bzr would previously crash or give incorrect
   or undesirable results.

Documentation
*************

* Added a section about using a shared SSH account on a server for bzr+ssh
  access.  (Russell Smith)

API Changes
***********

.. Changes that may require updates in plugins or other code that uses
   bzrlib.

Internals
*********

.. Major internal changes, unlikely to be visible to users or plugin 
   developers, but interesting for bzr developers.

Testing
*******

.. Fixes and changes that are only relevant to bzr's test framework and 
   suite.  This can include new facilities for writing tests, fixes to 
   spurious test failures and changes to the way things should be tested.


bzr 2.4b1
#########

:2.4b1: 2011-04-17

This is the first beta of the 2.4 series, leading up to a 2.4.0
release in August 2011.  Beta releases are suitable for everyday use
but may cause some incompatibilities with plugins.  Some plugins may need
small updates to work with 2.4b1.

External Compatibility Breaks
*****************************

(none)

New Features
************

* Added ``changelog_merge`` plugin for merging changes to ``Changelog`` files
  in GNU format.  See ``bzr help changelog_merge`` for details.
  (Andrew Bennetts)
  
* Configuration options can now use references to other options in the same
  file by enclosing them with curly brackets (``{other_opt}``). This makes it
  possible to use, for example,
  ``push_location=lp:~vila/bzr/config-{nickname}`` in ``branch.conf`` when
  using a loom. During the beta period, the default behaviour is to disable
  this feature. It can be activated by declaring ``bzr.config.expand = True``
  in ``bazaar.conf``. (Vincent Ladeuil)

* External merge tools can now be configured in bazaar.conf. See
  ``bzr help configuration`` for more information.  (Gordon Tyler, #489915)

* The ``lp:`` directory service now supports Launchpad's QA staging.
  (Jelmer Vernooij, #667483)

Improvements
************

* A new hidden command ``bzr repair-workingtree``. This is a way to force
  the dirstate file to be rebuilt, rather than using a ``bzr checkout``
  workaround. (John Arbash Meinel)

* Added a ``Branch.heads_to_fetch`` RPC to the smart server protocol.
  This allows formats from plugins (such as looms) to efficiently tell the
  client which revisions need to be fetched.  (Andrew Bennetts)

* Branching, merging and pulling a branch now copies revisions named in
  tags, not just the tag metadata.  (Andrew Bennetts, #309682)

* ``bzr cat-revision`` no longer requires a working tree.
  (Jelmer Vernooij, #704405)

* ``bzr export --per-file-timestamps`` for .tar.gz files will now
  override the mtime for trees exported on Python 2.7 and later, which
  expose the 'mtime' field in gzip files. This makes the output of
  ``bzr export --per-file-timestamps`` for a particular tree
  deterministic.  (Jelmer Vernooij, #711226)

* ``bzr export --format=zip`` can now export to standard output,
  like the other exporters can. (Jelmer Vernooij, #513752)

* ``bzr export`` can now create ``.tar.xz`` and ``.tar.lzma`` files.
  (Jelmer Vernooij, #551714)

* Getting all entries from ``CHKInventory.iter_entries_by_dir()`` has been
  sped up dramatically for large trees. Iterating by dir is not the best
  way to load data from a CHK inventory, so it preloads all the items in
  the correct order. (With the gcc-tree, this changes it (re)reading 8GB
  of CHK data, down to just 150MB.) This has noticeable affects for things
  like building checkouts, etc.  (John Arbash Meinel, #737234)


Bug Fixes
*********

* A MemoryError thrown on the server during a remote operation will now be
  usefully reported, and other unexpected errors will include the class name.
  (Martin [gz], #722416)

* ``bzr annotate -r-1 file`` will now properly annotate a deleted file.
  (Andrew King, #537442)

* ``bzr export`` to zip files will now set a mode on directories.
  (Jelmer Vernooij, #207253)

* ``bzr export`` to tgz files will only write out the basename of the
  tarfile to the gzip file. (Jelmer Vernooij, #102234)

* ``bzr push --overwrite`` with an older revision specified will now correctly
  roll back the target branch. (Jelmer Vernooij, #386576)

* ``bzr lp-propose`` can now propose merges against packaging branches on
  Launchpad without requiring the target branch to be specified.
  (Jelmer Vernooij, #704647)

* ``bzr lp-propose`` no longer requires a reviewer to be specified. It will
  instead leave setting the reviewer up to Launchpad if it was not specified.
  (Jelmer Vernooij, #583772)

* ``bzr pull`` will now exit with exit code 1 if there were tag conflicts.
  (Jelmer Vernooij, #213185)

* ``bzr mv`` user errors no longer throw UnicodeEncodeError with non-ascii
  paths, however they may still print junk if not on a UTF-8 terminal.
  (Martin [gz], #707954)

* ``bzr reconfigure --unstacked`` now copies revisions (and their
  ancestors) named in tags into the unstacked repository, not just the
  ancestry of the branch's tip.  (Andrew Bennetts, #401646)

* ``bzr serve`` no longer crashes when a server_started hook is installed and
  IPv6 support is available on the system. (Jelmer Vernooij, #293697)

* ``bzr tags`` will no longer choke on branches with ghost revisions in
  their mainline and tags on revisions not in the branch ancestry. 
  (Jelmer Vernooij, #397556)

* ``bzr whoami`` will now display an error if both a new identity and
  ``--email`` were specified. (Jelmer Vernooij, #680449)

* ``launchpadlib`` doesn't provide the ``uris`` module in some old versions.
  (Vincent Ladeuil, #706835)

* Empty entries in the ``NO_PROXY`` variable are no longer treated as matching
  every host.
  (Martin Pool, #586341)

* Plugins incompatible with the current version of bzr no longer produce a
  warning on every command invocation.  Instead, a message is shown by
  ``bzr plugins`` and in crash reports.
  (#704195, Martin Pool)

* The "pretty" version of ``needs_read_lock`` and ``needs_write_lock`` now
  preserves the identity of default parameter values.
  (Andrew Bennetts, #718569)

* ``bzr dump-btree --raw`` no longer tracebacks on a B-Tree file
  containing no rows. (Eric Siegerman, #715508)

* Fix ``bzr lp-mirror`` to work on command line branch URLs and branches
  without an explicit public location. (Max Bowsher)

* On Python 2.6 and higher, use multiprocessing.cpu_count() to retrieve the
  number of available processors. (Jelmer Vernooij, #693140)

API Changes
***********

* Added ``Branch.heads_to_fetch`` method.  Implementions of the Branch API
  must now inherit or implement this method.  (Andrew Bennetts, #721328)
  
* Added ``bzrlib.mergetools`` module with helper functions for working with
  the list of external merge tools. (Gordon Tyler, #489915)

* All methods and arguments that were deprecated before 2.0
  have been removed. (Jelmer Vernooij)

* Branch formats should now be registered on the format registry
  (``bzrlib.branch.format_registry``) rather than using the class
  methods on ``BranchFormat``. (Jelmer Vernooij, #714729)

* ``BranchFormat.supports_leaving_lock()`` and
  ``RepositoryFormat.supports_leaving_lock`` flags have been added.
  (Jelmer Vernooij)

* ``Branch.fetch`` implementations must now accept an optional
  ``fetch_spec`` keyword argument. (Andrew Bennetts)

* ``Branch.import_last_revision_info`` is deprecated.  Use the
  ``import_last_revision_info_and_tags`` method instead.
  (Andrew Bennetts)

* Because it was too specific to BzrDir implementations,
  ``ControlDir.sprout`` no longer has a default implementation; it now
  raises ``NotImplementedError``. (Jelmer Vernooij, #717937)

* ``ControlDirFormat.register_format`` has been removed. Instead,
  ``Prober`` implementations should now implement a ``known_formats``
  method. (Jelmer Vernooij)

* ControlDirFormats can now provide a ``check_status`` method and
  raise a custom exception or warning when an unsupported or deprecated
  format is being opened.  (Jelmer Vernooij, #731311)

* ``bzrlib.revionspec.dwim_revspecs`` is deprecated.
  Use ``bzrlib.revisionspec.RevisionSpec_dwim.append_possible_revspec`` and
  ``bzrlib.revisionspec.RevisionSpec_dwim.append_possible_lazy_revspec``
  instead.  (Jelmer Vernooij, #721971)

* ``BzrDirFormat`` has a new attribute ``fixed_components`` that
  indicates whether the components of the bzrdir can be upgraded
  independent of the ``BzrDir``. (Jelmer Vernooij)

* ``BzrProber.register_format`` and ``BzrProber.unregister_format`` are
  now deprecated in favour of the ``BzrProber.formats`` format registry.
  (Jelmer Vernooij)

* ``ControlDir`` implementations no longer have to provide the
  ``get_branch_transport``, ``get_workingtree_transport`` and
  ``get_repository_transport`` methods.  (Jelmer Vernooij, #730325)

* ``Converter`` has been moved from ``bzrlib.bzrdir`` to
  ``bzrlib.controldir``. (Jelmer Vernooij)

* Repository formats can now provide
  ``_get_extra_interrepo_test_combinations`` in the same module 
  to provide extra test combinations for ``bzrlib.tests.per_repository``.
  (Jelmer Vernooij)

* Repository formats should now be registered on the format registry
  (``bzrlib.repository.format_registry``) rather than using the class
  methods on ``RepositoryFormat``. (Jelmer Vernooij)

* Repository formats can now indicate they do not support the full
  VersionedFiles API by setting the ``supports_full_versioned_files``
  attribute to False. A subset of the VersionedFiles API
  (signatures and text graphs) still needs to be supported.
  (Jelmer Vernooij)

* Repository formats have a new method ``is_deprecated`` that
  implementations can override to return True to trigger a deprecation
  warning. (Jelmer Vernooij)

* The ``revision_id`` parameter of
  ``Repository.search_missing_revision_ids`` and
  ``InterRepository.search_missing_revision_ids`` is deprecated.  It is
  replaced by the ``revision_ids`` parameter.  (Andrew Bennetts)

* Working tree formats should now be registered on the format registry
  (``bzrlib.working_tree.format_registry``) rather than using the class
  methods on ``WorkingTreeFormat``. (Jelmer Vernooij, #714730)

Internals
*********

* ``CatchingExceptionThread`` (formerly ThreadWithException) has been moved
  out of the ``bzrlib.tests`` hierarchy to make it clearer that it can be used
  outside of tests. This class makes it easier to track exceptions in threads
  by cacthing them so they can be re-raised in the controlling thread. It's
  available in the ``bzrlib.cethread`` module.  (Vincent Ladeuil)

* Correctly propogate malloc failures from diff-delta.c code as MemoryError
  so OOM conditions during groupcompress are clearly reported. This entailed a
  change to several function signatures. (Martin [gz], #633336)

* ``HookPoint.lazy_hook`` and ``Hooks.install_named_lazy_hook`` can install 
  hooks for which the callable is loaded lazily.  (Jelmer Vernooij)

Testing
*******

* The Range parsing for HTTP requests will correctly parse incomplete ranges.
  (Vincent Ladeuil, #731240)

..
   vim: tw=74 ft=rst ff=unix
