####################
Bazaar Release Notes
####################

.. toctree::
   :maxdepth: 1

bzr 2.5b4
#########

:2.5b4: NOT RELEASED YET

External Compatibility Breaks
*****************************

.. These may require users to change the way they use Bazaar.

New Features
************

.. New commands, options, etc that users may wish to try out.

Improvements
************

.. Improvements to existing commands, especially improved performance 
   or memory usage, or better results.

* When using ``bzr switch`` to switch to a sibling of the current
  branch, the relative branch name should no longer be url-encoded.
  (Jelmer Vernooij)

* ``bzr switch`` now accepts colocated branch names to switch to.
  (Jelmer Vernooij, #826814)

Bug Fixes
*********

.. Fixes for situations where bzr would previously crash or give incorrect
   or undesirable results.

* Allow lazy compiled patterns from ``bzrlib.lazy_regex`` to be
  pickled. (Jelmer Vernooij, #893149)

* A new section local option ``basename`` is available to help support some
  ``bzr-pipeline`` workflows and more generally help mapping local paths to
  remote ones. See ``bzr help configuration`` for more details.
  (Vincent Ladeuil, #843211)

* Add HPSS call for looking up revision numbers from revision ids on
  remote repositories. (Jelmer Vernooij, #640253)

* Cope with missing revision ids being specified to
  ``Repository.gather_stats`` HPSS call. (Jelmer Vernooij, #411290)

* Fix test failures on windows related to locations.conf handling.
  (Vincent Ladeuil, #892992)

* Fixed parsing of the timestamp given to ``commit --commit-time``. Now
  prohibits several invalid strings, reads the correct number of seconds,
  and gives a better error message if the time zone offset is not given.
  (Matt Giuca, #892657)

* Resolve regression from colocated branch path handling, by ensuring that
  unreserved characters are unquoted in URLs. (Martin Packman, #842223)

* Split segments from URLs for colocated branches without assuming the
  combined form is a valid. (Martin Packman, #842233)

* Support looking up revision numbers by revision id in empty branches.
  (Jelmer Vernooij, #535031)

* Support verifying signatures on remote repositories.
  (Jelmer Vernooij, #889694)

* Fixed parsing of the timestamp given to ``commit --commit-time``. Now
  prohibits several invalid strings, reads the correct number of seconds,
  and gives a better error message if the time zone offset is not given.
  (Matt Giuca, #892657)

Documentation
*************

.. Improved or updated documentation.

API Changes
***********

.. Changes that may require updates in plugins or other code that uses
   bzrlib.

* ``Repository.verify_revision`` has been renamed to
  ``Repository.verify_revision_signature``. (Jelmer Vernooij)

* ``Tree.get_file_by_path`` is now deprecated. Use ``Tree.get_file`` instead.
  (Jelmer Vernooij, #666897)

* Some global options for use with commands have been removed, construct
  an ``Option`` with the name instead. (Martin Packman)

Internals
*********

.. Major internal changes, unlikely to be visible to users or plugin 
   developers, but interesting for bzr developers.

* ``bzr config`` uses the new configuration implementation.
  (Vincent Ladeuil)

* ``RemoteBranch.get_config_stack`` and ``RemoteBzrDir.get_config_stack``
  will now use HPSS calls where possible. (Jelmer Vernooij)

* New HPSS calls ``Repository.has_signature_for_revision_id``,
  ``Repository.make_working_trees``, ``BzrDir.destroy_repository``,
  ``BzrDir.has_workingtree``, ``Repository.get_physical_lock_status``,
  ``Branch.get_physical_lock_status``,
  ``Branch.put_config_file``, ``Branch.break_lock``,
  ``BzrDir.destroy_branch``, ``Repository.break_lock``,
  ``VersionedFileRepository.get_serializer_format``,
  ``Repository.all_revision_ids``, ``Repository.start_write_group``,
  ``Repository.commit_write_group``, ``Repository.abort_write_group``
  ``Repository.check_write_group`` and
  ``Repository.add_signature_revision_text``.
  (Jelmer Vernooij)

* Add HPSS call for ``Repository.pack``. (Jelmer Vernooij, #894461)

* Custom HPSS error handlers can now be installed in the smart server client
  using the ``error_translators`` and ``no_context_error_translators``
  registries. (Jelmer Vernooij)

Testing
*******

.. Fixes and changes that are only relevant to bzr's test framework and 
   suite.  This can include new facilities for writing tests, fixes to 
   spurious test failures and changes to the way things should be tested.

* Avoid failures in test_transform when OS error messages are localised.
  (Martin Packman, #891582)

bzr 2.5b3
#########

:2.5b3: 2011-11-10

This is the third beta of the 2.5 series, leading to a 2.5.0 release in
February 2012. Beta releases are suitable for everyday use but may cause
some incompatibilities with plugins.

This release includes log options for ``push`` and ``pull``, more UI polish
for colocated branches, a better and more coherent implementation for UI
dialogs, enhancements to the config framework and more.

This release includes all bug fixed in previous series known at the time of
this release.

External Compatibility Breaks
*****************************

None

New Features
************

* The ``log_format`` configuration can be used with ``-Olog_format=line`` to
  change the format ``push`` and ``pull`` use to display the
  revisions. I.e.: ``bzr pull -v -Olog_format=short`` will use the ``short``
  format instead of the default ``long`` one. (Vincent Ladeuil, #861472)

* The new config scheme allows an alternative syntax for the 'appenpath'
  policy relying on option expansion and defining a new 'relpath' option
  local to a section. Instead of using '<option>:policy=appendpath', the
  option value can de defined as 'option=xxxx/{relpath}'.
  (Vincent Ladeuil, #832013)

Improvements
************

* ``bzr info -v`` now shows the number of colocated branches
  for control directories that support them.
  (Jelmer Vernooij, #863285)

* ``bzr version-info`` now takes a ``--revision`` argument.
  (Jelmer Vernooij, #238705)

* ``bzr revno`` now takes a ``--revision`` argument.
  (Jelmer Vernooij, #870649)

* ``bzr rmbranch`` can now remove colocated branches.
  (Jelmer Vernooij, #831464)

* ``bzr serve`` now can serve from URLs rather than just from the
  file system. I.e.: ``bzr serve -d lp:bzr`` or
  ``bzr serve -d file:///data/bzr`` (Jelmer Vernooij)

* all input prompts are now char-based when possible, and can be forced to
  line-based mode by setting the ``BZR_TEXTUI_INPUT`` environment variable
  to 'line-based'. This replace the previous shelf UI only patch using
  ``INSIDE_EMACS``. (Benoît Pierre)

Bug Fixes
*********

* ``bzr info`` now shows the master branch location too for
  treeless local branches. (Jelmer Vernooij, #258355)

* ``bzr info`` no longer shows empty output if only a control
  directory is present. (Jelmer Vernooij, #159098)

* ``bzr mkdir --quiet`` now does not print a line for every created
  directory. (Martin von Gagern, #869915)

* ``bzr mv`` does not crash when attempting to move the root of a
  branch. (Jonathan Riddell, #809728)

* ``bzr shelve`` now use ``UIFactory.choose`` for input handling, making
  it usable when creating a custom ``UIFactory`` implementation. (Benoît
  Pierre)

* ``bzr clean-tree`` now use ``UIFactory.get_boolean`` for confirmation
  prompt, making it usable when using a custom ``UIFactory``
  implementation. (Benoît Pierre)

* If sending a crash through Apport fails report the Apport failure to
  bzr.log rather than stderr. (Jonathan Riddell, #766735)

* ``bzr upgrade`` no longer treats 'already up-to-date' exceptions as
  errors. (Benoît Pierre, #716560).

* ``bzr version-info`` no longer populates the clean state for custom
  templates unless {clean} is explicitly asked for.
  (Lawrence Mitchell, #882541)

* Fix finding the CPU count when using Python >= 2.6 on BSD-based systems.
  (Jelmer Vernooij, #887151)

* ``WorkingTree.clone()`` now supports its ``revision_id`` being set
  to the null revision. (Jelmer Vernooij, #876423)

* ``WorkingTree.pull`` can now pull ``NULL_REVISION``.
  (Jelmer Vernooij, #887556)

API Changes
***********

* ``Branch.revision_history`` is now deprecated. (Jelmer Vernooij, #799519)

* Methods ``add`` and ``items`` of ``LRUCache`` and ``LRUSizeCache`` are
  deprecated. Use normal dict-style access instead. (Martin Packman)

* New flag ``RepositoryFormat.supports_unreferenced_revisions`` which
  indicates whether revisions can be present in a repository without
  being referenced from e.g. a branch history at the same time.
  (Jelmer Vernooij)

* New method ``Transport.set_segment_parameter``.  (Jelmer Vernooij)

* ``UIFactory.choose`` has been added: prompt the user for a list of
  choices. (Benoît Pierre)

Internals
*********

* ``ControlDirFormat`` now has a new method ``supports_transport``
  which format implementations can use whether or not they can access
  a control dir over a particular transport. (Jelmer Vernooij)

* ``BranchBuilder.build_commit`` now take ``parent_ids`` and
  ``allow_leftmost_as_ghost`` arguments.  (Jelmer Vernooij)

Testing
*******

* Ensure TestCase instances are deallocated immediately after running where
  possible. This greatly reduces the peak resource needs of a full test suite
  run. The new ``-Euncollected_cases`` selftest flag will add failures if any
  case which persists pasts its expected lifetime. (Martin Packman, #613247)

* Report exceptions from child processes during fork instead of swallowing the
  error and reporting that everything went okay. (Martin Packman, #804130)


bzr 2.5b2
#########

This is the second beta of the 2.5 series, leading to a 2.5.0 release in
February 2012. Beta releases are suitable for everyday use but may cause some
incompatibilities with plugins.

This release includes more filtering options for ``bzr log``, idle
connections handling for ``bzr serve``, a ``development-colo`` experimental
format to flesh out the colocated branches UI, better support for foreign
formats, enhancements to the config framework and more.

This release includes all bug fixed in previous series known at the time of
this release.

:2.5b2: 2011-10-06

External Compatibility Breaks
*****************************

None

New Features
************

* A new ``-O`` standard option (common to all commands) have been added. It
  provides a value for a config option in the ``-Oname=value`` form that
  takes precedence over all definitions found in config files.  It can be
  used multiple times to override different options.
  (Vincent Ladeuil, #491196)

* ``bzr log`` now has an option called ``--omit-merges`` to omit
  those commits that merged branches, i.e. those having more than one
  parent.
  In order to avoid confusion, the previous command line option
  ``--include-merges`` has been renamed to ``--include-merged``.
  The old name of the command line option will still be accepted.
  The name change also affects ``bzr missing``.
  (Martin von Gagern)

* ``bzr serve`` will now disconnect clients if they have not issued an RPC
  request after 5minutes. On POSIX platforms, this will also happen for
  ``bzr serve --inet``. This can be overridden with the configuration
  variable ``serve.client_timeout`` or in the command line parameter
  ``bzr serve --client-timeout=X``. Further, it is possible to request
  ``bzr serve [--inet]`` to shutdown gracefully by sending SIGHUP. It will
  finish the current request, and then close the connection.
  (John Arbash Meinel, #824797, #795025)

* The new experimental format ``development-colo`` supports colocated
  branches. This format will eventually be merged back into the ``2a``
  format when it has stabilized and there is adequate UI support for
  colocated branches.
  (Jelmer Vernooij, #831481)

Improvements
************

* Fixed a bug where ``bzr tags -r x..y`` loaded the branch history once for
  every revision in the range; it's now much faster. (Vincent Ladeuil, #857335)

* ``bzr info -v`` can now be run against branches that don't support
  ``last_revision_info``, in which case the branch information will simply
  not be displayed. (Jelmer Vernooij)

Bug Fixes
*********

* ``bzr shelve`` can now be used in emacs shells as the input handling is
  turned into a line-based one when ``INSIDE_EMACS`` is set (which is the
  case for all recent emacs versions). (Vincent Ladeuil, #856261)

* ``bzr tags`` can now be used against remote repositories that do
  not provide access to the revision graph. (Jelmer Vernooij, #858942)

* ``bzr update PATH`` will stop if you seem to be asking it to update
  anything less than a whole tree, because that's not supported by ``bzr``'s
  concept that the whole tree has a single basis revision.  Previously, it
  would go ahead and update the whole tree, which was surprising.
  (Martin Pool, #557886)

* Don't crash if ``bzrlib.initialize()`` has not been called while accessing
  configs.  (Vincent Ladeuil, #863401)

* Redirects between http and https no longer discard path information
  in some cases. (Jelmer Vernooij, #853765)

* The ``--overwrite`` argument to ``bzr push`` and ``bzr pull`` no longer
  reports all tags as changed. (Jelmer Vernooij, #845396)

* ``WorkingTree.get_file_mtime`` now raises NoSuchId if a file id is
  specified that is unknown. (Jelmer Vernooij, #847435)


API Changes
***********

* ``Branch.get_revision_delta`` has been deprecated. Use
  ``Repository.get_revision_delta`` instead. (Jelmer Vernooij, #859712)

* Plugins that implement custom protocols for ``bzr serve`` should now
  also take an argument ``timeout``. This is used by the the bzr protocol
  to close a connection if a client has been idle for more than X seconds.
  (Default 5minutes). (John Arbash Meinel)

* ``Repository.fileids_altered_by_revision_ids`` has been moved to
  ``VersionedFileRepository`` and is no longer part of the standard
  ``Repository`` interface. (Jelmer Vernooij)

* The argument ``include_merges`` to ``missing.find_unmerged`` has
  been renamed to ``include_merged``. The old name is still supported
  for now but will cause a deprecation warning. (Martin von Gagern)

* The new method ``ControlDirFormat.is_initializable()`` returns a boolean
  indicating whether or not it is possible to use any of the
  initialization methods of that format to create a new control dir.
  (Jelmer Vernooij)

Internals
*********

* ``Branch`` objects can now use a config stack with the newly introduced
  ``get_config_stack()``. Both ``get_config`` and ``get_config_stack`` can
  be used for the same branch but it's recommended to stick to one for a
  given option.

Testing
*******

* Test scripts can now use ``bzr shelve`` and provide their input as
  complete lines. (Vincent Ladeuil, #856261)

* Really corrupt the pack file without depending on a special length or value.
  (Vincent Ladeuil, #807032)


bzr 2.5b1
#########

:2.5b1: 2011-09-15

This is the first beta of the 2.5 series, leading up to a 2.5.0
release in February 2012.

This release includes better support for gpg signing, better support for
i18n (mostly command help and error messages), more options to filter ``bzr
log`` output, more support for colocated branches ("location,branch=XXX"
syntax), better feedback on updated tags for various commands, faster
branching into an empty repository, enhancements to the config framework and
more.

Beta releases are suitable for everyday use but may cause some
incompatibilities with plugins.  Some plugins may need small updates to work
with 2.5b1.

External Compatibility Breaks
*****************************

None

New Features
************

* A ``from_unicode`` parameter can be specified when registering a config
  option. This implements boolean, integer and list config options when the
  provided ``bool_from_store``, ``int_from_store`` and ``list_from_store``
  are used for this parameter.  (Vincent Ladeuil)

* Accessing a packaging branch on Launchpad (eg, ``lp:ubuntu/bzr``) now
  checks to see if the most recent published source package version for
  that project is present in the branch tags. This should help developers
  trust whether the packaging branch is up-to-date and can be used for new
  changes. The level of verbosity is controlled by the config item
  ``launchpad.packaging_verbosity``. It can be set to one of

  off
    disable all checks


  minimal
    only display if the branch is out-of-date

  short
    also display single-line up-to-date and missing,


  all
    (default) display multi-line content for all states


  (John Arbash Meinel, #609187, #812928)

* Add a config option gpg_signing_key for setting which GPG key should
  be used to sign commits. Also default to using the gpg user identity
  which matches user_email() as set by whoami.
  (Jonathan Riddell, #68501)

* An ``invalid`` parameter can be specified when registering a config option
  to decide what should be done when invalid values are
  encountered. 'warning' and 'error' will respectively emit a warning and
  ignore the value or errors out. (Vincent Ladeuil)

* bzr add now skips large files in recursive mode. The default "large"
  size is 20MB, and is configurable via the add.maximum_file_size
  option. A value of 0 disables skipping. Named items passed to add are
  never skipped. (Shannon Weyrick, #54624)

* ``bzr help configuration/<option>`` display the help for ``option`` for
  all registered configuration options. (Vincent Ladeuil, #747050)

* ``bzr log -m`` now matches message, author, committer and bugs instead
  of just matching the message.  ``--message`` keeps its original meaning,
  while ``--match-message, --match-author, --match-committer`` and
  ``--match-bugs`` match each of those fields. (Jacek Sieka)

* ``config.Option`` can now declare ``default_from_env``, a list of
  environment variables to get a default value from. (Vincent Ladeuil)

* ``config.NameMatcher`` can be used to implement config stores and stacks
  that need to provide specific option values for arbitrary unique IDs (svn
  repository UUIDs, etc).  (Vincent Ladeuil, #843638)

* New builtin ``bzr branches`` command, which lists all colocated branches
  in a directory. (Jelmer Vernooij, #826820)

* Relative local paths can now be specified in URL syntax by using the
  "file:" prefix.  (Jelmer Vernooij)

* Report commits signed with expired keys in ``verify-signatures``.
  (Jonathan Riddell, #804254)

* Translations are now enabled for command help, errors and globally
  for any message using ``gettext`` given on output.  (Jonathan Riddell,
  INADA Naoki, #83941)

Improvements
************

* ``bzr add`` will now warn about nested subtrees that are skipped.
  (Jelmer Vernooij, #187342)

* ``bzr commit -m ''`` can now be used to force an empty commit message.
  Entering an empty commit message in the message editor still triggers
  an error. (Jelmer Vernooij)

* ``bzr pull`` will now mention how many tags it has updated.
  (Jelmer Vernooij, #164450)

* ``bzr tag`` no longer errors if a tag already exists but refers to the
  same revision, and will mention when a tag has been updated
  rather than created. (Jelmer Vernooij, #381203)

* ``bzr uncommit`` will now remove tags that refer to removed revisions.
  The ``--keep-tags`` option can be used to prevent this behaviour.
  (Jelmer Vernooij, #605814)

* Do not run i18n initialisation twice. (Jonathan Riddell)

* Install translation .mo files. (Jonathan Riddell)

* Locations printed by ``bzr upgrade`` are now formatted before display.
  (Jelmer Vernooij)

* ``Repository.get_parent_map`` now estimates the size of the returned
  content more accurately. This means that we get closer to the desired
  64kB/request. For repositories converted from svn, this can be an
  improvement of approx 5:1 in round trips to discover the whole history.
  (John Arbash Meinel)

* Support a ``bugtracker`` option which is used by ``bzr commit --fixes``
  if no bug tracker was specified on the command line.
  (Jelmer Vernooij, #334860)

* Use ``gettext.NullTranslations`` in i18n to allow use of i18n even when
  translations are not turned on. (Jonathan Riddell)

Bug Fixes
*********

* ``bzr commit`` now correctly reports missing files as "removed", not
  "modified". (Jelmer Vernooij, #553955)

* ``bzr reconfigure`` will now allow multiple non-conflicting requests
  in a single invocation, e.g. ``--branch`` and ``--use-shared``.
  (Martin von Gagern, #842993)

* A call to CHKInventory's filter-method will not result in a
  DuplicateFileId error, if you move a subfolder and change a file in
  that subfolder.
  (Bastian Bowe, #809901)

* Branching from a stacked branch no longer does a ``get_parent_map``
  request for each revisions that is in the stacked-on repository while
  determining what revisions need to be fetched. This mostly impacts
  branching initialy into an empty shared repository when the source is
  not the development focus.  (John Arbash Meinel, #388269)

* Decode ``BZR_HOME`` with fs encoding on posix platforms to avoid unicode
  errors.  (Vincent Ladeuil, #822571)

* Fix fallout from URL handling changes in 2.5 that caused an IndexError to be
  raised whenever a transport at the drive root was opened on windows.
  (Martin [gz], #841322)

* Fixed loading of external merge tools from config to properly decode
  command-lines which contain embedded quotes. (Gordon Tyler, #828803)

* Rather than an error being raised, a warning is now printed when the
  current user does not have permission to read a configuration file.
  (Jelmer Vernooij, #837324)

* The pull command will now always use separate connections for the
  case where the destination is a heavyweight checkout of some remote
  branch on the same host as the source branch.
  (Martin von Gagern, #483661)

* TreeTransformBase.fixup_new_roots no longer forces trees to have a root, so
  operations that use it, like merge, can now create trees without a root.
  (Aaron Bentley)

* Raise BadIndexKey exception in btree_index when a key is too large, fixing 
  an infinite recursion issue. (Shannon Weyrick, #720853)

Documentation
*************

* Release instructions refreshed. (Vincent Ladeuil)

API Changes
***********

* ``BranchFormat.initialize`` now takes a ``append_revisions_only``
  argument. (Jelmer Vernooij)

* ``Branch._get_checkout_format`` now takes a ``lightweight`` argument
  which indicates if the format should be for a lightweight or a
  heavyweight checkout. (Jelmer Vernooij)

* ``ControlDir.create_branch`` now takes a ``append_revisions_only`` argument.
  (Jelmer Vernooij)

* New class ``URL`` in ``bzrlib.utils`` for managing parsed URLs.
  (Jelmer Vernooij)

* New method ``Config.get_user_option_as_int_from_SI`` added for expanding a
  value in SI format (i.e. "20MB", "1GB") into its integer equivalent. 
  (Shannon Weyrick)

* New method ``InterTree.file_content_matches`` which checks that
  two files in different trees have the same contents.
  (Jelmer Vernooij)

* New method ``Tree.get_file_verifier`` which allows tree implementations
  to return non-sha1 checksums to verify files.
  (Jelmer Vernooij, #720831)

* New methods ``get_transport_from_path`` and ``get_transport_from_url``
  have been added that only support opening from a path or a URL,
  unlike ``get_transport``. (Jelmer Vernooij)

* New registry ``OptionRegistry`` specialized for configuration options.
  (Vincent Ladeuil)

* Remove ``AtomicFile.closed`` which has been deprecated in bzr 0.10.
  (Vincent Ladeuil)

* Remove ``commands._builtin_commands``, ``commands.shlex_split_unicode``,
  ``Command._maybe_expand_globs`` and ``Command.run_direct`` deprecated in
  2.10 and 2.2.0. (Vincent Ladeuil)

* Remove ``diff.get_trees_and_branches_to_diff`` deprecated in 2.2.0.

* Remove ``log.calculate_view_revisions``, ``log._filter_revision_range``,
  ``log.get_view_revisions`` which have been deprecated in bzr 2.1.0. Also
  remove ``log.show_one_log`` which was never properly deprecated but wasn't
  used and is easy to inline if needed. (Vincent Ladeuil)

* Remove ``trace.info``, ``trace.error`` and ``trace.show_log_error``
  deprecated in 2.1.0. (Vincent Ladeuil)

* Remove ``TransportListRegistry.set_default_transport``, as the concept of
  a default transport is currently unused. (Jelmer Vernooij)

* Remove ``UIFactory.warn_cross_format_fetch`` and
  ``UIFactory.warn_experimental_format_fetch`` in favor of
  ``UIFactory.show_user_warning``. (Jelmer Vernooij)

* ``Tags`` containers can now declare whether they support versioned
  tags and whether tags can refer to ghost tags.
  (Jelmer Vernooij)

* ``Tags.merge_to`` now returns a dictionary with the updated tags
  and a set of conflicts, rather than just conflicts. (Jelmer Vernooij)

* There is a new class `ContentFilterTree` that provides a facade for 
  content filtering.  The `filtered` parameter to `export` is deprecated 
  in favor of passing a filtered tree, and the specific exporter plugins
  no longer support it.
  (Martin Pool)

* ``Transport`` now has a ``_parsed_url`` attribute instead of
  separate ``_user``, ``_password``, ``_port``, ``_scheme``, ``_host``
  and ``_path`` attributes. Proxies are provided for the moment but
  may be removed in the future. (Jelmer Vernooij)

Internals
*********

* A new debug flag ``hpss_client_no_vfs`` will now cause the HPSS client
  to raise a ``HpssVfsRequestNotAllowed`` exception when a VFS request
  is attempted. (Jelmer Vernooij)

* New method ``ControlDir._get_selected_branch`` which returns the
  colocated branch selected using path segment parameters.
  (Jelmer Vernooij, #380871)

Testing
*******

* Blackbox tests (including test scripts) can be debugged interactively (see
  bzrlib.debug.BzrPdb for details). (Vincent Ladeuil)

* `BranchBuilder.build_snapshot` now supports a "flush" action.  This
  cleanly and reliably allows tests using `BranchBuilder` to construct
  branches that e.g. rename files out of a directory and unversion that
  directory in the same revision.  Previously some changes were impossible
  due to the order that `build_snapshot` performs its actions.
  (Andrew Bennetts)

* Don't require ``os.fdatasync`` to be defined on all supported OSes
  (BSD-based OSes don't define it).  (Vincent Ladeuil, #822649)

* Fix compatibility with testtools 0.9.12. (Jelmer Vernooij, #815423)

* ``LockDir`` can now be run when the local hostname is ``localhost``.
  (Jelmer Vernooij, #825994)

* ``ModuleAvailableFeature`` won't try to import already imported modules,
  allowing it to be used for modules with side-effects.
  (Vincent Ladeuil, #712474)

* Output time stamps while running ``make check`` to get better timings from
  pqm.  (Vincent Ladeuil, #837926)

* `TestCaseWithMemoryTransport` is faster now: `_check_safety_net` now
  just compares the bytes in the dirstate file to its pristine state,
  rather than opening the WorkingTree and calling ``last_revision()``.
  This reduces the overall test suite time by about 10% on my laptop.
  (Andrew Bennetts)

* Update `TestCase.knownFailure` to the testtools way of handling expected
  failures to resolve Python 2.7 incompatibility. (Martin [gz], #607400)

..
   vim: tw=74 ft=rst ff=unix
