####################
Bazaar Release Notes
####################

.. toctree::
   :maxdepth: 1

bzr 2.5b1
#########

:2.5b1: NOT RELEASED YET

External Compatibility Breaks
*****************************

.. These may require users to change the way they use Bazaar.

New Features
************

.. New commands, options, etc that users may wish to try out.

* bzr log -m now matches message, author, committer and bugs instead
  of just matching the message.  --message keeps its original meaning,
  while --match-message, --match-author, --match-committer and
  --match-bugs match each of those fields.

* Add a config option gpg_signature_key for setting which GPG key
  should be used to sign commits. Also default to using the gpg user
  identity which matches user_email() as set by whoami.

Improvements
************

.. Improvements to existing commands, especially improved performance 
   or memory usage, or better results.

Bug Fixes
*********

.. Fixes for situations where bzr would previously crash or give incorrect
   or undesirable results.

* TreeTransformBase.fixup_new_roots no longer forces trees to have a root, so
  operations that use it, like merge, can now create trees without a root.
  (Aaron Bentley)

Documentation
*************

.. Improved or updated documentation.

API Changes
***********

.. Changes that may require updates in plugins or other code that uses
   bzrlib.

* Remove ``commands._builtin_commands``, ``commands.shlex_split_unicode``,
  ``Command._maybe_expand_globs`` and ``Command.run_direct`` deprecated in
  2.10 and 2.2.0 and one corresponding test. (Vincent Ladeuil)

* Remove ``trace.info``, ``trace.error`` and ``trace.show_log_error``
  deprecated in 2.1.0. (Vincent Ladeuil)

Internals
*********

.. Major internal changes, unlikely to be visible to users or plugin 
   developers, but interesting for bzr developers.

Testing
*******

.. Fixes and changes that are only relevant to bzr's test framework and 
   suite.  This can include new facilities for writing tests, fixes to 
   spurious test failures and changes to the way things should be tested.

* `BranchBuilder.build_snapshot` now supports a "flush" action.  This
  cleanly and reliably allows tests using `BranchBuilder` to construct
  branches that e.g. rename files out of a directory and unversion that
  directory in the same revision.  Previously some changes were impossible
  due to the order that `build_snapshot` performs its actions.
  (Andrew Bennetts)

* `TestCaseWithMemoryTransport` is faster now: `_check_safety_net` now
  just compares the bytes in the dirstate file to its pristine state,
  rather than opening the WorkingTree and calling ``last_revision()``.
  This reduces the overall test suite time by about 10% on my laptop.
  (Andrew Bennetts)

..
   vim: tw=74 ft=rst ff=unix
