Core concepts
=============

A simple user model
-------------------

The user model on which Bazaar is based has 4 core concepts:

 * revisions
 * working trees
 * branches
 * repositories.

These are explained below.

Revision
--------

A revision is a *snapshot* of the state of a tree of files and directories
including their content and shape. A revision also has some metadata
associated with it including:

 * who committed it
 * when it was committed
 * a commit message
 * parent revisions from which it was derived.

Revisions are immutable and can be globally identified by a unique identifier
called the *rev-id*.

*TODO: add diagram*

Working Tree
------------

A working tree is a *version controlled directory* holding files the user
can edit. A working tree is associated with a *branch*.

Many commands use the working tree as their context, e.g. ``commit`` makes
a new revision using the current content of files in the working tree.

*TODO: add diagram*

Branch
------

In the simplest case, a branch is an *ordered series of revisions*.
The last revision is known as the *head*.

Branches may split apart and be *merged* back together forming a
so called *directed acyclic graph* (DAG). The primary line of development
within the DAG is called the *mainline*, *trunk* or simply the
*left hand side* (LHS).

*TODO: add diagram*

Repository
----------

A repository is simply a *store of revisions*. In the simpliest case,
each branch has its own repository. In other cases, it makes sense for
branches to share a repository in order to optimize disk usage.

*TODO: add diagram*


Putting the concepts together
-----------------------------

Once the concepts above are understood, the various ways of using Bazaar
are easier to understand. The simpliest way of using Bazaar is to use
a *standalone tree* which has a working tree, branch and repository
all in a single location. Other common scenarios include:

 * *shared repositories* - working tree and branch are collocated
   but the repository is in a higher level directory

 * *lightweight checkouts* - branch is stored is a different location
   to the working tree.

The best way to use Bazaar depends on what you want to do so let's look
at some common workflows next.
