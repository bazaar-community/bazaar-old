=================================
Bazaar Developer Document Catalog
=================================

Bazaar user documentation is in the 
`Main Document Catalog <../index.html>`_.

Overall developer documentation
===============================

* `Developer Guide <../en/developer-guide/HACKING.html>`_

* `Architectural Overview <overview.html>`_ |--| describes some of the
  most important classes and concepts.

* `bzrlib API reference <http://starship.python.net/crew/mwh/bzrlibapi/>`_ 
  (external link)
  |--| automatically generated API reference information

* `Integrating with Bazaar <http://bazaar-vcs.org/Integrating_with_Bazaar>`_
  (wiki) |--| a guide for writing Python programs that work with Bazaar.

* `Testing <testing.html>`_ |--| Testing bzr.

* `Writing plugins <http://bazaar-vcs.org/WritingPlugins>`_ (wiki) 
  |--| specific advice on writing Bazaar plugins.

Process
=======

* `The Bazaar Development Cycle <cycle.html>`_ |--| The monthly
  development cycle and how to run it.
  
* `Releasing Bazaar <releasing.html>`_ |--| 
  Checklist to make a release of Bazaar.

* `Managing the Bazaar PPA <ppa.html>`_ |--| Packaging Bazaar for Ubuntu.

* `Giving back <http://bazaar-vcs.org/BzrGivingBack>`_ (wiki) |--| How to get
  your changes to Bazaar integrated into a release.

* `Profiling notes <profiling.html>`_ |--| Instructions on how to profile 
  bzr code and visualize the results.

* `EC2 Windows server <ec2-windows.html>`_ |--| A team resource for 
  Windows packaging and testing.

Plans
=====

* `Performance roadmap <performance-roadmap.html>`_ |--| The roadmap 
  for fixing performance in bzr over the next few releases.

Specifications
==============

* `API versioning <api-versioning.html>`_ |--| bzrlib API versioning.

* `Authentication ring <authentication-ring.html>`_ |--| Configuring
  authentication.

* `Bundles <bundles.html>`_ |--| All about bzr bundles.

* `Container format <container-format.html>`_ |--| Notes on a container format
  for streaming and storing Bazaar data.

* `Repository stream <repository-stream.html>`_ |--| Notes on streaming data
  for repositories (a layer above the container format).

* `Indices <indices.html>`_ |--| The index facilities available within bzrlib.

* `Inventories <inventory.html>`_ |--| Tree shape abstraction.

* `LCA merge <lca-merge.html>`_ |--| A nice new merge algorithm.

* `Network protocol <network-protocol.html>`_ |--| Custom network protocol.

* `Plugin APIs <plugin-api.html>`_ |--| APIs plugins should use.

* `Repositories <repository.html>`_ |--| What repositories do and are used for.

* `Integration Guide <integration.html>`_ |--| A guide to integrate bzrlib into
  any python application.

* `Bazaar and case-insensitive file systems <case-insensitive-file-systems.html>`_
  |--| How Bazaar operates on case-insensitive file systems such as commonly
  found on Windows, USB sticks, etc.

Data formats
============

* `Knit pack repositories <packrepo.html>`_ |--| KnitPack repositories 
  (new in Bazaar 0.92).

Uncategorized documents
=======================

* `BTree Index Prefetch <btree_index_prefetch.html>`_

* `co-located branches <colocated-branches.html>`_

* `Development repository formats <development-repo.html>`_

* `??? <dirstate.html>`_

* `Computing last_modified values <last-modified.html>`_

* `LCA Tree Merging <lca_tree_merging.html>`_

* `Revision Properties <revision-properties.html>`_

* `Bazaar Windows Shell Extension Options <tortoise-strategy.html>`_

* `"bzr update" performance analysis <update.html>`_


.. |--| unicode:: U+2014

..
   vim: ft=rst tw=74 ai
